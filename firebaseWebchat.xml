<?xml version="1.0" encoding="UTF-8" ?>

<Module>

    <ModulePrefs title="Revel Video Chat" description="Video Chat Gadget" author="RevelDigital" background="transparent">    
        <UserPref name="rdW" display_name="Width" required="true" default_value="280" datatype="hidden" />
        <UserPref name="rdH" display_name="Height" required="true" default_value="190" datatype="hidden" />        
    </ModulePrefs>
<Content type="html">

<![CDATA[
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <script src="https://www.gstatic.com/firebasejs/3.9.0/firebase.js"></script>
    <script src="https://www.gstatic.com/firebasejs/3.9.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/3.9.0/firebase-database.js"></script>
    <script src="https://www.gstatic.com/firebasejs/3.9.0/firebase-messaging.js"></script>
    <script src="https://www.gstatic.com/firebasejs/3.6.4/firebase.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body
          {
            background: transparent;
          }
        #friendsVideo{
            background-color: #ddd;
            border-radius: 7px;
            width: 100%;
            height: 100%;
        }
        #yourVideo{
            background-color: #ddd;
            border-radius: 7px;
            position: absolute;
            left: 0px;
            top: 0px;
            max-width: 30%;
            max-width: 30%;
        }
        button {
            margin: 5px 0 0 10px !important;
            width: 654px;
        }
        .deactiveButton{

        }
    </style>





</head>
<body>

    <video id="yourVideo" autoplay muted></video>
    <video id="friendsVideo" autoplay></video>
    <br />
    <div>
        <button onclick="endCall(); " type="button" class="deactiveButton btn btn-primary btn-lg">
            <span class="glyphicon glyphicon-facetime-video" aria-hidden="true"></span> End Call
        </button>
    </div>



<script>
    //this makes sure that our code will work on different browsers
    var RTCPeerConnection = window.webkitRTCPeerConnection;

    var config = {
        apiKey: "AIzaSyDbrUTVn85--4raiUeFC6D5R6rM852r4go",
        authDomain: "vidchat2-2a0ae.firebaseapp.com",
        databaseURL: "https://vidchat2-2a0ae.firebaseio.com",
        projectId: "vidchat2-2a0ae",
        storageBucket: "vidchat2-2a0ae.appspot.com",
        messagingSenderId: "874747320746"
    };
    firebase.initializeApp(config);

    firebase.auth().signInAnonymously().catch(function(error) {
        // Handle Errors here.
        let errorCode = error.code;
        let errorMessage = error.message;
        // ...
    });

    firebase.auth().onAuthStateChanged(function(user) {
        if (user) {
            // User is signed in.
            let isAnonymous = user.isAnonymous;
            let uid = user.uid;

            // ...
        } else {
            // User is signed out.
            // ...
        }
        // ...
    });
    let database = firebase.database().ref();
    let yourVideo = document.getElementById("yourVideo");
    let friendsVideo = document.getElementById("friendsVideo");
    let yourId = Math.floor(Math.random()*1000000000);
    let servers = {'iceServers': [{'url': 'stun:stun.services.mozilla.com'}, {'url': 'stun:stun.l.google.com:19302'}, {'url': 'turn:numb.viagenie.ca','credential': 'webrtc','username': 'websitebeaver@mail.com'}]};
    let pc = new RTCPeerConnection(servers);
    pc.onicecandidate = (event => event.candidate?sendMessage(yourId, JSON.stringify({'ice': event.candidate})):console.log("Sent All Ice"));
    pc.onaddstream = (event => friendsVideo.srcObject = event.stream);

    function sendMessage(senderId, data) {
        var msg = database.push({ sender: senderId, message: data });
        msg.remove();
    }

    function readMessage(data) {
        var msg = JSON.parse(data.val().message);
        var sender = data.val().sender;
        if (sender != yourId) {
            if (msg.ice != undefined)
                pc.addIceCandidate(new RTCIceCandidate(msg.ice));
            else if (msg.sdp.type == "offer")
                pc.setRemoteDescription(new RTCSessionDescription(msg.sdp))
                    .then(() => pc.createAnswer())
                    .then(answer => pc.setLocalDescription(answer))
                    .then(() => sendMessage(yourId, JSON.stringify({'sdp': pc.localDescription})));
            else if (msg.sdp.type == "answer")
                pc.setRemoteDescription(new RTCSessionDescription(msg.sdp));
        }
    };

    database.on('child_added', readMessage);

    function showMyFace() {
        navigator.mediaDevices.getUserMedia({audio:true, video:true})
            .then(stream => yourVideo.srcObject = stream)
            .then(stream => pc.addStream(stream));
    }

    function initiateCall() {
        showMyFace();
        pc.createOffer()
            .then(offer => pc.setLocalDescription(offer) )
            .then(() => sendMessage(yourId, JSON.stringify({'sdp': pc.localDescription})) );
    }
    function endCall(){
        location.reload();
    }
</script>
</body>
</html>
        
        ]]>
    </Content>

</Module>
