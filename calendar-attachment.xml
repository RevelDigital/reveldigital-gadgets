<?xml version="1.0" encoding="UTF-8" ?> 
<Module> 
<ModulePrefs title="Calendar Attachment Gadget" author="RevelDigital">
</ModulePrefs>
<Content type="html">
<![CDATA[
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<script src="https://reveldigital.github.io/reveldigital-gadgets/third-party/tabletop.js" type="text/javascript"></script>

<script type="text/javascript">
	var CLIENT_ID = '630043808561-e4etk2jduo1e0fplppqrrmf4ltfk3lrn.apps.googleusercontent.com';
	var SCOPES = ["https://www.googleapis.com/auth/calendar.readonly"];
	gadgets.util.registerOnLoadHandler(initialize);
 
	function initialize() {		
		checkAuth();
	}
	
	function checkAuth() {
        gapi.auth.authorize(
          {
            'client_id': CLIENT_ID,
            'scope': SCOPES.join(' '),
            'immediate': true
          }, handleAuthResult);
      }

      /**
       * Handle response from authorization server.
       *
       * @param {Object} authResult Authorization result.
       */
      function handleAuthResult(authResult) {
        var authorizeDiv = document.getElementById('authorize-div');
        if (authResult && !authResult.error) {
          // Hide auth UI, then load client library.
          authorizeDiv.style.display = 'none';
          loadCalendarApi();
        } else {
          // Show auth UI, allowing the user to initiate authorization by
          // clicking authorize button.
          authorizeDiv.style.display = 'inline';
        }
      }

      /**
       * Initiate auth flow in response to user clicking authorize button.
       *
       * @param {Event} event Button click event.
       */
      function handleAuthClick(event) {
        gapi.auth.authorize(
          {client_id: CLIENT_ID, scope: SCOPES, immediate: false},
          handleAuthResult);
        return false;
      }

      /**
       * Load Google Calendar client library. List upcoming events
       * once client library is loaded.
       */
      function loadCalendarApi() {
        gapi.client.load('calendar', 'v3', listUpcomingEvents);
      }

      /**
       * Print the summary and start datetime/date of the next ten events in
       * the authorized user's calendar. If no events are found an
       * appropriate message is printed.
       */
      function listUpcomingEvents() {
        var request = gapi.client.calendar.events.list({
          'calendarId': 'primary',
          'timeMin': (new Date()).toISOString(),
          'showDeleted': false,
          'singleEvents': true,
          'maxResults': 10,
          'orderBy': 'startTime'
        });

        request.execute(function(resp) {
          var events = resp.items;
          appendPre('Upcoming events:');

          if (events.length > 0) {
            for (i = 0; i < events.length; i++) {
              var event = events[i];
              var when = event.start.dateTime;
              if (!when) {
                when = event.start.date;
              }
			  
			  console.log(event);
			  var attachment = event.attachments[0].fileUrl;
			  var container = document.getElementById('pic_container');
			  
			  
			var image = document.createElement("img");
			image.src = attachment;
			container.appendChild(image);
			
			window.location.href = attachment;
			  
              appendPre(event.summary + ' (' + when + ')')
            }
          } else {
            appendPre('No upcoming events found.');
          }

        });
      }

      /**
       * Append a pre element to the body containing the given message
       * as its text node.
       *
       * @param {string} message Text to be placed in pre element.
       */
      function appendPre(message) {
        var pre = document.getElementById('output');
        var textContent = document.createTextNode(message + '\n');
        pre.appendChild(textContent);
      }
	  
	  function setInfo(data) {
			if (true) {
				var container = $('#infoContainer');
				container.append(data + '<br>');
			}	
			if (true) {
				console.log(data);
			}
		}
</script>
<body>
	<p>GADGET</p>
	<p id="infoContainer"></p>
    <div id="authorize-div" style="display: none">
      <span>Authorize access to Google Calendar API</span>
      <!--Button for the user to click to initiate auth sequence -->
      <button id="authorize-button" onclick="handleAuthClick(event)">
        Authorize
      </button>
    </div>
	<div id="pic_container">
	
	</div>
    <pre id="output"></pre>
</body>]]>
</Content>
</Module>