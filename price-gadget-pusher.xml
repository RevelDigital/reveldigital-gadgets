<?xml version="1.0" encoding="UTF-8" ?> 
<Module> 
<ModulePrefs title="RevelDigital Price Gadget" description="Gets and displays a price" author="RevelDigital" background="transparent">
  <UserPref name="apikey" display_name="Account Api Key" datatype="string" />
  <UserPref name="deviceNameTag" display_name="Default Device Group" datatype="string"  />
  <UserPref name="gadgetKey" display_name="MSG Gadget Key" datatype="string" />
  <UserPref name="groupName" display_name="MSG Group Name" datatype="string" />
  <UserPref name="price-style" display_name="Text Style" datatype="style" default_value="font-family:Verdana;color:rgb(0, 0, 0);font-size:24px;" required="true" />
  <UserPref name="font-name" display_name="Google Font Name. More at https://www.google.com/fonts" datatype="string" default_value="Droid Sans"/>
  <UserPref name="gadgetWidth" display_name="Width" required="true" default_value="100" datatype="hidden" />
  <UserPref name="gadgetHeight" display_name="Height" required="true" default_value="100" datatype="hidden" />
</ModulePrefs>
<Content type="html">
<![CDATA[
<script src="https://ajax.googleapis.com/ajax/libs/webfont/1.5.18/webfont.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
 <script src="https://js.pusher.com/3.0/pusher.min.js"></script>
<style type="text/css">
	body {
		background: transparent;
		overflow: hidden; 
		height: 100%;
		width: 100%;
	}
	
	#priceContainer {
		__UP_price-style__;
		font-family: __UP_font-name__, sans-serif !important;
		
	}
	
	#infoContainer {
		font-size: 75%;
		color: white;
	}
</style>

<body>
	<p id="priceContainer"></p>
	<p id="infoContainer"></p>
</body>

<script type="text/javascript">
		var prefs = new gadgets.Prefs();
		
		var DELAY = 300000;
		
		function init() {
			setUpPusher();
		}
		  
		function setUpPusher() {
			var pusher = new Pusher('de4c837118b831508e31', {
			  encrypted: true
			});

			var channel = pusher.subscribe('test_channel');
			channel.bind('my_event', function(data) {
			  setInfo(data.message);
			  setPrice(data.message);
			});
		}
		gadgets.util.registerOnLoadHandler(init);
		
		var RevelDigital = {
			 Controller: {
				onCommand: function(name, arg) {
					setInfo("NEW METHOD name: " + name + " arg: " + arg);
					requestPrice("default");
				}
			}
		};
		
		function requestPrice(store) {
			var price = ""
			var root = 'https://emc.reveldigital.com/Api/RequestPrice';
			setInfo('Request is  ' + root + '?storeId=' + store + '&gadgetKey=' + prefs.getString("gadgetKey") + '&apiKey=' + prefs.getString("apikey") + '&groupId=' + prefs.getString("groupName"));
			$.getJSON(root + '?storeId=' + store + '&gadgetKey=' + prefs.getString("gadgetKey") + '&apiKey=' + prefs.getString("apikey") + '&groupId=' + prefs.getString("groupName"), function (data) {
					if(!data){ 
						price = JSON.parse(localStorage['cached_value']);
						setPrice(price);
						return; 
					}
					price = data;
			}).done(function() {
				localStorage['cached_value'] = JSON.stringify(price);
				setInfo('Saved: ' + price);
				setPrice(price);
			}).fail(function(jqxhr, textStatus, error) {
				var err = textStatus + ", " + error;
				setInfo(err);
				price = JSON.parse(localStorage['cached_value']);
				setPrice(price);
			});
		}
		
		function requestDefault() {
			var price = ""
			var root = 'https://emc.reveldigital.com/Api/RequestPrice';
			setInfo('Request is  ' + root + '?storeId=default' + '&gadgetKey=' + prefs.getString("gadgetKey") + '&apiKey=' + prefs.getString("apikey") + '&groupId=' + prefs.getString("groupName"));
			$.getJSON(root + '?storeId=default' + '&gadgetKey=' + prefs.getString("gadgetKey") + '&apiKey=' + prefs.getString("apikey") + '&groupId=' + prefs.getString("groupName"), function (data) {
					if(!data){ 
						price = JSON.parse(localStorage['cached_default']);
						setPrice(price);
						return; 
					}
					price = data;
			}).done(function() {
				localStorage['cached_default'] = JSON.stringify(price);
				setPrice(price);
			}).fail(function(jqxhr, textStatus, error) {
				var err = textStatus + ", " + error;
				setInfo(err);
				price = JSON.parse(localStorage['cached_default']);
				setPrice(price);
			});
		}
		  
		function setPrice(data) {
			WebFont.load({ google: { families: [ prefs.getString("font-name") ] } }); 
			var container = $('#priceContainer');
			container.text(data);
		}
		
		function setInfo(data) {
			if (true) {
				var container = $('#infoContainer');
				container.append(data + '<br>');
			}	
			if (true) {
				console.log(data);
			}
		}
</script>]]>
</Content>
</Module>
