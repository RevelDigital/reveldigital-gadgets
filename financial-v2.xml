<?xml version="1.0" encoding="UTF-8" ?> 
<Module> 
<ModulePrefs title="Stock Quotes Gadget" description="Basic financials for a user defined list of stock symbols. Data provided for free by IEX." author="RevelDigital" background="transparent">
  <Require feature="reveldigital" />
  <Require feature="jquery" />
  <Require feature="webfont" />
  
  <UserPref name="symbols" display_name="Stock Symbols (eg. MSFT,AIG,JPM)" datatype="string" />
  <UserPref name="header-style" display_name="Header Style" datatype="style" default_value="font-family:Open Sans;color:rgb(255, 255, 255);font-size:24px;text-align:left;" required="true" />
  <UserPref name="body-style" display_name="Body Style" datatype="style" default_value="font-family:Open Sans;color:rgb(255, 255, 255);font-size:18px;" required="true" />
  <UserPref name="include-graphic" display_name="Include Graphic" datatype="bool" default_value="true" />
  <UserPref name="include-name" display_name="Include Name" datatype="bool" default_value="true" />
  <UserPref name="include-symbol" display_name="Include Symbol" datatype="bool" default_value="true" />
  <UserPref name="include-last-trade" display_name="Include Last Trade" datatype="bool" default_value="true" />
  <UserPref name="include-change" display_name="Include % Change" datatype="bool" default_value="true" />
  <UserPref name="include-days-range" display_name="Include Days Range" datatype="bool" default_value="false" />
  <UserPref name="include-days-low" display_name="Include Days Low" datatype="bool" default_value="false" />
  <UserPref name="include-days-high" display_name="Include Days High" datatype="bool" default_value="false" />
  <UserPref name="include-volume" display_name="Include Volume" datatype="bool" default_value="false" />
  <UserPref name="include-year-low" display_name="Include Year Low" datatype="bool" default_value="false" />
  <UserPref name="include-year-high" display_name="Include Year High" datatype="bool" default_value="false" />
  <UserPref name="include-avg-daily-volume" display_name="Include Avg. Daily Volume" datatype="bool" default_value="false" />
  <UserPref name="include-exchange" display_name="Include Exchange" datatype="bool" default_value="false" />
  <UserPref name="rdW" display_name="Width" required="true" default_value="280" datatype="hidden" />
  <UserPref name="rdH" display_name="Height" required="true" default_value="190" datatype="hidden" />
  <UserPref name="ForeColor" datatype="hidden" />
  <UserPref name="BackColor" datatype="hidden" />
</ModulePrefs>
<Content type="html">
<![CDATA[

<style type="text/css">
body *
{
  line-height: 1.2em;
  letter-spacing: 0;
  word-spacing: normal;
}

body
{
  background: transparent;
  overflow: hidden;
  width: __UP_rdW__px;
  height: __UP_rdH__px;
}

div.quotescontainer
{
  text-align: left;
  background-color: #__UP_BackColor__;
  width: __UP_rdW__px;
}

div.quotescontainer table
{
  color: #__UP_ForeColor__;
}

table
{
  width: 100%;
}

td, th
{
  padding: 10px;
}

th
{
  __UP_header-style__
  text-align: right;
}

td
{
  __UP_body-style__
  text-align: right;
}

i
{
  __UP_body-style__
}

.green
{
  color: green !important;
}

.red
{
  color: red !important;
}

.row-down
{
  background-color: rgba(255,0,0,0.1);
}

.row-up
{
  background-color: rgba(0,255,0,0.1);
}

.name, .symbol, .exchange
{
  text-align: left !important;
}

.row-down
{
  background-color: rgba(255,0,0,.3);
}

.row-up
{
  background-color: rgba(0,255,0,.3);
}
</style>

<link rel="stylesheet" type="text/css" href="https://reveldigital.github.io/gadget-common/third-party/foundation-icons/foundation-icons.css"/>

<div class="quotescontainer">
  <table cellspacing="0" cellpadding="0">
    <thead>
    </thead>
    <tbody>
    </tbody>
  </table>
</div>

<script type="text/javascript">

  var prefs = new gadgets.Prefs();

  function load() {

    WebFont.load({
      google: {
        families: [
          gadgets.reveldigital.getFamilyName(prefs.getString("header-style"))
        ]
      }
    });
    WebFont.load({
      google: {
        families: [
          gadgets.reveldigital.getFamilyName(prefs.getString("body-style"))
        ]
      }
    });
    
    var thead = $('<tr>');

    if (prefs.getBool('include-graphic')) {
      thead.append($('<th>'));
    }
    if (prefs.getBool('include-name')) {
      thead.append($('<th class="name">Name</th>'));
    }
    if (prefs.getBool('include-symbol')) {
      thead.append($('<th class="symbol">Symbol</th>'));
    }
    if (prefs.getBool('include-last-trade')) {
      thead.append($('<th class="last-trade">Last Trade</th>'));
    }
    if (prefs.getBool('include-change')) {
      thead.append($('<th class="change">Change</th>'));
    }
    if (prefs.getBool('include-days-range')) {
      thead.append($('<th class="days-range">Days Range</th>'));
    }
    if (prefs.getBool('include-days-low')) {
      thead.append($('<th class="days-low">Days Low</th>'));
    }
    if (prefs.getBool('include-days-high')) {
      thead.append($('<th class="days-high">Days High</th>'));
    }
    if (prefs.getBool('include-volume')) {
      thead.append($('<th class="volume">Volume</th>'));
    }
    if (prefs.getBool('include-year-low')) {
      thead.append($('<th class="year-low">Year Low</th>'));
    }
    if (prefs.getBool('include-year-high')) {
      thead.append($('<th class="year-high">Year High</th>'));
    }
    if (prefs.getBool('include-market-cap')) {
      thead.append($('<th class="market-cap">Market Cap</th>'));
    }
    if (prefs.getBool('include-avg-daily-volume')) {
      thead.append($('<th class="avg-daily-volume">Average 30 Day Volume</th>'));
    }
    if (prefs.getBool('include-exchange')) {
      thead.append($('<th class="exchange">Exchange</th>'));
    }

    $("div.quotescontainer > table > thead").empty().append(thead);

    var size = $('td').css('font-size');
    $('i').css('font-size', size);
    
    update();
    
    setInterval(update, 120000);
  }

  gadgets.util.registerOnLoadHandler(load);
</script>

<script type="text/javascript">

  var max_id = 0;
  
  var update = function () {

    var symbols =prefs.getString("symbols");

    var url = "https://proxy-svc.reveldigital.app/stocks/quote?symbol=" + symbols;

    $.getJSON(url, function(json) {

      if (symbols.split(',').length == 1) {
        json = { [symbols]: json };
      }

      $("div.quotescontainer > table > tbody").empty();

      for (var key in json) {

        var quote = json[key];

        var tr = $('<tr>').addClass('item');
        if (prefs.getBool('include-graphic')) {
          if (parseFloat(quote.change) > 0) {
            tr.addClass('row-up');
            tr.append($("<td class='icon'><i class='fi-arrow-up green'></i></td>"));
          } else if (parseFloat(quote.change) < 0) {
            tr.addClass('row-down');
            tr.append($("<td class='icon'><i class='fi-arrow-up red'></i></td>"));
          } else {
            tr.append($("<td class='icon'></td>"));
          }
        }

        if (prefs.getBool('include-name')) {
          tr.append($('<td class="value name">').text(quote.name));
        }
        if (prefs.getBool('include-symbol')) {
          tr.append($('<td class="value symbol">').text(quote.symbol));
        }
        if (prefs.getBool('include-last-trade')) {
          tr.append($('<td class="value last-trade">').text(parseFloat(quote.close).toFixed(2)));
        }
        if (prefs.getBool('include-change')) {
          tr.append($('<td class="value change">').text(parseFloat(quote.change).toFixed(2)));
        }
        if (prefs.getBool('include-days-range')) {
          tr.append($('<td class="value days-range">').text((Math.round((parseFloat(quote.high) - parseFloat(quote.low)) * 100) / 100)));
        }
        if (prefs.getBool('include-days-low')) {
          tr.append($('<td class="value days-low">').text(parseFloat(quote.low).toFixed(2)));
        }
        if (prefs.getBool('include-days-high')) {
          tr.append($('<td class="value days-high">').text(parseFloat(quote.high).toFixed(2)));
        }
        if (prefs.getBool('include-volume') && quote.volume) {
          tr.append($('<td class="value volume">').text(parseFloat(quote.volume).toFixed(2)));
        }
        if (prefs.getBool('include-year-low')) {
          tr.append($('<td class="value year-low">').text(parseFloat(quote.fifty_two_week.low).toFixed(2)));
        }
        if (prefs.getBool('include-year-high')) {
          tr.append($('<td class="value year-high">').text(parseFloat(quote.fifty_two_week.high).toFixed(2)));
        }
        //if (prefs.getBool('include-market-cap') && quote.marketCap) {
        //  tr.append($('<td class="value market-cap">').text(parseFloat(quote.marketCap).toFixed(2)));
        //}
        if (prefs.getBool('include-avg-daily-volume') && quote.average_volume) {
          tr.append($('<td class="value avg-daily-volume">').text(parseFloat(quote.average_volume).toFixed(2)));
        }
        if (prefs.getBool('include-exchange')) {
          tr.append($('<td class="value exchange">').text(quote.exchange));
        }

        $("div.quotescontainer > table > tbody").append(tr);
      }
    });
  }
  
  function commarize() {
    // Alter numbers larger than 1k
    if (this >= 1e3) {
      var units = ["k", "M", "B", "T"];
      
      // Divide to get SI Unit engineering style numbers (1e3,1e6,1e9, etc)
      var unit = Math.floor(((this).toFixed(0).length - 1) / 3) * 3;
      // Calculate the remainder
      var num = (this / ('1e'+unit)).toFixed(2);
      var unitname = units[Math.floor(unit / 3) - 1];
      
      // output number remainder + unitname
      return num + unitname;
    }
    
    // return formatted original number
    return this.toLocaleString();
  }

  // Add method to prototype. this allows you to use this function on numbers and strings directly
  Number.prototype.commarize = commarize;
  String.prototype.commarize = commarize;

</script>
]]>
</Content>
</Module>