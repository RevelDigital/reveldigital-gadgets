<?xml version="1.0" encoding="UTF-8" ?>

<Module>

    <ModulePrefs title="Weather Gadget" description="Enter full name of city, state (if in United States) and Country name in the gadget or in the device information. Otherwise, the gadget will not work correctly" author="RevelDigital" background="transparent">

        <UserPref name="Location" display_name="Location (Optional, will defualt to device locaiton)" default_value="" />
        <UserPref name="isoCode" display_name="ISO3166-1-Alpha-2 Code (Optional)" default_value="" />
        <UserPref name="state" display_name="state" required="true" default_value="*|DEVICE.LOCATION.CITY|*"  />
        <UserPref name="city" display_name="city" required="true" default_value="*|DEVICE.LOCATION.STATE|*"  />
        <UserPref name="country" display_name="country" required="true" default_value="*|DEVICE.LOCATION.COUNTRY|*" />
        <UserPref name="rdW" display_name="Width" required="true" default_value="280" datatype="hidden" />
        <UserPref name="rdH" display_name="Height" required="true" default_value="190" datatype="hidden" />  
        
    </ModulePrefs>
<Content type="html">

<![CDATA[
<!DOCTYPE html>
<!DOCTYPE html>
<html lang="en">
<head>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <style>
        body{
            background: transparent;
            overflow: hidden;
        }
        thead{
            font-size: x-large;
            text-align: center;
        }
        table {
            margin-right: 3px;
            margin-left: 3px;
            margin-bottom: 4px;
            width: 100%;
            height: 100%;
            text-align: center;
            table-layout: fixed;
        }
        .container{
            width: __UP_rdW__px;
            height: __UP_rdH__px;
            background: transparent;
        }
        th{
            white-space: nowrap;
            text-align: center;
        }
        #page td {
            padding:0; margin:0;
        }

        #page {
            border-collapse: collapse;
        }
        .gChart{
            width: 100%;
            height: 30%;
        }
        .labeltext{
            padding-top: 4%;
            margin-bottom: 0;
        }
        .weatherIcon{
            width: 35%;
        }
        h2{
            font-size: 5px;
            font-size: 2vw;
            margin-left: 5px;
            margin-bottom: 8px;
            margin-top: 5px;
        }
        p{
            font-size: 3px;
            font-size: 1vw;
        }
        h6{
            font-size: larger;
        }



    </style>
</head>
    <meta charset="UTF-8">
    <title>Title</title>
</head>
<body>
    <div class="container">
        <h2 id="cityName"></h2>
        <table class="table table-bordered"  id="page">
            <thead>
                <th class="day" id="day1" style="background: #d0d0d0"></th>
                <th class="day"  id="day2"></th>
                <th class="day"  id="day3"></th>
                <th class="day"  id="day4"></th>
                <th class="day"  id="day5"></th>
            </thead>
            <tbody>
                <tr class="c1">
                    <td>
                        <h6 id="date1" class="labeltext"><b></b></h6>
                        <img class="weatherIcon" id="weatherPic1">
                        <p  id="weatherDesc1"></p>
                    </td>
                    <td>
                        <h6 id="date2" class="labeltext"><b></b></h6>
                        <img class="weatherIcon"  id="weatherPic2">
                        <p id="weatherDesc2"></p>
                    </td>
                    <td>
                        <h6 id="date3" class="labeltext"><b></b></h6>
                        <img class="weatherIcon"  id="weatherPic3">
                        <p id="weatherDesc3"></p>
                    </td>
                    <td>
                        <h6 id="date4" class="labeltext"><b></b></h6>
                        <img class="weatherIcon"  id="weatherPic4">
                        <p id="weatherDesc4"></p>
                    </td>
                    <td>
                        <h6 id="date5" class="labeltext"><b></b></h6>
                        <img class="weatherIcon"  id="weatherPic5">
                        <p id="weatherDesc5"></p>
                    </td>
                </tr>
                <tr class="c2">
                    <td>
                        <p class="labeltext" id="windPercent1" style="color: lightslategrey"> </p>
                        <div id="chart_divwind1" class="gChart" ></div>
                    </td>

                    <td>
                        <p class="labeltext" id="windPercent2" style="color: lightslategrey"> </p>
                        <div id="chart_divwind2"  class="gChart"></div>
                    </td>

                    <td>
                        <p class="labeltext" id="windPercent3" style="color: lightslategrey"> </p>
                        <div id="chart_divwind3"  class="gChart" ></div>
                    </td>

                    <td>
                        <p class="labeltext" id="windPercent4" style="color: lightslategrey"> </p>
                        <div id="chart_divwind4"  class="gChart"></div>
                    </td>

                    <td>
                        <p class="labeltext" id="windPercent5" style="color: lightslategrey"> </p>
                        <div id="chart_divwind5"  class="gChart" ></div>
                    </td>
                </tr>
                <tr class="c3">
                    <td>
                        <p class="labeltext" style="color: red" id="high1"></p>
                        <p style="color: deepskyblue" id="low1"></p>
                        <div id="chart_div1"  class="gChart" ></div>
                    </td>

                    <td>
                        <p class="labeltext" style="color: red" id="high2"></p>
                        <p style="color: deepskyblue" id="low2"></p>
                        <div id="chart_div2"  class="gChart" ></div>
                    </td>

                    <td>
                        <p class="labeltext" style="color: red" id="high3"></p>
                        <p style="color: deepskyblue" id="low3"></p>
                        <div id="chart_div3"  class="gChart" ></div>
                    </td>

                    <td>
                        <p class="labeltext" style="color: red" id="high4"></p>
                        <p style="color: deepskyblue" id="low4"></p>
                        <div id="chart_div4"  class="gChart" ></div>
                    </td>

                    <td>
                        <p class="labeltext" style="color: red" id="high5"></p>
                        <p style="color: deepskyblue" id="low5"></p>
                        <div id="chart_div5"  class="gChart" ></div>
                    </td>
                </tr>
                <tr class="c4">
                    <td>
                        <p class="labeltext" style="color: deepskyblue" id="rainPercent1"> </p>
                        <p style="color: deepskyblue" id="rainMeasurement1"></p>
                        <div id="chart_divrain1" class="gChart" ></div>
                    </td>

                    <td>

                        <p class="labeltext" style="color: deepskyblue" id="rainPercent2"> </p>
                        <p style="color: deepskyblue" id="rainMeasurement2"></p>
                        <div id="chart_divrain2"  class="gChart"></div>
                    </td>

                    <td>
                        <p class="labeltext" style="color: deepskyblue" id="rainPercent3"> </p>
                        <p style="color: deepskyblue" id="rainMeasurement3"></p>
                        <div id="chart_divrain3"  class="gChart" ></div>
                    </td>

                    <td>
                        <p class="labeltext" style="color: deepskyblue" id="rainPercent4"> </p>
                        <p style="color: deepskyblue" id="rainMeasurement4"></p>
                        <div id="chart_divrain4"  class="gChart"></div>
                    </td>

                    <td>
                        <p class="labeltext" style="color: deepskyblue" id="rainPercent5"> </p>
                        <p style="color: deepskyblue" id="rainMeasurement5"></p>
                        <div id="chart_divrain5"  class="gChart" ></div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

</body>
<script type="text/javascript">
    var prefs;
    
    var jsonstandarLang = '{"ab":"Abkhazian","aa":"Afar","af":"Afrikaans","ak":"Akan","sq":"Albanian","am":"Amharic","ar":"Arabic","an":"Aragonese","hy":"Armenian","as":"Assamese","av":"Avaric","ae":"Avestan","ay":"Aymara","az":"Azerbaijani","bm":"Bambara","ba":"Bashkir","eu":"Basque","be":"Belarusian","bn":"Bengali (Bangla)","bh":"Bihari","bi":"Bislama","bs":"Bosnian","br":"Breton","bg":"Bulgarian","my":"Burmese","ca":"Catalan","ch":"Chamorro","ce":"Chechen","ny":"Chichewa, Chewa, Nyanja","zh":"Chinese","zh-Hans":"Chinese (Simplified)","zh-Hant":"Chinese (Traditional)","cv":"Chuvash","kw":"Cornish","co":"Corsican","cr":"Cree","hr":"Croatian","cs":"Czech","da":"Danish","dv":"Divehi, Dhivehi, Maldivian","nl":"Dutch","dz":"Dzongkha","en":"English","eo":"Esperanto","et":"Estonian","ee":"Ewe","fo":"Faroese","fj":"Fijian","fi":"Finnish","fr":"French","ff":"Fula, Fulah, Pulaar, Pular","gl":"Galician","gd":"Gaelic (Scottish)","gv":"Gaelic (Manx)","ka":"Georgian","de":"German","el":"Greek","kl":"Greenlandic","gn":"Guarani","gu":"Gujarati","ht":"Haitian Creole","ha":"Hausa","he":"Hebrew","hz":"Herero","hi":"Hindi","ho":"Hiri Motu","hu":"Hungarian","is":"Icelandic","io":"Ido","ig":"Igbo","id, in":"Indonesian","ia":"Interlingua","ie":"Interlingue","iu":"Inuktitut","ik":"Inupiak","ga":"Irish","it":"Italian","ja":"Japanese","jv":"Javanese","kl":"Kalaallisut, Greenlandic","kn":"Kannada","kr":"Kanuri","ks":"Kashmiri","kk":"Kazakh","km":"Khmer","ki":"Kikuyu","rw":"Kinyarwanda (Rwanda)","rn":"Kirundi","ky":"Kyrgyz","kv":"Komi","kg":"Kongo","ko":"Korean","ku":"Kurdish","kj":"Kwanyama","lo":"Lao","la":"Latin","lv":"Latvian (Lettish)","li":"Limburgish ( Limburger)","ln":"Lingala","lt":"Lithuanian","lu":"Luga-Katanga","lg":"Luganda, Ganda","lb":"Luxembourgish","gv":"Manx","mk":"Macedonian","mg":"Malagasy","ms":"Malay","ml":"Malayalam","mt":"Maltese","mi":"Maori","mr":"Marathi","mh":"Marshallese","mo":"Moldavian","mn":"Mongolian","na":"Nauru","nv":"Navajo","ng":"Ndonga","nd":"Northern Ndebele","ne":"Nepali","no":"Norwegian","nb":"Norwegian bokmål","nn":"Norwegian nynorsk","ii":"Nuosu","oc":"Occitan","oj":"Ojibwe","cu":"Old Church Slavonic, Old Bulgarian","or":"Oriya","om":"Oromo (Afaan Oromo)","os":"Ossetian","pi":"Pāli","ps":"Pashto, Pushto","fa":"Persian (Farsi)","pl":"Polish","pt":"Portuguese","pa":"Punjabi (Eastern)","qu":"Quechua","rm":"Romansh","ro":"Romanian","ru":"Russian","se":"Sami","sm":"Samoan","sg":"Sango","sa":"Sanskrit","sr":"Serbian","sh":"Serbo-Croatian","st":"Sesotho","tn":"Setswana","sn":"Shona","ii":"Sichuan Yi","sd":"Sindhi","si":"Sinhalese","ss":"Siswati","sk":"Slovak","sl":"Slovenian","so":"Somali","nr":"Southern Ndebele","es":"Spanish","su":"Sundanese","sw":"Swahili (Kiswahili)","ss":"Swati","sv":"Swedish","tl":"Tagalog","ty":"Tahitian","tg":"Tajik","ta":"Tamil","tt":"Tatar","te":"Telugu","th":"Thai","bo":"Tibetan","ti":"Tigrinya","to":"Tonga","ts":"Tsonga","tr":"Turkish","tk":"Turkmen","tw":"Twi","ug":"Uyghur","uk":"Ukrainian","ur":"Urdu","uz":"Uzbek","ve":"Venda","vi":"Vietnamese","vo":"Volapük","wa":"Wallon","cy":"Welsh","wo":"Wolof","fy":"Western Frisian","xh":"Xhosa","yi, ji":"Yiddish","yo":"Yoruba","za":"Zhuang, Chuang","zu":"Zulu"}';
    var jsonText = '{"Afrikaans":"AF","Albanian":"AL","Arabic":"AR","Armenian":"HY","Azerbaijani":"AZ","Basque":"EU","Belarusian":"BY","Bulgarian":"BU","British English":"LI","Burmese":"MY","Catalan":"CA","Chinese":"CN","Croatian":"TW","Czech":"CZ","Danish":"DK","Dhivehi":"DV","Dutch":"NL","English":"EN","Esperanto":"EO","Estonian":"ET","Farsi":"FA","Finnish":"FI","French":"FR","French Canadian":"FC","Galician":"GZ","German":"DL","Georgian":"KA","Greek":"GR","Gujarati":"GU","Haitian Creole":"HT","Hebrew":"IL","Hindi":"HI","Hungarian":"HU","Icelandic":"IS","Ido":"IO","Indonesian":"ID","Irish Gaelic":"IR","Italian":"IT","Japanese":"JP","Javanese":"JW","Khmer":"KM","Korean":"KR","Kurdish":"KU","Latin":"LA","Latvian":"LV","Lithuanian":"LT","Low German":"ND","Macedonian":"MK","Maltese":"MT","Mandinka":"GM","Maori":"MI","Marathi":"MR","Mongolian":"MN","Norwegian":"NO","Occitan":"OC","Pashto":"PS","Plautdietsch":"GN","Polish":"PL","Portuguese":"BR","Punjabi":"PA","Romanian":"RO","Russian":"RU","Serbian":"SR","Slovak":"SK","Slovenian":"SL","Spanish":"SP","Swahili":"SI","Swedish":"SW","Swiss":"CH","Tagalog":"TL","Tatarish":"TT","Thai":"TH","Turkish":"TR","Turkmen":"TK","Ukrainian":"UA","Uzbek":"UZ","Vietnamese":"VU","Welsh":"CY","Wolof":"SN","Yiddish":"JI"}';
    var languagesNonStandard = JSON.parse(jsonText);
    var languagesStandard = JSON.parse(jsonstandarLang);
    var countryLookup = null;
    var cityLocation = "";
    var isMetric = true;

    var langCode = 'en';
    var foundLocation = '';
    var foundCountryName = 'US';

    function load(){
        prefs = new gadgets.Prefs();
        if(prefs.getString("Location")!=null && prefs.getString("Location")!=""){
            cityLocation = prefs.getString("Location");
        }else{
            if(prefs.getString("city")!=null && prefs.getString("city")!=""){
                if(prefs.getString("state")!=null && prefs.getString("state")!=""){
                    cityLocation = prefs.getString("city") + ', ' + prefs.getString("state");
                }
                else if(prefs.getString("country")!=null && prefs.getString("country")!=""){
                    cityLocation = prefs.getString("city") + ', ' + prefs.getString("country");
                }else{
                    alert("No Country or State Entered In Device Info!")
                }
            }else{
                alert("Invalid City. No City Entered In Device Info");
            }
        }

        document.getElementById("cityName").innerHTML = cityLocation;
        google.charts.load('current', {'packages':['corechart']});
        google.charts.setOnLoadCallback(resolveLocation);
    }
    function resolveLocation() {
        //d36c8e4bd2a20743

         $.getJSON('https://raw.githubusercontent.com/RevelDigital/reveldigital-gadgets/avery/rankings', function(data) {
             countryLookup = data;
             $.getJSON('https://api.wunderground.com/api/d36c8e4bd2a20743/geolookup/conditions/q/'+cityLocation+'.json', function(data) {
                 if(data.hasOwnProperty('location')){
                     foundCountryName = data["location"]["country_iso3166"];
                     foundLocation = data["location"]["l"];
                 }
                 else if(data["response"].hasOwnProperty('results')){
                     foundCountryName = data["response"]["results"][0]["country_iso3166"];
                     foundLocation = data["response"]["results"][0]["l"];
                 }
                 else{
                     console.log("Could Not Resolve Location! Is Your device Location Set?");
                     return -1;
                 }

            if(prefs.getString("isoCode")==null || prefs.getString("isoCode")=="") {
                for (var i = 0; i < countryLookup.length; i++) {
                    if (countryLookup[i]["ISO3166-1-Alpha-2"].toLowerCase() == foundCountryName.toLowerCase()) {
                        var langCodeTemp = countryLookup[i]["Languages"].substr(0, 2);
                        if (languagesStandard.hasOwnProperty(langCodeTemp)) {
                            var langName = languagesStandard[langCodeTemp];
                            if (languagesNonStandard.hasOwnProperty(langName)) {
                                langCode = languagesNonStandard[langName];
                            }
                            else {
                                console.log("Could Not Find Language. Using English Default");
                            }
                        }
                        else {
                            console.log("Could Not Find Standard Language Code. Using English Default");
                        }
                    }
                }
            }
            else{
                langCodeTemp = prefs.getString("isoCode");
                if(languagesStandard.hasOwnProperty(langCodeTemp)){
                    var langName = languagesStandard[langCodeTemp];
                    if(languagesNonStandard.hasOwnProperty(langName)){
                        langCode = languagesNonStandard[langName];
                    }
                    else{
                        console.log("Could Not Find Language. Using English Default");
                    }
                }
                else{
                    console.log("Could Not Find Standard Language Code. Using English Default");
                }
            }
            if(foundCountryName=='US'){
                isMetric = false;
            }
            updateWeather();
                 });
             });


    }

    function updateWeather() {
        var myVar = setInterval(mainWeather, 60 * 10000);
        mainWeather();
    }

    function mainWeather(){
        $.getJSON('https://api.wunderground.com/api/d36c8e4bd2a20743/forecast10day/conditions/lang:'+langCode+foundLocation+'.json', function(data) {

            var i = 1;

            var temps = [];
            var wind = [];
            var rainM = [];

            for(var x = 0; x < 5; x++) {



                if (isMetric == false) {
                    document.getElementById("date" + i).innerHTML = data["forecast"]["simpleforecast"]["forecastday"][x]["date"]["month"] + "-" + data["forecast"]["simpleforecast"]["forecastday"][x]["date"]["day"]; //day name
                    document.getElementById("high" + i).innerHTML = data["forecast"]["simpleforecast"]["forecastday"][x]["high"]["fahrenheit"] + "&#176;F"; //high F
                    document.getElementById("low" + i).innerHTML = data["forecast"]["simpleforecast"]["forecastday"][x]["low"]["fahrenheit"] + "&#176;F"; //high F
                    document.getElementById("rainMeasurement" + i).innerHTML = data["forecast"]["simpleforecast"]["forecastday"][x]["qpf_allday"]["in"] + " in";  //
                    document.getElementById("windPercent" + i).innerHTML = "<img src='https://github.com/RevelDigital/reveldigital-gadgets/blob/avery/images/wind.png?raw=true' style='width:10%;height:5%;border: 0; display:inline; margin: 0 0px; box-shadow: none' alt='start up icon'>" + data["forecast"]["simpleforecast"]["forecastday"][x]["avewind"]["mph"] + " mph";
                }else{
                    document.getElementById("date" + i).innerHTML = data["forecast"]["simpleforecast"]["forecastday"][x]["date"]["day"]+ "-" + data["forecast"]["simpleforecast"]["forecastday"][x]["date"]["month"]  ; //day name
                    document.getElementById("high" + i).innerHTML = data["forecast"]["simpleforecast"]["forecastday"][x]["high"]["celsius"] + "&#176;C"; //high F
                    document.getElementById("low" + i).innerHTML = data["forecast"]["simpleforecast"]["forecastday"][x]["low"]["celsius"] + "&#176;C"; //high F
                    document.getElementById("rainMeasurement" + i).innerHTML = data["forecast"]["simpleforecast"]["forecastday"][x]["qpf_allday"]["mm"] + " mm";  //
                    document.getElementById("windPercent" + i).innerHTML = "<img src='https://github.com/RevelDigital/reveldigital-gadgets/blob/avery/images/wind.png?raw=true' style='width:10%;height:5%;border: 0; display:inline; margin: 0 0px; box-shadow: none' alt='start up icon'>" + data["forecast"]["simpleforecast"]["forecastday"][x]["avewind"]["kph"] + " kph";
                }





                document.getElementById("day"+i).innerHTML = data["forecast"]["simpleforecast"]["forecastday"][x]["date"]["weekday"]; //day name
                //document.getElementById("high"+i).innerHTML = data["forecast"]["simpleforecast"]["forecastday"][x]["high"]["celsius"]+"&#176;C"; //high F
                //document.getElementById("low"+i).innerHTML = data["forecast"]["simpleforecast"]["forecastday"][x]["low"]["celsius"]+"&#176;C"; //high F
                document.getElementById("weatherDesc"+i).innerHTML = data["forecast"]["simpleforecast"]["forecastday"][x]["conditions"]; //weather desc

                document.getElementById("rainPercent"+i).innerHTML = "<img src='https://github.com/RevelDigital/reveldigital-gadgets/blob/avery/images/rain.png?raw=true' style='width:4%;height:2%;border: 0; display:inline; margin: 0 2%; box-shadow: none' alt='start up icon'>" + data["forecast"]["simpleforecast"]["forecastday"][x]["pop"] + "%"; //percip in
                //document.getElementById("rainPercent"+i).innerHTML = data["forecast"]["simpleforecast"]["forecastday"][x]["qpf_allday"]["mm"]+" mm"; //percip mm
                document.getElementById("weatherPic"+i).src = data["forecast"]["simpleforecast"]["forecastday"][x]["icon_url"];

                temps.push(parseInt(data["forecast"]["simpleforecast"]["forecastday"][x]["high"]["fahrenheit"]));
                wind.push(parseInt(data["forecast"]["simpleforecast"]["forecastday"][x]["avewind"]["mph"]));
                rainM.push(parseFloat(data["forecast"]["simpleforecast"]["forecastday"][x]["qpf_allday"]["in"]));
                i++;
            }

            var maxTemp = Math.max.apply(null, temps)+10;
            var minTemp = Math.min.apply(null, temps)-1;

            var maxWind = Math.max.apply(null, wind)+10;
            var minWind = Math.min.apply(null, wind)-1;

            var maxRain = Math.max.apply(null, rainM)+.3;
            var minRain = Math.min.apply(null, rainM)-.02;



            var options1 = {
                hAxis: { textPosition: 'none'},
                vAxis: {
                    textPosition: 'none',
                    gridlines: {
                        color: 'transparent'
                    },
                    viewWindow: {
                        min: minTemp,
                        max: maxTemp
                    },
                    baseline: minTemp-1,
                },
                height: ((document.height !== undefined) ? document.height : document.body.offsetHeight)/7,
                legend:{position: 'none'},
                chartArea:{left:0,top:0,width:'100%',height:'100%'},
                backgroundColor:{fill:'none'},
                colors:['red','#004411']

            };

            var options2 = {
                hAxis: { textPosition: 'none'},
                vAxis: {
                    textPosition: 'none',
                    gridlines: {
                        color: 'transparent'
                    },
                    viewWindow: {
                        min: minWind,
                        max: maxWind
                    },
                    baseline: minWind-.01
                },
                height:((document.height !== undefined) ? document.height : document.body.offsetHeight)/7,
                legend:{position: 'none'},
                chartArea:{left:0,top:0,width:'100%',height:'100%'},
                backgroundColor:{fill:'none'},
                colors:['grey','#004411']
            };

            var options3 = {
                hAxis: { textPosition: 'none' },
                vAxis: {
                    textPosition: 'none',
                    gridlines: {
                        color: 'transparent'
                    },
                    viewWindow: {
                        min: minRain,
                        max: maxRain
                    },
                    baseline: minRain-.001
                },
                height:((document.height !== undefined) ? document.height : document.body.offsetHeight)/7,
                legend:{position: 'none'},
                chartArea:{left:0,top:0,width:'100%',height:'100%'},
                backgroundColor:{fill:'none'},
                colors:['skyblue','#004411']
            };

            var index = 1;
            for(var num = 0; num<5; num++){
                if(num==0){
                    var dataTemp = google.visualization.arrayToDataTable([
                        ['period', 'number'],
                        ['1'   ,      temps[0]],
                        ['2'   ,      temps[0]],
                        ['3'   ,      (temps[0]+temps[1])/2],
                    ]);
                    var dataWind = google.visualization.arrayToDataTable([
                        ['period', 'number'],
                        ['1'   ,      wind[0]],
                        ['2'   ,      wind[0]],
                        ['3'   ,      (wind[0]+wind[1])/2],
                    ]);
                    var dataRain = google.visualization.arrayToDataTable([
                        ['period', 'number'],
                        ['1'   ,      rainM[0]],
                        ['2'   ,      rainM[0]],
                        ['3'   ,      (rainM[0]+rainM[1])/2],
                    ]);
                }
                else if(num==4){
                    var dataTemp = google.visualization.arrayToDataTable([
                        ['period', 'number'],
                        ['1'   ,      (temps[num]+temps[num-1])/2],
                        ['2'   ,      temps[num]],
                        ['3'   ,      temps[num]],
                    ]);
                    var dataWind = google.visualization.arrayToDataTable([
                        ['period', 'number'],
                        ['1'   ,      (wind[num]+wind[num-1])/2],
                        ['2'   ,      wind[num]],
                        ['3'   ,      wind[num]],
                    ]);
                    var dataRain = google.visualization.arrayToDataTable([
                        ['period', 'number'],
                        ['1'   ,      (rainM[num]+rainM[num-1])/2],
                        ['2'   ,      rainM[num]],
                        ['3'   ,      rainM[num]],
                    ]);
                }
                else{
                    var dataTemp = google.visualization.arrayToDataTable([
                        ['period', 'number'],
                        ['1'   ,      (temps[num]+temps[num-1])/2],
                        ['2'   ,      temps[num]],
                        ['3'   ,      (temps[num]+temps[num+1])/2],
                    ]);
                    var dataWind = google.visualization.arrayToDataTable([
                        ['period', 'number'],
                        ['1'   ,      (wind[num]+wind[num-1])/2],
                        ['2'   ,      wind[num]],
                        ['3'   ,      (wind[num]+wind[num+1])/2],
                    ]);
                    var dataRain = google.visualization.arrayToDataTable([
                        ['period', 'number'],
                        ['1'   ,      (rainM[num]+rainM[num-1])/2],
                        ['2'   ,      rainM[num]],
                        ['3'   ,      (rainM[num]+rainM[num+1])/2],
                    ]);
                    //alert(wind[num]);
                    //alert(wind[num+1]);
                    //alert((wind[num]+wind[num+1])/2);
                }



                var chart = new google.visualization.AreaChart(document.getElementById('chart_div'+index));
                chart.draw(dataTemp, options1);

                var chart = new google.visualization.AreaChart(document.getElementById('chart_divwind'+index));
                chart.draw(dataWind, options2);

                var chart = new google.visualization.AreaChart(document.getElementById('chart_divrain'+index));
                chart.draw(dataRain, options3);
                index++;
            }


        });

    }

gadgets.util.registerOnLoadHandler(load);
</script>
</html>
        ]]>
    </Content>

</Module>
