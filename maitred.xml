<?xml version="1.0" encoding="UTF-8" ?> 
<Module> 
<ModulePrefs title="MaitreD Menu Gadget" description="MaitreD integration gadget for displaying menu items by division" author="RevelDigital" background="transparent">
  <UserPref name="host" display_name="Database Host" datatype="string" />
  <UserPref name="rootPath" display_name="Root Path" datatype="string" />
  <UserPref name="saleItemIds" display_name="Sale Items" datatype="string" />
  <UserPref name="divisionIds" display_name="Divsions" datatype="string" />
  <UserPref name="revenueCenterIds" display_name="Revenue Centers" datatype="string" />
  <UserPref name="modeIds" display_name="Modes" datatype="string" />
  <UserPref name="updateInterval" display_name="Interval between data checks (seconds)" datatype="string" default_value="300" />
  <UserPref name="body-style" display_name="Body Style" datatype="style" default_value="font-family:Verdana;color:rgb(255, 255, 255);font-size:18px;" required="true" />
  <UserPref name="rdW" display_name="Width" required="true" default_value="280" datatype="hidden" />
  <UserPref name="rdH" display_name="Height" required="true" default_value="190" datatype="hidden" />
</ModulePrefs>
<Content type="html">
<![CDATA[
<style type="text/css">
body *
{
  line-height: 1.2em; 
  letter-spacing: 0; 
  word-spacing: normal; 
}
body
{
  background: transparent;
  overflow: hidden;
}
table
{
  width: __UP_rdW__px;
}
#container
{
  position: relative;
  clear: both;
  width: __UP_rdW__px;
  height: 100%;
}
th
{
  text-align:left;        
}
table td
{
  __UP_body-style__;
}
table th
{
}
td.price
{
  text-align: right;
}
</style>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<!-- Include Handlebars from a CDN -->
<script src="https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.js"></script>
<script>
  // compile the template
  var template = Handlebars.compile("Handlebars <b>{{doesWhat}}</b>");
  // execute the compiled template and print the output to the console
  console.log(template({ doesWhat: "rocks!" }));
</script>
<div id="container">
  <div id="headerContainer"></div>
  <div id="tableContainer"></div>
</div>
<script type="text/javascript">
  
  var divisions = [];
  var prefs = new gadgets.Prefs();
  function load() {
    loadItems();
    
    setInterval(loadItems, parseInt(prefs.getString("updateInterval")) * 1000);
  }
  gadgets.util.registerOnLoadHandler(load);
</script>
<script type="text/x-handlebars-template" id="tableTemplate">
  <table>
    <thead>
      <tr>
        <td>Description</td>
        <td>Price ($)</td>
      </tr>
    </thead>
    <tbody>
      {{#each array}}
        <tr>
          <td>{{this.desc}}</td>
          <td>${{this.price}}</td>
        </tr>
      {{/each}}
    </tbody>
  </table>
</script>
<script type="text/javascript">
  var generateTable = function(items) {
  
    $('#tableContainer').empty();
    if (items == null)
      return;
    var templateText = $("#tableTemplate").html();
    var tableTemplate = Handlebars.compile(templateText);
    
    $('#tableContainer').html(tableTemplate({ array: items }));
  }
  var loadItems = function() {
    const saleItemIds = prefs.getString('saleItemIds').split();
    const divisionIds = prefs.getString('divisionIds').split();
    const revenueCenterIds = prefs.getString('revenueCenterIds').split();
    const modeIds = prefs.getString('modeIds').split();
    const filter = {
      saleItemIds,
      divisionIds,
      revenueCenterIds,
      modeIds
    }
    const stringifyFilter = JSON.stringify(filter);
    $.post('http://' + prefs.getString('host') + '/admin/readAndGetRevenueCenter', {
    "configExportPath":prefs.getString("rootPath")+'/ConfigExport.xml',
    "revenueCenterExportPath":prefs.getString("rootPath")+'/RevenueCenterExport.xml',
    "divisonExportPath":prefs.getString("rootPath")+'/DivisionExport.xml',
    "filter": stringifyFilter
}, function (data, textStatus) {
    
      var items = [];
      $.each(data.saleItems, function(index, value){
        const priceCond = value.revenueCenters && value.revenueCenters.length > 0 && value.revenueCenters[0].priceList && value.revenueCenters[0].priceList.length > 0;
        items.push({
          desc: value.description ? value.description : '',
          price: priceCond ? value.revenueCenters[0].priceList[0].price: ''
        })
      })
      //localStorage['maitred.items'] = JSON.stringify(items);
      
      generateTable(items);
      
    }, 'json');
  }
  var findDivision = function(name) {
  
    return $.grep(divisions, function(n, i) {
      return n.name == name;
    });
  }
  
</script>
]]>
</Content>
</Module>