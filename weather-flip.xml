<?xml version="1.0" encoding="UTF-8" ?> 
<Module> 
<ModulePrefs title="RevelDigital Weather Gadget" description="Animated weather supporting multiple locations" author="RevelDigital" background="transparent">
  <Locale messages="https://reveldigital.github.io/reveldigital-gadgets/ALL_ALL.xml"/>
  <Locale lang="ru" messages="https://reveldigital.github.io/reveldigital-gadgets/ru_ALL.xml"/>
  <UserPref name="Units" display_name="Temperature Units" datatype="enum" default_value="f">
    <EnumValue value="f" display_value="US" />
    <EnumValue value="c" display_value="Metric" />
  </UserPref>
  <UserPref name="Location1" display_name="Location 1" datatype="string" default_value="*|DEVICE.LOCATION.CITY|*, *|DEVICE.LOCATION.STATE|*" />
  <UserPref name="Location2" display_name="Location 2" datatype="string" default_value="" />
  <UserPref name="Location3" display_name="Location 3" datatype="string" default_value="" />
  <UserPref name="Location4" display_name="Location 4" datatype="string" default_value="" />
  <UserPref name="Location5" display_name="Location 5" datatype="string" default_value="" />
  <UserPref name="body-style" display_name="Font Style" datatype="style" default_value="font-family:Verdana;color:#FFFFFF;font-size:24px;" required="true" />
  <UserPref name="rdW" display_name="Width" required="true" default_value="280" datatype="hidden" />
  <UserPref name="rdH" display_name="Height" required="true" default_value="190" datatype="hidden" />
  <UserPref name="ForeColor" datatype="hidden" />
  <UserPref name="BackColor" datatype="hidden" />
</ModulePrefs>
<Content type="html">
<![CDATA[

<style type="text/css">

  body * {
    line-height: 1.2em; 
    letter-spacing: 0; 
    word-spacing: normal;
  }

  body {
    background: transparent;
    overflow: hidden;
    margin: 0;
    padding: 0;
    font-family: arial,sans-serif;
  }

  section, figure {
    padding: 0;
    margin: 0;
  }

  /* entire container, keeps perspective */
  .flip-container {
    -webkit-perspective: 1000px;
    perspective: 1000px;
  }

  .flip-container, .front, .back {
    width: __UP_rdW__px;
    height: __UP_rdH__px;
  }
  
  /* flip speed goes here */
  .flipper {
    transition: 0.6s;
    -webkit-transform-style: preserve-3d;
    transform-style: preserve-3d;
    position: relative;
  }

  /* hide back of pane during swap */
  .front, .back {
    position: absolute;
    top: 0;
    left: 0;
    backface-visibility:hidden;
    -webkit-backface-visibility:hidden;
  }

  /* front pane, placed above back */
  .front {
    z-index: 1;
  }

  /* back, initially hidden pane */
  .back {
    -webkit-transform: rotateX(-180deg);
    transform: rotateX(-180deg);
    -webkit-animation: toFront 0.3s linear normal forwards;
    animation: toFront 0.3s linear normal forwards;
  }
  .vertical.flip-container {
    position: relative;
  }
  .vertical.flip-container.hover .back {
    -webkit-animation-delay: 0.3s;
    animation-delay: 0.3s;
    -webkit-animation: toBack 0.3s linear normal forwards;
    animation: toBack 0.3s linear normal  forwards;
  }
  @keyframes toBack {  
    0% {z-index:0;}
    100% {z-index:1;}
  }
  @keyframes toFront {
    0% {z-index:1;}
    100% {z-index:0;}
  }
  .vertical.flip-container .flipper {
    -webkit-transform-origin: 100% calc(__UP_rdH__px / 2); /* half of height */
    transform-origin: 100% calc(__UP_rdH__px / 2); /* half of height */
  }

  .vertical.flip-container.hover .flipper {
    -webkit-transform: rotateX(-180deg);
    transform: rotateX(-180deg);
  }
  
  .location-container {
    float: left;
    height: __UP_rdH__px;
  }
  
  .conditions {
    height: __UP_rdH__px;
  }
  
  .temp-container {
    float: left;
    margin-left: 2em;
  }
  
  .temp {
    height: __UP_rdH__px;
  }
  
  .condition {
    left: 10px;
    bottom: 0;
    position: absolute;
    height: 30%;
    width: 100%;
  }
  
  .icon-container {
    box-sizing: border-box;
    position: relative;
    float: left;
    height: __UP_rdH__px;
  }
  
  .icon-container img {
    height: __UP_rdH__px;
  }
  
  div.condition, div.temp, div.high-low, div.location {
    __UP_body-style__;
  }


  .container {
    width: __UP_rdW__px;
    height: __UP_rdH__px;
    -webkit-perspective: 1000px;
       -moz-perspective: 1000px;
         -o-perspective: 1000px;
            perspective: 1000px;
  }

  #card {
    width: __UP_rdW__px;
    height: __UP_rdH__px;
    position: absolute;
    -webkit-transition: -webkit-transform 1s;
       -moz-transition: -moz-transform 1s;
         -o-transition: -o-transform 1s;
            transition: transform 1s;
    -webkit-transform-style: preserve-3d;
       -moz-transform-style: preserve-3d;
         -o-transform-style: preserve-3d;
            transform-style: preserve-3d;
    -webkit-transform-origin: 100% calc(__UP_rdH__px / 2);
       -moz-transform-origin: 100% calc(__UP_rdH__px / 2);
         -o-transform-origin: 100% calc(__UP_rdH__px / 2);
            transform-origin: 100% calc(__UP_rdH__px / 2);
  }

  #card.flipped {
    -webkit-transform: rotateX( -180deg );
       -moz-transform: rotateX( -180deg );
         -o-transform: rotateX( -180deg );
            transform: rotateX( -180deg );
  }

  #card figure {
    display: block;
    height: 100%;
    width: 100%;

    -webkit-backface-visibility: hidden;
       -moz-backface-visibility: hidden;
         -o-backface-visibility: hidden;
            backface-visibility: hidden;
  }

  #card .front {
  }

  #card .back {
    -webkit-transform: rotateX( -180deg );
       -moz-transform: rotateX( -180deg );
         -o-transform: rotateX( -180deg );
            transform: rotateX( -180deg );
  }

</style>

<section class="container" onclick="flip();">
  <div id="card">
    <figure class="front">
      <div class="icon-container">
        <img class="icon"/>
        <div class="condition"></div>
      </div>
      <div class="location-container">
        <div class="location"></div>
        <div class="high-low"><span></span></div>
      </div>
      <div class="temp-container">
        <div class="temp"></div>
      </div>
    </figure>
    <figure class="back">
      <div class="icon-container">
        <img class="icon"/>
        <div class="condition"></div>
      </div>
      <div class="location-container">
        <div class="location"></div>
        <div class="high-low"><span></span></div>
      </div>
      <div class="temp-container">
        <div class="temp"></div>
      </div>
    </figure>
  </div>
</section>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script src="https://reveldigital.github.io/reveldigital-gadgets/third-party/jquery.fittext.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/webfont/1.5.18/webfont.js"></script>
<script src="https://reveldigital.github.io/gadget-common/utils.js"></script>

<script type="text/javascript">

  var prefs = new gadgets.Prefs();
 
  var unit = prefs.getString("Units");
  var search = [];
  var items = [];
  var idx = 0;
  var titles = {};
  var flipTimer;
  
  var conditionMap = {
    "chanceflurries": "42d",
    "chancerain": "40d",
    "chancesleet": "18d",
    "chancesnow": "42d",
    "chancetstorms": "38d",
    "clear": "32d",
    "cloudy": "26d",
    "flurries": "13d",
    "fog": "20d",
    "hazy": "21d",
    "mostlycloudy": "28d",
    "mostlysunny": "29d",
    "partlycloudy": "30d",
    "partlysunny": "28d",
    "sleet": "18d",
    "rain": "11d",
    "snow": "16d",
    "sunny": "32d",
    "tstorms": "4d",
    "nt_chanceflurries": "42n",
    "nt_chancerain": "40n",
    "nt_chancesleet": "18n",
    "nt_chancesnow": "42n",
    "nt_chancetstorms": "38n",
    "nt_clear": "32n",
    "nt_cloudy": "26n",
    "nt_flurries": "13n",
    "nt_fog": "20n",
    "nt_hazy": "21n",
    "nt_mostlycloudy": "28n",
    "nt_mostlysunny": "29n",
    "nt_partlycloudy": "30n",
    "nt_partlysunny": "28n",
    "nt_sleet": "18n",
    "nt_rain": "11n",
    "nt_snow": "16n",
    "nt_sunny": "32n",
    "nt_tstorms": "4n"
  };
  
  function load() {
    
    WebFont.load({
      google: {
        families: [
          RevelDigital.getFamilyName(prefs.getString("body-style"))
        ]
      }
    });
    
    search = [];
    if (prefs.getString("Location1") != "") {
      search.push(prefs.getString("Location1"));
    }
    if (prefs.getString("Location2") != "") {
      search.push(prefs.getString("Location2"));
    }
    if (prefs.getString("Location3") != "") {
      search.push(prefs.getString("Location3"));
    }
    if (prefs.getString("Location4") != "") {
      search.push(prefs.getString("Location4"));
    }
    if (prefs.getString("Location5") != "") {
      search.push(prefs.getString("Location5"));
    }
    
    clearInterval(flipTimer);
    items = [];
    
    for (var i=0; i<search.length; i++) {
      getWeather(search[i]);
    }
    
    setTimeout(function() {
      load();
    }, 1000 * 60 * 30);
    
    flipTimer = setInterval(flip, 5000);
  }
  
  function getWeather(location) {
  
    if (location == "" || location.indexOf("*|DEVICE.LOCATION.CITY|*") != -1) {
      location = "Fargo, ND";
    }
    var api = 'https://api.wunderground.com/api/d36c8e4bd2a20743/geolookup/conditions/q/' + encodeURIComponent(location) + '.json';
    $.ajax({
      type: 'GET',
      url: api,
      dataType: 'json',
      success: function(data) {
        if (data.response.error) {
          return;
        }
        var item = data.current_observation;

        item.location = location;
        items.push(item);
        
        if (items.length == 1) {
          flip();
        }
      }
    });
  }
  
  function flip() {

    var panel = $('#card').hasClass('flipped') ? $('figure.front') : $('figure.back');
    
    if (items.length == 0) {
      return;
    }
    var i = idx++ % items.length;
    var item = items[i];
    
    $('div.location', panel).text(item.location);
    $('div.condition', panel).text(item.weather);
    $('img.icon', panel).attr("src", "https://s.yimg.com/zz/combo?a/i/us/nws/weather/gr/" + conditionMap[item.icon] + ".png");
    $('div.temp', panel).text(item.temp_f + "\u00B0");
    //$('div.high-low', panel).text(item.forecast[0].high + "\u00B0" + " / " + item.forecast[0].low + "\u00B0");
    
    $('div.location', panel).fitText(1, { vh: 40 });
    $('div.condition', panel).fitText(1, { vh: 15 });
    $('div.temp', panel).fitText(1, { vh: 80 });
    //$('div.high-low', panel).fitText(1, { vh: 25 });
    
    $('#card').toggleClass('flipped');
  }
  			
  gadgets.util.registerOnLoadHandler(load);
</script>

]]>
</Content>
</Module>