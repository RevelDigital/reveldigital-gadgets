<?xml version="1.0" encoding="UTF-8" ?> 
<Module> 
<ModulePrefs title="RevelDigital QR Control Test" description="Control digital signage with QR code." author="RevelDigital" background="transparent">
  <UserPref name="apikey" display_name="API Key" datatype="string" required="true" />
  <UserPref name="reg_key" display_name="REG Key" datatype="string" required="true" />
  <UserPref name="text-style" display_name="Text Style" datatype="style" default_value="font-family:Verdana;color:rgb(000, 000, 000);font-size:25px;" required="false" />
  <UserPref name="name-style" display_name="Title Style" datatype="style" default_value="font-family:Verdana;color:rgb(000, 000, 000);font-size:25px;" required="false" />
</ModulePrefs>
<Content type="html">
<![CDATA[

<style type="text/css">

body {
    background: transparent;
}

.textview {
    __UP_text-style__;
    text-align:center;
}

#name_of_queue {
    __UP_name-style__;
    text-align:center;
}

</style>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.2.6/jquery.min.js" type="text/javascript" charset="utf-8"></script>
<script src="https://reveldigital-gadgets.googlecode.com/svn/third-party/pusher.min.js"></script>
<script type="text/javascript" charset="utf-8">


function getDevicebyRegKey(regKey) {
    var image = $.getJSON("http://api.reveldigital.com/devices.json?api_key=" + prefs.getString('api_key'), function (data) {
      
        for(var i=0; i < data.length; i++) {
            var currentDevice = data[i];
            if(currentDevice.registration_key == regKey) {
                deviceId = currentDevice.id;
            }
        }

            init();
    });
}

/*
function init() {
    var host = "ws://lumisnet.com:12345/sockets"; 
    try {
        socket = new WebSocket(host);
        console.log('WebSocket - status '+ socket.readyState);
        socket.onopen    = function(msg) { 
                               console.log("Welcome - status " + this.readyState);
                               socket.send(deviceId);
                           };
        socket.onmessage = function(msg) { 
                               console.log("Received: " + msg.data);
                               showText($.trim(msg.data));
                           };
        socket.onclose   = function(msg) { 
                               console.log("Disconnected - status " + this.readyState); 
                           };
    }
    catch(ex){ 
        console.log(ex); 
    }
}

*/


function init() {
  var pusher = new Pusher('d18c609664168ec14d65');
  var channel = pusher.subscribe(deviceId);
  channel.bind('notification', function(data) {
    showText(data.message);
    setTimeout(function() {
      showText("");
    }, 20000);
  });
}

//startup waiting for message from server
$(function() {
    deviceId = 'test';
    prefs = new gadgets.Prefs();
    console.log("Version bravo: " + 40);
    getDevicebyRegKey(prefs.getString('reg_key'));
});


//show text from source given by server
function showText(text) {
    if(text.length == 0) {
        $("#youhave").html("");
        $("#name_of_queue").html("");
        $("#forplayback").html("");
    }
    else {
        $("#youhave").html("You have queued");
        $("#name_of_queue").html(text);
        $("#forplayback").html("for playback!");
    }
}




</script>

<body>
    <div id="youhave" class="textview">
    </div>

    <div id="name_of_queue">
    </div>

    <div id="forplayback" class="textview">
    </div>
</body>

]]>
</Content>
</Module>