<?xml version="1.0" encoding="UTF-8" ?> 
<Module> 
<ModulePrefs title="Flight Status Gadget" description="Flight status gadget" author="RevelDigital" background="transparent">
  <UserPref name="airport_code" display_name="Airport Code" required="true" datatype="string" />
  <UserPref name="airport_gate" display_name="Airport Gate" required="true" datatype="string" />
  <UserPref name="num_hours" display_name="Number of hours" default_value="5" datatype="string" />
  <UserPref name="update_interval" display_name="Interval between data checks (minutes)" datatype="string" default_value="15" />
  <UserPref name="row" display_name="Row Color" datatype="color" default_value="white" required="true" />
  <UserPref name="header-style" display_name="Header Style" datatype="style" default_value="font-family:Verdana;color:rgb(0, 0, 0);font-size:18px;" required="true" />
  <UserPref name="row-style" display_name="Row Style" datatype="style" default_value="font-family:Verdana;color:rgb(0, 0, 0);font-size:18px;" required="true" />
  <UserPref name="rdW" display_name="Width" required="true" default_value="280" datatype="hidden" />
  <UserPref name="rdH" display_name="Height" required="true" default_value="190" datatype="hidden" />
</ModulePrefs>
<Content type="html">
<![CDATA[

<style type="text/css">

  body {
    background: transparent;
  }

  #next_flight_table {
    text-align:left;
    width:100%;
    border-collapse:collapse;
    height:100%;
  }

  #header {
    __UP_header-style__;
  }

  #row {
    __UP_row-style__;
    background-color: __UP_row__;
  }



</style>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js"></script>

<div id="current_flight">
  <tr>
    <td id="current_number">Flight #: </td>
  </tr>
  <tr>
    <td id="current_location">Location: </td>
  </tr>
  <tr>
    <td id="current_time">Time: </td>
  </tr>
  <tr>
    <td id="current_status">Status: </td>
  </tr>
</div>

<div id="next_flight">
 <table id="next_flight_table"><tbody>
    <tr id="header"><th>Time</th><th>Flight #</th><th><div id='tofrom'>Location</div></th><th>Airline</th><th>Status</th></tr>
  </tbody></table>
</div>


<script type="text/javascript">
  var prefs = new gadgets.Prefs();
  function load() {
    refresh('arr');
    if($('#next_flight_table tbody tr').length == 1) {
      refresh('dep');
    }
    setInterval(refresh, prefs.getInt("update_interval") * 60 * 1000);
  }
  gadgets.util.registerOnLoadHandler(load);
</script>



<script type="text/javascript">

  function clearFlights() {
    var length = $('#next_flight_table tbody tr').length;
    for(var i=length-1; i > 0; i--) {
      document.getElementById("next_flight_table").deleteRow(i);
    }
  }

  function compareArrivalTimes(a,b) {
    if (a.arrivalDate.dateUtc < b.arrivalDate.dateUtc) {
      return -1;
    } 
    if (a.arrivalDate.dateUtc > b.arrivalDate.dateUtc) {
      return 1;
    }
    return 0;
  }

  function compareDepartureTimes(a,b) {
    if (a.departureDate.dateUtc < b.departureDate.dateUtc) {
      return -1;
    }
    if (a.departureDate.dateUtc > b.departureDate.dateUtc) {
      return 1;
    }
    return 0;
  }

  function getStatus(arg) {
    switch(arg) {
      case 'S':
        return "On Time";
        break;
      case 'A':
        return "On Time";
        break;
      case 'C':
        return "Canceled";
          break;
      case 'D':
        return "Diverted";
        break;
      case 'L':
        return "Landed";
        break;
      case 'R':
        return "Redirected";
        break;
      case 'U':
        return "Unknown";
        break;
      case 'NO':
        return "Not Operational";
        break;
      default:
        return "Unknown";
        break;
    }
  }

  function timeConvert (time) {
    
    time = time.toString().match(/^([01]\d|2[0-3])(:)([0-5]\d)(:[0-5]\d)?$/) || [time];

    if (time.length > 1) { 
      time = time.slice (1);
      time.pop();
      time[5] = +time[0] < 12 ? ' AM' : ' PM';
      time[0] = +time[0] % 12 || 12;
    }
    return time.join ('');
  }


  function refresh(toggle) {

    clearFlights();

    var currentDate = new Date();
    var month = currentDate.getMonth() + 1;
    var day = currentDate.getDate();
    var year = currentDate.getFullYear();
    var hour = currentDate.getHours();
    var arriveOrDepart = toggle;
    var airportCode = prefs.getString('airport_code');
    var numHours = prefs.getString('num_hours');
    var gate = prefs.getString('airport_gate');



    var url = 'https://api.flightstats.com/flex/flightstatus/rest/v2/jsonp/airport/status/' + airportCode + '/' + arriveOrDepart + '/' + year + '/' + month + '/' + day + '/' + hour + '?appId=27a8b478&appKey=b725f70889570f69748fa69f783be1fe&utc=false&numHours=' + numHours;

    $.ajax({
      url: url,
      dataType: 'JSONP',
      type: 'GET',
      success: function (data) {

        data.flightStatuses.sort(compareArrivalTimes);




        var rowCounter = 1;

        for (var i = 0; i < data.flightStatuses.length; i++) {
          var currentFlight = data.flightStatuses[i];
          var flights = [];

          if(toggle == 'arr') {
            try {
              gateCheck = currentFlight.airportResources.arrivalGate;  
            }
            catch(e) {
              console.log(e);
            }
            
          }
          else {
            try {
              gateCheck = currentFlight.airportResources.departureGate;  
            }
            catch(e) {
              console.log(e);
            }
            
          }

          if(gateCheck == gate) {
            flights.push(currentFlight);
          }

          




        }

          showCurrentFlight(flights[0], data);
          showNextFlight(flights[1], data);

            
          
          


          
      }
    });
  }


  function showCurrentFlight(flight, data) {

    var arrivalToggle = true;

    if(flight.airportResources.arrivalGate === undefined) {
      arrivalToggle = false;
    }



    $('#current_number').text('Flight #: ' + flight.flightNumber);

    if(arrivalToggle) {
      var arrivalTime = new Date(currentFlight.arrivalDate.dateUtc);

      for(var k = 0; k < data.appendix.airports.length; k++) {
       if(flight.departureAirportFsCode == data.appendix.airports[k].fs) {
          $('#current_location').text('From: ' + data.appendix.airports[k].city + " - " + data.appendix.airports[k].faa);
        }
      }

      $('#current_time').text('Arrival: ' + timeConvert(arrivalTime.toLocaleTimeString()));
    }
    else {
      var depatureTime = new Date(currentFlight.departureDate.dateUtc);

      for(var k = 0; k < data.appendix.airports.length; k++) {
        if(flight.arrivalAirportFsCode == data.appendix.airports[k].fs) {
          $('#current_location').text('Destination: ' + data.appendix.airports[k].city + " - " + data.appendix.airports[k].faa);
        }
      }

      $('#current_time').text('Departure: ' + timeConvert(depatureTime.toLocaleTimeString()));
    }
    
    $('#current_status').text(getStatus(flight.status));



  }



  function showNextFlight(flight) {

  }



</script>

]]>
</Content>
</Module>