<?xml version="1.0" encoding="UTF-8" ?> 
<Module> 
<ModulePrefs title="RevelDigital QR Control Test" description="Control digital signage with QR code." author="RevelDigital" background="transparent">
  <UserPref name="text-style" display_name="Text Style" datatype="style" default_value="font-family:Verdana;color:rgb(000, 000, 000);font-size:25px;" required="false" />
  <UserPref name="name-style" display_name="Title Style" datatype="style" default_value="font-family:Verdana;color:rgb(000, 000, 000);font-size:25px;" required="false" />
</ModulePrefs>
<Content type="html">
<![CDATA[

<style type="text/css">

body {
    background: transparent;
}

.textview {
    __UP_text-style__;
    text-align:center;
}

#name_of_queue {
    __UP_name-style__;
    text-align:center;
}

img {
  width: 100px;
  height: 100px;
}

#container {width:820px;height:100px;overflow:hidden;}
#container.rotate90,#container.rotate270 {width:100px;height:820px}
#image {
    transform-origin: top left;
    -webkit-transform-origin: top left;
    -ms-transform-origin: top left;
}
#container.rotate90 #image {
    transform: rotate(90deg) translateY(-100%);
    -webkit-transform: rotate(90deg) translateY(-100%);
    -ms-transform: rotate(90deg) translateY(-100%);
}
#container.rotate45 #image {
    transform: rotate(45deg) translateY(-100%);
    -webkit-transform: rotate(45deg) translateY(-100%);
    -ms-transform: rotate(45deg) translateY(-100%);
}
#container.rotate180 #image {
    transform: rotate(180deg) translate(-100%,-100%);
    -webkit-transform: rotate(180deg) translate(-100%,-100%);
    -ms-transform: rotate(180deg) translateX(-100%,-100%);
}
#container.rotateb180 #image {
    transform: rotate(-180deg) translate(-100%,-100%);
    -webkit-transform: rotate(-180deg) translate(-100%,-100%);
    -ms-transform: rotate(-180deg) translateX(-100%,-100%);
}
#container.rotate270 #image {
    transform: rotate(270deg) translateX(-100%);
    -webkit-transform: rotate(270deg) translateX(-100%);
    -ms-transform: rotate(270deg) translateX(-100%);
}

</style>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.2.6/jquery.min.js" type="text/javascript" charset="utf-8"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/0.9.6/socket.io.min.js"></script>
<script type="text/javascript" charset="utf-8">




//startup waiting for message from server
function init() {
  connected = false;
  
  socketConnect();
  
  socket.on('message', function(data) {

    showText(data);
    var blah = data.substring((data.indexOf(':') +1), data.indexOf('Y') -1);
    var blah2 = data.substring((data.indexOf('Y') +2), data.indexOf('Z') -1);
    console.log(blah);
var angle = blah, img = document.getElementById('container');
    
    if(blah < 1 & blah > -1 & blah2 > 0) {
      img.className = "rotate90";
    }
    else if(blah < 1 & blah > -1 & blah2 < 0) {
      img.className = "rotate270";
    }
    else if(blah < -1) {
     img.className = "rotate180";
    }
    else if(blah > 1) {
      img.className = "image";
    }

    

    
  });
  socket.on('disconnect', function() {
      connected = false;
      console.log('mesage Got disconnected');
      socketConnect();
  });
  socket.on('connect', function() {
    console.log('mesage Got Connected');
    connected = true;
  });
 
   socket.emit('join room', "blah");
}

function socketConnect() {
  console.log('Trying to connect');
    socket = io.connect('http://65.183.249.120:3000/room');
    socket.emit('join room', "blah");
    if(!connected) {
      setTimeout(function() {
        socketConnect();
      }, 10000);
    }
    
}


$(function() {  
  console.log("Version omega: " + 21);
  deviceId = 'test';
  init();
});

//show text from source given by server
function showText(text) {
  if(text.length == 0) {
    $("#youhave").html("");
    $("#name_of_queue").html("");
    $("#forplayback").html("");
  }
  else {
    
    $("#name_of_queue").html(text);
  }
}

</script>

<body>
  <div id="youhave" class="textview">
  </div>

  <div id="name_of_queue">
  </div>

  <div id="container">
  <img id="image" src="http://www.lumisnet.com/arrow.jpg">
  </div>
</body>

]]>
</Content>
</Module>