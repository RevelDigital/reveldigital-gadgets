<?xml version="1.0" encoding="UTF-8" ?>
<Module>
  <ModulePrefs title="Extended Weather Gadget" title_url="https://support.reveldigital.com/hc/en-us/articles/33831357734157-Weather-Gadgets" description="Basic weather information with 7 day forecast" author="RevelDigital" background="transparent" deprecated="true">
    <Require feature="reveldigital" />
    <Require feature="jquery" />
    <Require feature="webfont" />

    <UserPref name="Latitude" datatype="hidden" default_value="*|DEVICE.LOCATION.LATITUDE|*" />
    <UserPref name="Longitude" datatype="hidden" default_value="*|DEVICE.LOCATION.LONGITUDE|*" />
    <UserPref name="Location" display_name="City, State for Weather" datatype="string" required="true" default_value="*|DEVICE.LOCATION.CITY|*, *|DEVICE.LOCATION.STATE|*" />
    <UserPref name="Units" display_name="Temperature Units" datatype="enum" default_value="us">
      <EnumValue value="us" display_value="US" />
      <EnumValue value="si" display_value="Metric" />
    </UserPref>
    <UserPref name="ForecastDays" display_name="Forecast Days" datatype="string" default_value="3" required="true" />
    <UserPref name="TextStyle" display_name="Text Style" datatype="style" default_value="font-family:Verdana;color:#ffffff;font-size:24px;text-align:left;" required="true" />
    <UserPref name="IconColor" display_name="Icon Color" datatype="color" default_value="#0000ff" required="true" />
    <UserPref name="rdW" display_name="Width" required="true" default_value="280" datatype="hidden" />
    <UserPref name="rdH" display_name="Height" required="true" default_value="190" datatype="hidden" />
    <UserPref name="ForeColor" datatype="hidden" />
    <UserPref name="BackColor" datatype="hidden" />
    <UserPref name="gkey" datatype="hidden" default_value="AIzaSyBZ14SEPEoqnPFNhfhk9tIdK22_Jw8YSB8" />
  </ModulePrefs>
  <Content type="html">
    <![CDATA[

<style type="text/css">
body *
{
  letter-spacing:0;
  word-spacing:normal;
}

body
{
  background:transparent;
  width: __UP_rdW__px;
  height: __UP_rdH__px;
  overflow: hidden;
  __UP_TextStyle__;
}

div, span
{
  __UP_TextStyle__;
}

.fe_container
{
  font-weight:300;
  width: __UP_rdW__px;
  height: __UP_rdH__px;
  margin:0 auto;
}

.fe_container .fe_forecast
{
  width:100%;
}

.fe_container .fe_currently
{
  float:left;
  position:relative;
  height:100%;
  font-size:1.6em;
  text-align:center;
  padding-top:5px;
}

#fe_current_icon
{
  width:150px;
  height:150px;
  float:left;
}

.fe_container .fe_currently .fe_temp
{
  display:inline-block;
  position:relative;
  margin-left:5px;
  margin-top:10px;
  font-size:3.5em;
  font-weight:700;
  text-align:center;
  line-height:.65em;
}

.fe_container .fe_currently .fe_temp .fe_dir
{
  position:relative;
  left:-5px;
  display:block;
  font-size:.3em;
  font-weight:400;
}

.fe_container .fe_currently .fe_summary
{
  font-size:1em;
  font-weight:700;
}

.fe_container .fe_currently .fe_wind
{
  font-size:.7em;
}

.fe_container .fe_daily
{
  float:left;
  display:table;
  height:100%;
  font-size:1em;
  text-align:center;
}

.fe_container .fe_daily .fe_day
{
  display:table-cell;
  text-align:center;
}

.fe_container .fe_daily .fe_day .fe_label
{
  font-weight:700;
  display:inline-block;
  width:100%;
}

.fe_container .fe_daily .fe_day .fe_temp_bar
{
  position:relative;
  width:40px;
  font-size:1.5em;
  border-radius:200px;
  background: __UP_IconColor__;
  margin:40px auto 0;
}

.fe_container .fe_daily .fe_day .fe_low_temp
{
  position:absolute;
  width:100%;
  bottom:-1.2em;
  left:0;
}

.fe_container .fe_daily .fe_day .fe_high_temp
{
  position:absolute;
  width:100%;
  top:-1.2em;
  left:0;
}

.fe_container .fe_daily .fe_day .fe_high_temp:after,.fe_container .fe_daily .fe_day .fe_low_temp:after,.fe_temp:after
{
  content:"\00b0";
}

.fe_container .fe_daily .fe_day .fe_icon
{
  width:70px;
  height:70px;
}
</style>

<script src="https://reveldigital.github.io/reveldigital-gadgets/third-party/skycons.js" type="text/javascript"></script>
<script src="https://maps.googleapis.com/maps/api/js?sensor=false&key=__UP_gkey__" type="text/javascript"></script>


<div id="forecast_embed" class="fe_container">
  <div class="fe_forecast">
     <div class="fe_currently">
        <canvas id="fe_current_icon" width="200" height="200"></canvas>
        <div class="fe_temp"> <span class="fe_dir"></span></div>
        <div style="clear:left"></div>
        <div class="fe_summary"></div>
        <div class="fe_wind"></div>
     </div>
     <div class="fe_daily">
     </div>
     <div style="clear:left"></div>
  </div>
</div>

<script type="text/javascript">

  var days = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];
  var prefs = new gadgets.Prefs();
  var geocoder = new google.maps.Geocoder();
  var geoLocation;
  var skycons;
  var search = prefs.getString("Location");
  var metricU = false;
  if (prefs.getString("Units") == 'si'){
    metricU = true;}
  
  function mapIcon(icon) {
  
    switch (icon) {
      case 'clear':
        return Skycons.CLEAR_DAY;
      case 'clearn':
        return Skycons.CLEAR_NIGHT;
      case 'pcloudyn':
        return Skycons.PARTLY_CLOUDY_NIGHT;
      case 'pcloudy':
        return Skycons.PARTLY_CLOUDY_DAY;
      case 'cloudy':
        return Skycons.CLOUDY;
      case 'rain':
        return Skycons.RAIN;
      case 'sleet':
        return Skycons.SLEET;
      case 'snow':
        return Skycons.SNOW;
      case 'wind':
        return Skycons.WIND;
      case 'fog':
        return Skycons.FOG;
      default:
        return Skycons.CLEAR_DAY;
    }
  }
  
  function load() {
    
    WebFont.load({
      google: {
        families: [
          gadgets.reveldigital.getFamilyName(prefs.getString("TextStyle"))
        ]
      }
    });
    
    skycons = new Skycons({
      "color": prefs.getString("IconColor"),
      "resizeClear": true
    });
    
    getConditions(search);
    getForecast(search);
    
    setInterval(function() {
      getConditions(search);
      getForecast(search);
    }, 1000 * 60 * 30);
  }

   function getConditions(location) {
    if (location == "" || location.indexOf("*|DEVICE.LOCATION.CITY|*") != -1) {
      location = "Fargo, ND";
    }
    var api = 'https://api.aerisapi.com/observations/' + encodeURIComponent(location) + '?client_id=hUqX7OlM6GSNFSm9wyhPF&client_secret=dkklytjvrU9sVSfMsNwF6rTiFk8VObvUkwlhPgrW';
    $.ajax({
      type: 'GET',
      url: api,
      dataType: 'json',
      success: function(data) {
        if (data.success === false) {
          return;
        }
        skycons.remove("fe_current_icon");
        skycons.add("fe_current_icon", mapIcon((data.response.ob.icon).split('.').slice(0, -1).join('.')));
        $(".fe_summary").text(data.response.ob.weatherShort);
        if (metricU) {
          $(".fe_wind").text("Wind: " + parseInt(data.response.ob.windSpeedKPH) + " kph");
          $(".fe_temp").text(parseInt(data.response.ob.tempC));}
        else {
          $(".fe_wind").text("Wind: " + parseInt(data.response.ob.windSpeedMPH) + " mph");
          $(".fe_temp").text(parseInt(data.response.ob.tempF));}
      }
    });
  }

  function getForecast(location) {
    if (location == "" || location.indexOf("*|DEVICE.LOCATION.CITY|*") != -1) {
      location = "Fargo, ND";
    }
    var api = 'https://api.aerisapi.com/forecasts/' + encodeURIComponent(location) + '?client_id=hUqX7OlM6GSNFSm9wyhPF&client_secret=dkklytjvrU9sVSfMsNwF6rTiFk8VObvUkwlhPgrW';
    $.ajax({
      type: 'GET',
      url: api,
      dataType: 'json',
      success: function(data) {
        if (data.success === false) {
          return;
        }
        $('.fe_daily').empty();
      
        if (metricU){
          var max = data.response[0].periods[0].maxTempC;
          var min = data.response[0].periods[0].minTempC;}
        else {
          var max = data.response[0].periods[0].maxTempF;
          var min = data.response[0].periods[0].minTempF;}

        for (let i = 0; i < prefs.getInt("ForecastDays"); i++) {
            var t = new Date(1970,0,1);
            t.setSeconds(data.response[0].periods[i].timestamp);
            
            var fe_day = $("<div class='fe_day'></div>");
            var fe_label = $("<span class='fe_label'></span>");
            var fe_icon = $("<canvas class='fe_icon' width='70' height='70' id='fe_day_icon" + i + "'></canvas>");
            var fe_temp_bar = $("<div class='fe_temp_bar'></div>");
            var fe_high_temp = $("<span class='fe_high_temp'></span>");
            var fe_low_temp = $("<span class='fe_low_temp'></span>");
            fe_temp_bar.append(fe_high_temp).append(fe_low_temp);
            fe_day.append(fe_label).append(fe_icon).append(fe_temp_bar);
            $(".fe_daily").append(fe_day);
            
            skycons.add('fe_day_icon' + i, mapIcon((data.response[0].periods[i].icon).split('.').slice(0, -1).join('.')));
            if (metricU) {
              $(fe_high_temp).text(parseInt(data.response[0].periods[i].maxTempC));
              $(fe_low_temp).text(parseInt(data.response[0].periods[i].minTempC));
              $(fe_label).text(days[t.getDay()]);
              $(fe_temp_bar).css('height', (data.response[0].periods[i].maxTempC - data.response[0].periods[i].minTempC) * 3 + 'px');}
            else {
              $(fe_high_temp).text(parseInt(data.response[0].periods[i].maxTempF));
              $(fe_low_temp).text(parseInt(data.response[0].periods[i].minTempF));
              $(fe_label).text(days[t.getDay()]);
              $(fe_temp_bar).css('height', (data.response[0].periods[i].maxTempF - data.response[0].periods[i].minTempF) * 3 + 'px');}
        }}
    });
  }

  gadgets.util.registerOnLoadHandler(load);
</script>

]]>
  </Content>
</Module>
