<?xml version="1.0" encoding="UTF-8" ?> 
<Module> 
<ModulePrefs title="YouTube Player" description="Play YouTube videos or live stream events" author="RevelDigital" background="transparent">
  <Require feature="reveldigital" />
  <Require feature="jquery" />
  <Require feature="offline" />
  
  <UserPref name="videoId" display_name="Video Id" datatype="string" />
  <UserPref name="looping" display_name="Looping" datatype="bool" default_value="true" />
  <UserPref name="captions" display_name="Show Captions" datatype="bool" default_value="false" />
  
  <UserPref name="ForeColor" datatype="hidden" />
  <UserPref name="BackColor" datatype="hidden" />
  <UserPref name="rdW" display_name="Width" required="true" default_value="280" datatype="hidden" />
  <UserPref name="rdH" display_name="Height" required="true" default_value="190" datatype="hidden" />
</ModulePrefs>
<Content type="html">
<![CDATA[

<style type="text/css">
body *
{
  line-height: 1.2em; 
  letter-spacing: 0; 
  word-spacing: normal;
}

body
{
  background: transparent;
  width: __UP_rdW__px;
  height: __UP_rdH__px;
  overflow: hidden;
}

#player
{
  width: __UP_rdW__px;
  height: __UP_rdH__px;
  border: 0;
}
</style>


<div id="player"></div>


<script type="text/javascript">

	var prefs = new gadgets.Prefs();
  
  
	var tag = document.createElement('script');

	tag.src = "https://www.youtube.com/iframe_api";
	var firstScriptTag = document.getElementsByTagName('script')[0];
	firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
	
	
	// var tag = document.createElement('script');
	// tag.id = 'iframe-demo';
	// tag.src = 'https://www.youtube.com/iframe_api';
	// var firstScriptTag = document.getElementsByTagName('script')[0];
	// firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);


	var player;
	function onYouTubeIframeAPIReady() {
		player = new YT.Player('player', {
			height: __UP_rdH__,
			width: __UP_rdW__,
			playerVars: {
				playsinline: 1,
				controls: 0,
				origin: 'https://shindig.reveldigital.com',
				loop: prefs.getBool('looping') ? 1 : 0,
				iv_load_policy: prefs.getBool('captions') ? 1 : 3
			},
			events: {
				onReady: onPlayerReady,
				onStateChange: onPlayerStateChange
			}
		});
	}
  
  
	// var player;
	// function onYouTubeIframeAPIReady() {
		// player = new YT.Player('player', {
			// height: '__UP_rdH__px',
			// width: '__UP_rdW__px',
			// videoId: '__UP_videoId__',
			// playerVars: {
				// autoplay: 1,
				// controls: 0,
				// autohide: 1,
				// modestbranding: 1,
				// origin: 'https://shindig.reveldigital.com' 
			// },
			// events: {
			  // 'onReady': onPlayerReady,
			  // 'onStateChange': onPlayerStateChange
			// }
		// });
	// }
	
	function onPlayerReady(event) {
		
		player.cueVideoById(extractVideoID(prefs.getString('videoId')), undefined);
		
		//event.target.playVideo();
	}
	
	function onPlayerStateChange(event) {
		if (event.data == YT.PlayerState.PLAYING && !done) {
			if (Client !== undefined) {
				Client.callback('playing');
			}
        } else if (event.data == YT.PlayerState.ENDED) {
			if (Client !== undefined) {
				Client.callback('ended');
			}
			if (prefs.getBool('looping')) {
				player.playVideo();
			}
		} else if (event.data == YT.PlayerState.CUED) {
			player.playVideo();
		}
	}
  
	function load() {
	}

	function extractVideoID(url) {
		var regExp = /^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#\&\?]*).*/;
		var match = url.match(regExp);
		if (match && match[7].length == 11) {
			return match[7];
		} else {
			return url;
		}
	}

	gadgets.util.registerOnLoadHandler(load);
  
  
	// window.addEventListener("message", receiveMessage, false);

	// function receiveMessage(event) {
  
    // //if (event.origin !== "http://example.org:8080")
	// //  return;
	  
	  // Client.callback(event.data);
	// }

</script>

]]>
</Content>
</Module>