{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///C:/Users/mike_/Documents/GitHub/reveldigital-client-library/dist/reveldigital/player-client/__ivy_ngcc__/fesm2015/reveldigital-player-client.js","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","AppComponent","client","title","onCommand$","subscribe","cmd","console","log","name","arg","setInterval","update","getDeviceTime","then","res","localTime","Date","deviceTime","getDeviceTimeZoneName","TZName","getDeviceTimeZoneID","TZId","getDeviceTimeZoneOffset","TZOffset","getLanguageCode","langCode","getDeviceKey","deviceKey","getRevelRoot","revelRoot","sendCommand","track","callback","trackEvent","selector","templateUrl","styleUrls","AppModule","provide","useValue","declarations","imports","providers","bootstrap","PlayerClientService","self","window","RevelDigital","Controller","onCommand","next","clientPromise","args","getClient","length","date","undefined","eventName","properties","JSON","stringify","timeEvent","id","newEventSession","Client","Promise","resolve","document","readyState","NoopClient","addEventListener","handleWindowLoad","ɵfac","PlayerClientService_Factory","t","ɵprov","factory","token","providedIn","ctorParameters","type","warn","PlayerClientModule","ɵmod","ɵinj","PlayerClientModule_Factory","bootstrapModule","err","error","webpackEmptyAsyncContext","req","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { PlayerClientService } from '@reveldigital/player-client';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  title = 'test-app';\n  localTime: any;\n  deviceTime: any;\n  TZName: any;\n  TZId: any;\n  TZOffset: any;\n  langCode: any;\n  deviceKey: any;\n  revelRoot: any;\n\n  constructor(public client: PlayerClientService) {\n\n    this.client.onCommand$.subscribe((cmd) => {\n      console.log(`Got command: ${cmd.name}, ${cmd.arg}`);\n    });\n  }\n\n  ngOnInit(): void {\n\n    setInterval(() => {\n      this.update();\n    }, 1000);\n  }\n\n  update() {\n\n    this.client.getDeviceTime().then((res) => {\n      this.localTime = new Date();\n      this.deviceTime = new Date(res);\n    });\n\n    this.client.getDeviceTimeZoneName().then((res) => {\n      this.TZName = res;\n    });\n\n    this.client.getDeviceTimeZoneID().then((res) => {\n      this.TZId = res;\n    })\n\n    this.client.getDeviceTimeZoneOffset().then((res) => {\n      this.TZOffset = res;\n    });\n\n    this.client.getLanguageCode().then((res) => {\n      this.langCode = res;\n    });\n\n    this.client.getDeviceKey().then((res) => {\n      this.deviceKey = res;\n    });\n\n    this.client.getRevelRoot().then((res) => {\n      this.revelRoot = res;\n    })\n\n  }\n\n  sendCommand() {\n\n    this.client.sendCommand(\"test\", \"it\");\n  }\n\n  trackEvent() {\n\n    this.client.track(\"test\", { \"a\": \"b\" });\n  }\n\n  callback() {\n\n    this.client.callback('test');\n  }\n}\n","<h2>Local Time: {{ localTime  | date:'medium' }}</h2>\n<h2>Device Time: {{ deviceTime  | date:'medium' }}</h2>\n<h2>Device TZ Name: {{ TZName }}</h2>\n<h2>Device TZ ID: {{ TZId }}</h2>\n<h2>Device TZ Offset: {{ TZOffset }}</h2>\n<h2>Device Language Code: {{ langCode }}</h2>\n<h2>Device Key: {{ deviceKey }}</h2>\n<h2>Revel Root: {{ revelRoot }}</h2>\n\n<button (click)=\"sendCommand()\">Send Command</button>\n<button (click)=\"trackEvent()\">Track Event</button>\n<button (click)=\"callback()\">Callback</button>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { LOCALE_ID } from '@angular/core';\nimport { APP_BASE_HREF, registerLocaleData } from '@angular/common';\n\nimport { AppComponent } from './app.component';\n\nimport { PlayerClientModule } from '@reveldigital/player-client';\n\nimport localeFr from '@angular/common/locales/fr';\nimport localeRu from '@angular/common/locales/ru';\nregisterLocaleData(localeFr);\nregisterLocaleData(localeRu);\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    PlayerClientModule\n  ],\n  providers: [\n    { provide: LOCALE_ID, useValue: \"fr\" },\n    { provide: APP_BASE_HREF, useValue: '/gadgets/ifr' }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { __awaiter } from 'tslib';\nimport { ɵɵdefineInjectable, Injectable, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport * as ɵngcc0 from '@angular/core';\nclass PlayerClientService {\r\n    constructor() {\r\n        this.onCommand$ = new Subject();\r\n        let self = this;\r\n        window.RevelDigital = {\r\n            Controller: {\r\n                onCommand: function (name, arg) {\r\n                    self.onCommand$.next({ name: name, arg: arg });\r\n                }\r\n            }\r\n        };\r\n        this.clientPromise = null;\r\n    }\r\n    callback(...args) {\r\n        this.getClient().then((client) => {\r\n            switch (args.length) {\r\n                case 0:\r\n                    client.callback();\r\n                    break;\r\n                case 1:\r\n                    client.callback(args[0]);\r\n                    break;\r\n                case 2:\r\n                    client.callback(args[1]);\r\n                    break;\r\n                case 3:\r\n                    client.callback(args[2]);\r\n                    break;\r\n                case 4:\r\n                    client.callback(args[3]);\r\n                    break;\r\n                case 5:\r\n                    client.callback(args[4]);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    getDeviceTime(date) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const client = yield this.getClient();\r\n            if (date !== undefined) {\r\n                return client.getDeviceTime(date);\r\n            }\r\n            return client.getDeviceTime();\r\n        });\r\n    }\r\n    getDeviceTimeZoneName() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const client = yield this.getClient();\r\n            return client.getDeviceTimeZoneName();\r\n        });\r\n    }\r\n    getDeviceTimeZoneID() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const client = yield this.getClient();\r\n            return client.getDeviceTimeZoneID();\r\n        });\r\n    }\r\n    getDeviceTimeZoneOffset() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const client = yield this.getClient();\r\n            return client.getDeviceTimeZoneOffset();\r\n        });\r\n    }\r\n    getLanguageCode() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const client = yield this.getClient();\r\n            return client.getLanguageCode();\r\n        });\r\n    }\r\n    getDeviceKey() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const client = yield this.getClient();\r\n            return client.getDeviceKey();\r\n        });\r\n    }\r\n    sendCommand(name, arg) {\r\n        this.getClient().then((client) => {\r\n            client.sendCommand(name, arg);\r\n        });\r\n    }\r\n    track(eventName, properties) {\r\n        this.getClient().then((client) => {\r\n            client.track(eventName, JSON.stringify(properties));\r\n        });\r\n    }\r\n    timeEvent(eventName) {\r\n        this.getClient().then((client) => {\r\n            client.timeEvent(eventName);\r\n        });\r\n    }\r\n    newEventSession(id) {\r\n        this.getClient().then((client) => {\r\n            if (id !== undefined) {\r\n                client.newEventSession();\r\n            }\r\n            else {\r\n                client.newEventSession(id);\r\n            }\r\n        });\r\n    }\r\n    getRevelRoot() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const client = yield this.getClient();\r\n            return client.getRevelRoot();\r\n        });\r\n    }\r\n    // ---\r\n    // PRIVATE METHODS.\r\n    // ---\r\n    // I return a Promise that resolves with a Tracker API (which may be the 3rd-party\r\n    // library or a mock API representation).\r\n    getClient() {\r\n        if (this.clientPromise) {\r\n            return (this.clientPromise);\r\n        }\r\n        if (window.Client) {\r\n            return (this.clientPromise = Promise.resolve(window.Client));\r\n        }\r\n        // A \"complete\" status indicates that the \"load\" event has been fired on the\r\n        // window; and, that all sub-resources such as Scripts, Images, and Frames have\r\n        // been loaded.\r\n        if (window.document.readyState === \"complete\") {\r\n            // If this event has fired AND the 3rd-party script isn't available (see IF-\r\n            // condition BEFORE this one), it means that the 3rd-party script either\r\n            // failed on the network or was BLOCKED by an ad-blocker. As such, we have to\r\n            // fall-back to using a mock API.\r\n            return (this.clientPromise = Promise.resolve(new NoopClient()));\r\n        }\r\n        // ASSERT: If we made it this far, the document has not completed loading (but it\r\n        // may be in an \"interactive\" state which is when I believe that the Angular app\r\n        // gets bootstrapped). As such, we need bind to the LOAD event to wait for our\r\n        // third-party scripts to load (or fail to load, or be blocked).\r\n        this.clientPromise = new Promise((resolve) => {\r\n            window.addEventListener(\"load\", function handleWindowLoad() {\r\n                // At this point, the 3rd-party library is either available or\r\n                // it's not - there's no further loading to do. If it's not\r\n                // present on the global scope, we're going to fall-back to using\r\n                // a mock API.\r\n                resolve(window.Client || new NoopClient());\r\n            });\r\n        });\r\n        return (this.clientPromise);\r\n    }\r\n}\nPlayerClientService.ɵfac = function PlayerClientService_Factory(t) { return new (t || PlayerClientService)(); };\r\nPlayerClientService.ɵprov = ɵɵdefineInjectable({ factory: function PlayerClientService_Factory() { return new PlayerClientService(); }, token: PlayerClientService, providedIn: \"root\" });\r\nPlayerClientService.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PlayerClientService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\r\n// ----------------------------------------------------------------------------------- //\r\n// ----------------------------------------------------------------------------------- //\r\n// I provide a mock API for the 3rd-party script. This just allows the consuming code to\r\n// act as though the library is available even if it failed to load (example, it was\r\n// blocked by an ad-blocker).\r\nclass NoopClient {\r\n    constructor() {\r\n        console.warn(\"Client API not available, falling back to mock API.\");\r\n    }\r\n    callback(...args) {\r\n        // NOOP implement, nothing to do....\r\n    }\r\n    getDeviceTime(date) {\r\n        return Promise.resolve(null);\r\n    }\r\n    getDeviceTimeZoneName() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return Promise.resolve(null);\r\n        });\r\n    }\r\n    getDeviceTimeZoneID() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return Promise.resolve(null);\r\n        });\r\n    }\r\n    getDeviceTimeZoneOffset() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return Promise.resolve(null);\r\n        });\r\n    }\r\n    getLanguageCode() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return Promise.resolve(null);\r\n        });\r\n    }\r\n    getDeviceKey() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return Promise.resolve(null);\r\n        });\r\n    }\r\n    sendCommand(name, arg) {\r\n        // NOOP implement, nothing to do....\r\n    }\r\n    track(eventName, properties) {\r\n        // NOOP implement, nothing to do....\r\n    }\r\n    timeEvent(eventName) {\r\n        // NOOP implement, nothing to do....\r\n    }\r\n    newEventSession(id) {\r\n        // NOOP implement, nothing to do....\r\n    }\r\n    getRevelRoot() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return Promise.resolve(null);\r\n        });\r\n    }\r\n}\n\nclass PlayerClientModule {\r\n}\nPlayerClientModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PlayerClientModule });\nPlayerClientModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PlayerClientModule_Factory(t) { return new (t || PlayerClientModule)(); }, imports: [[]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PlayerClientModule, [{\n        type: NgModule,\n        args: [{\n                imports: []\n            }]\n    }], null, null); })();\n\n/*\r\n * Public API Surface of player-client\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { PlayerClientModule, PlayerClientService };\n\n//# sourceMappingURL=reveldigital-player-client.js.map","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}