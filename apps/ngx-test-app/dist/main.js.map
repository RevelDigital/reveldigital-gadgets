{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;AASO,MAAM,YAAY;IAsBvB,8BAA8B;IAG9B,YAAmB,MAA2B;QAA3B,WAAM,GAAN,MAAM,CAAqB;QAvB9C,UAAK,GAAG,UAAU,CAAC;QACnB,UAAK,GAAG,WAAW,CAAC;QAwBlB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;QAE/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAEjD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACrC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACvC,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,EAAE;YAClC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE;YACjC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QAEN,WAAW,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,MAAM;QAEJ,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACvC,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;YAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YAC/C,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QACpB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YAC7C,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAClB,CAAC,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,uBAAuB,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACjD,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACtB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACzC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACtB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACtC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACtC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACvC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YAClC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACnB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACnC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QACpB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACrC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACtB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACvC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACrB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACvC,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QAET,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACxC,CAAC;IAED,iBAAiB;QAEf,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;IACtE,CAAC;IAED,UAAU;QAER,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED,QAAQ;QAEN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAED,MAAM;QAEJ,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;IACvB,CAAC;IAED,aAAa;QAEX,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;IACjD,CAAC;;wEA9IU,YAAY;0GAAZ,YAAY;QCczB,yEACwH;QAQ5F,wEAAY;QAAA,4DAAK;QACrB,wEACyH;QACrH,uDACQ;QAAA,4DAAK;QAErB,sEAAI;QAGI,uEAAU;QAAA,4DAAK;QACnB,yEACyH;QACrH,wDAA+B;;QAAA,4DAAK;QAE5C,sEAAI;QAGI,wEAAW;QAAA,4DAAK;QACpB,yEACyH;QACrH,wDAC6B;;QAAA,4DAAK;QAE1C,sEAAI;QAGI,2EAAc;QAAA,4DAAK;QACvB,yEACyH;QACrH,wDAAY;QAAA,4DAAK;QAEzB,sEAAI;QAGI,yEAAY;QAAA,4DAAK;QACrB,yEACyH;QACrH,wDAAU;QAAA,4DAAK;QAEvB,sEAAI;QAGI,6EAAgB;QAAA,4DAAK;QACzB,yEACyH;QACrH,wDAAc;QAAA,4DAAK;QAE3B,sEAAI;QAGI,iFAAoB;QAAA,4DAAK;QAC7B,yEACyH;QACrH,wDAAc;QAAA,4DAAK;QAE3B,sEAAI;QAGI,uEAAU;QAAA,4DAAK;QACnB,yEACyH;QACrH,wDAAe;QAAA,4DAAK;QAE5B,sEAAI;QAGI,uEAAU;QAAA,4DAAK;QACnB,yEACyH;QACrH,wDAAe;QAAA,4DAAK;QAE5B,sEAAI;QAGI,iEAAI;QAAA,4DAAK;QACb,yEACyH;QACrH,wDACuB;QAAA,4DAAK;QAEpC,sEAAI;QAGI,qEAAQ;QAAA,4DAAK;QACjB,yEACyH;QACrH,wDACW;QAAA,4DAAK;QAExB,sEAAI;QAGI,4EACY;QAAA,4DAAK;QACrB,yEACyH;QACrH,wDACgB;QAAA,4DAAK;QAE7B,sEAAI;QAGI,wEAAW;QAAA,4DAAK;QACpB,yEACyH;QACrH,wDACU;QAAA,4DAAK;QAEvB,sEAAI;QAGI,wEAAW;QAAA,4DAAK;QACpB,yEACyH;QACrH,wDACoB;;QAAA,4DAAK;QAEjC,sEAAI;QAGI,oEAAO;QAAA,4DAAK;QAChB,yEACyH;QAC7G,qIAAS,iBAAa,IAAC;QACkI,wEACtJ;QAAA,4DAAS;QACpB,6EACiK;QADzJ,qIAAS,gBAAY,IAAC;QACmI,uEACxJ;QAAA,4DAAS;QAClB,6EACiK;QADzJ,qIAAS,cAAU,IAAC;QACqI,oEAAQ;QAAA,4DAAS;QAClL,6EACiK;QADzJ,qIAAS,YAAQ,IAAC;QACuI,kEAAM;QAAA,4DAAS;QAChL,8EAC4J;QADpJ,qIAAS,mBAAe,IAAC;QAC2H,0EAC9I;QAAA,4DAAS;;QApIvB,0DACQ;QADR,oFACQ;QAQR,0DAA+B;QAA/B,qKAA+B;QAQ/B,0DAC6B;QAD7B,sKAC6B;QAQ7B,0DAAY;QAAZ,qFAAY;QAQZ,0DAAU;QAAV,mFAAU;QAQV,0DAAc;QAAd,uFAAc;QAQd,0DAAc;QAAd,uFAAc;QAQd,0DAAe;QAAf,wFAAe;QAQf,0DAAe;QAAf,wFAAe;QAQf,0DACuB;QADvB,uGACuB;QAQvB,0DACW;QADX,uFACW;QASX,0DACgB;QADhB,4FACgB;QAQhB,0DACU;QADV,sFACU;QAQV,0DACoB;QADpB,4JACoB;;;;;;;;;;;;;;;;;;;;;;;;ACnJU;AAGU;AAErB;AAEkB;AAEf;AACA;AACL;;AAC7C,mEAAkB,CAAC,kEAAQ,CAAC,CAAC;AAC7B,mEAAkB,CAAC,kEAAQ,CAAC,CAAC;AAgBtB,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GAHb,EAEV,YAPQ;YACP,oEAAa;YACb,uDAAW;YACX,2EAAkB;SACnB;mIAMU,SAAS,mBAZlB,wDAAY,aAGZ,oEAAa;QACb,uDAAW;QACX,2EAAkB;;;;;;;;;;;;;;;ACtBtB,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXpC;AACO,MAAMA,OAAO,GAAG,QAAQ;MCwBlBC,mBAAmB;;;;;;;;;;;;EA+D9BC,YAAYC,IAAY;IA1DxB;;AAEG;IACI,eAAU,GAAG,IAAIC,yCAAO,EAAY;IAC3C;;AAEG;IACI,aAAQ,GAAG,IAAIC,iDAAe,CAAC,KAAK,CAAC;IAC5C;;AAEG;IACI,aAAQ,GAAG,IAAID,yCAAO,EAAE;IAC/B;;AAEG;IACI,YAAO,GAAG,IAAIA,yCAAO,EAAE;;IAWtB,IAAW,eAAGE,+CAAS,CAACC,QAAQ,EAAE,oBAAoB,CAAC,CAACC,IAAI,CAClEC,qDAAK,EAAE,EACPC,mDAAG,CAAC,IAAI,CAACC,QAAQ,CAAC,CACnB;;IAIO,IAAU,cAAGL,+CAAS,CAACC,QAAQ,EAAE,mBAAmB,CAAC,CAACC,IAAI,CAChEC,qDAAK,EAAE,EACPC,mDAAG,CAAC,IAAI,CAACE,OAAO,CAAC,CAClB;;IAIO,IAAa,iBAAGN,+CAAS,CAAWC,QAAQ,EAAE,sBAAsB,CAAC,CAACC,IAAI,CAChFK,mDAAG,CAAEC,CAAM,IAAI;MAAG,OAAO;QAAEC,IAAI,EAAED,CAAC,CAACE,MAAM,CAACD,IAAI;QAAEE,GAAG,EAAEH,CAAC,CAACE,MAAM,CAACC;MAAG,CAAc;IAAA,CAAE,CAAC,EAClFR,qDAAK,EAAE,EACPC,mDAAG,CAAC,IAAI,CAACQ,UAAU,CAAC,CACrB;IAgBC,IAAIC,IAAI,GAAG,IAAI;IACdC,MAAc,CAACC,YAAY,GAAG;MAC7BC,UAAU,EAAE;QACVC,SAAS,EAAE,UAAUR,IAAY,EAAEE,GAAW;UAC5Cd,IAAI,CAACqB,GAAG,CAAC,MAAK;YACZL,IAAI,CAACD,UAAU,CAACO,IAAI,CAAC;cAAEV,IAAI,EAAEA,IAAI;cAAEE,GAAG,EAAEA;YAAG,CAAE,CAAC;UAChD,CAAC,CAAC;SACH;QACDS,OAAO,EAAE;UACPvB,IAAI,CAACqB,GAAG,CAAC,MAAK;YACZL,IAAI,CAACR,QAAQ,CAACc,IAAI,CAAC,IAAI,CAAC;UAC1B,CAAC,CAAC;SACH;QACDE,MAAM,EAAE;UACNxB,IAAI,CAACqB,GAAG,CAAC,MAAK;YACZL,IAAI,CAACP,OAAO,CAACa,IAAI,CAAC,IAAI,CAAC;UACzB,CAAC,CAAC;;MAEL;KACF;IAED,IAAI,CAACG,UAAU,GAAG,IAAI,CAACC,WAAW,CAACC,SAAS,CAAC,MAAQ,EAAC,CAAC;IACvD,IAAI,CAACC,SAAS,GAAG,IAAI,CAACC,UAAU,CAACF,SAAS,CAAC,MAAQ,EAAC,CAAC;IACrD,IAAI,CAACG,YAAY,GAAG,IAAI,CAACC,aAAa,CAACJ,SAAS,CAAC,MAAQ,EAAC,CAAC;IAE3D,IAAI,CAACK,aAAa,GAAG,IAAI;IAEzB,IAAI,CAACC,QAAQ,CAACX,IAAI,CAAC,IAAI,CAAC;;;EAI1BY,WAAWA;;IAET,UAAI,CAACT,UAAU,MAAE,+CAAW,EAAE;IAC9B,UAAI,CAACG,SAAS,MAAE,+CAAW,EAAE;IAC7B,UAAI,CAACE,YAAY,MAAE,+CAAW,EAAE;IAEhC,IAAI,CAACG,QAAQ,CAACX,IAAI,CAAC,KAAK,CAAC;;;EAIpB,OAAOa,IAAIA,CAACC,IAAS;IAE1BC,OAAO,CAACC,GAAG,CACT,gDAAgD,EAChD,sCAAsC,CACvC;;EAGH;;;;;;;;;AASG;EACIC,QAAQA,CAAC,GAAGC,IAAW;IAE5B,IAAI,CAACC,SAAS,EAAE,CAACC,IAAI,CAAEC,MAAM,IAAI;MAE/B,QAAQH,IAAI,CAACI,MAAM;QACjB,KAAK,CAAC;UACJD,MAAM,CAACJ,QAAQ,EAAE;UACjB;QACF,KAAK,CAAC;UACJI,MAAM,CAACJ,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;UACxB;QACF,KAAK,CAAC;UACJG,MAAM,CAACJ,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;UACxB;QACF,KAAK,CAAC;UACJG,MAAM,CAACJ,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;UACxB;QACF,KAAK,CAAC;UACJG,MAAM,CAACJ,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;UACxB;QACF,KAAK,CAAC;UACJG,MAAM,CAACJ,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;UACxB;MACH;IACH,CAAC,CAAC;;EAGJ;;;;;;;;;;;AAWG;EACIK,QAAQA;IAEb,OAAO,IAAI5B,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,EAAE;;EAGzC;;;;;;AAMG;EACU6B,aAAaA,CAACC,IAAW;;MAEpC,MAAMJ,MAAM,GAAG,MAAM,IAAI,CAACF,SAAS,EAAE;MAErC,IAAIM,IAAI,KAAKC,SAAS,EAAE;QACtB,OAAOL,MAAM,CAACG,aAAa,CAACC,IAAI,CAAC;MAClC;MACD,OAAOJ,MAAM,CAACG,aAAa,EAAE;KAC9B;EAAA;EAED;;;;AAIG;EACUG,qBAAqBA;;MAEhC,MAAMN,MAAM,GAAG,MAAM,IAAI,CAACF,SAAS,EAAE;MAErC,OAAOE,MAAM,CAACM,qBAAqB,EAAE;KACtC;EAAA;EAED;;;;AAIG;EACUC,mBAAmBA;;MAE9B,MAAMP,MAAM,GAAG,MAAM,IAAI,CAACF,SAAS,EAAE;MAErC,OAAOE,MAAM,CAACO,mBAAmB,EAAE;KACpC;EAAA;EAED;;;;AAIG;EACUC,uBAAuBA;;MAElC,MAAMR,MAAM,GAAG,MAAM,IAAI,CAACF,SAAS,EAAE;MAErC,OAAOE,MAAM,CAACQ,uBAAuB,EAAE;KACxC;EAAA;EAED;;;;AAIG;EACUC,eAAeA;;MAE1B,MAAMT,MAAM,GAAG,MAAM,IAAI,CAACF,SAAS,EAAE;MAErC,OAAOE,MAAM,CAACS,eAAe,EAAE;KAChC;EAAA;EAED;;;;AAIG;EACUC,YAAYA;;MAEvB,MAAMV,MAAM,GAAG,MAAM,IAAI,CAACF,SAAS,EAAE;MAErC,OAAOE,MAAM,CAACU,YAAY,EAAE;KAC7B;EAAA;EAED;;;;;AAKG;EACIC,WAAWA,CAAC1C,IAAY,EAAEE,GAAW;IAE1C,IAAI,CAAC2B,SAAS,EAAE,CAACC,IAAI,CAAEC,MAAM,IAAI;MAC/BA,MAAM,CAACW,WAAW,CAAC1C,IAAI,EAAEE,GAAG,CAAC;IAC/B,CAAC,CAAC;;EAGJ;;;;;;;AAOG;EACIyC,iBAAiBA,CAACC,UAAoB,EAAE5C,IAAY,EAAEE,GAAW;IAEtE,IAAI,CAAC2B,SAAS,EAAE,CAACC,IAAI,CAAEC,MAAM,IAAI;MAC/BA,MAAM,CAACY,iBAAiB,CAACC,UAAU,EAAE5C,IAAI,EAAEE,GAAG,CAAC;IACjD,CAAC,CAAC;;EAGJ;;;;;;AAMG;EACI2C,KAAKA,CAACC,SAAiB,EAAEC,UAA6B;IAE3D,IAAI,CAAClB,SAAS,EAAE,CAACC,IAAI,CAAEC,MAAM,IAAI;MAC/BA,MAAM,CAACc,KAAK,CAACC,SAAS,EAAEE,IAAI,CAACC,SAAS,CAACF,UAAU,CAAC,CAAC;IACrD,CAAC,CAAC;;EAGJ;;;;;;;;AAQG;EACIG,SAASA,CAACJ,SAAiB;IAEhC,IAAI,CAACjB,SAAS,EAAE,CAACC,IAAI,CAAEC,MAAM,IAAI;MAC/BA,MAAM,CAACmB,SAAS,CAACJ,SAAS,CAAC;IAC7B,CAAC,CAAC;;EAGJ;;;;;;AAMG;EACIK,eAAeA,CAACC,EAAW;IAEhC,IAAI,CAACvB,SAAS,EAAE,CAACC,IAAI,CAAEC,MAAM,IAAI;MAC/B,IAAIqB,EAAE,KAAKhB,SAAS,EAAE;QACpBL,MAAM,CAACoB,eAAe,EAAE;MACzB,OAAM;QACLpB,MAAM,CAACoB,eAAe,CAACC,EAAE,CAAC;MAC3B;IACH,CAAC,CAAC;;EAGJ;;;;AAIG;EACUC,YAAYA;;MAEvB,MAAMtB,MAAM,GAAG,MAAM,IAAI,CAACF,SAAS,EAAE;MAErC,OAAOE,MAAM,CAACsB,YAAY,EAAE;KAC7B;EAAA;EAED;;;;AAIG;EACUC,aAAaA;;MAExB,MAAMvB,MAAM,GAAG,MAAM,IAAI,CAACF,SAAS,EAAE;MAErC,OAAOmB,IAAI,CAACO,KAAK,CAAC,MAAMxB,MAAM,CAACuB,aAAa,EAAE,CAAC;KAChD;EAAA;EAED;;;AAGG;EACIE,MAAMA;IAEX,IAAI,CAAC3B,SAAS,EAAE,CAACC,IAAI,CAAEC,MAAM,IAAI;MAE/BA,MAAM,CAACyB,MAAM,EAAE;IACjB,CAAC,CAAC;;EAGJ;;;;;AAKG;EACUC,aAAaA;;MAExB,MAAM1B,MAAM,GAAG,MAAM,IAAI,CAACF,SAAS,EAAE;MAErC,OAAOE,MAAM,YAAY2B,UAAU;KACpC;EAAA;EAED;;;;AAIC;EACYC,SAASA;;MAEpB,MAAM5B,MAAM,GAAG,MAAM,IAAI,CAACF,SAAS,EAAE;MAErC,IAAI+B,GAAG,GAAQZ,IAAI,CAACO,KAAK,CAAS,MAAMxB,MAAM,CAAC4B,SAAS,EAAE,CAAC;MAE3D,MAAME,MAAM,GAAc,CAACD,GAAG,CAAC,CAAC9D,GAAG,CAAE+D,MAAW,IAAI;;QAElD,OAAO;UACL7D,IAAI,EAAE6D,MAAM,CAAC7D,IAAI;UACjB8D,eAAe,EAAED,MAAM,CAACE,GAAG;UAC3BC,UAAU,EAAEH,MAAM,CAACI,UAAU;UAC7BC,cAAc,EAAE,IAAIC,IAAI,CAACN,MAAM,CAACO,cAAc,CAAC;UAC/CC,QAAQ,EAAER,MAAM,CAACS,QAAQ;UACzBC,QAAQ,EAAEV,MAAM,CAACW,QAAQ;UACzBC,IAAI,EAAE,YAAM,CAACC,WAAW,MAAE,yCAAK,CAAC,IAAI,CAAC;UACrCC,QAAQ,EAAE;YACRC,IAAI,EAAE,YAAM,CAACD,QAAQ,0CAAEC,IAAI;YAC3BC,KAAK,EAAE,YAAM,CAACF,QAAQ,0CAAEE,KAAK;YAC7BC,OAAO,EAAE,YAAM,CAACH,QAAQ,0CAAEG,OAAO;YACjCC,UAAU,EAAE,YAAM,CAACJ,QAAQ,0CAAEK,UAAU;YACvCC,OAAO,EAAE,YAAM,CAACN,QAAQ,0CAAEM,OAAO;YACjCC,QAAQ,EAAE,YAAM,CAACP,QAAQ,0CAAEO,QAAQ;YACnCC,SAAS,EAAE,YAAM,CAACR,QAAQ,0CAAEQ;UAC7B;SACF;MACH,CAAC,CAAC;MACF,OAAOtB,MAAM,CAAC,CAAC,CAAC;KACjB;EAAA;EAED;;;;AAIG;EACUuB,QAAQA;;MAEnB,MAAMrD,MAAM,GAAG,MAAM,IAAI,CAACF,SAAS,EAAE;MAErC,OAAOE,MAAM,CAACqD,QAAQ,EAAE;KACzB;EAAA;EAED;;;;AAIG;EACUC,SAASA;;MAEpB,MAAMtD,MAAM,GAAG,MAAM,IAAI,CAACF,SAAS,EAAE;MAErC,OAAOE,MAAM,CAACsD,SAAS,EAAE;KAC1B;EAAA;EAED;;;;;AAKG;EACUC,WAAWA;;MAEtB,MAAMvD,MAAM,GAAG,MAAM,IAAI,CAACF,SAAS,EAAE;MAErC,OAAOE,MAAM,CAACuD,WAAW,EAAE;KAC5B;EAAA;EAED;;;;AAIG;EACUC,aAAaA;;MAExB,OAAOC,OAAO,CAACC,OAAO,CAACxG,OAAO,CAAC;KAChC;EAAA;EAED;;;;;;;;AAQG;EACUyG,aAAaA,CAAC3B,GAAW,EAAE4B,KAAgC;;MAEtE,IAAI,MAAM,IAAI,CAAClC,aAAa,EAAE,EAAE;QAC9B,MAAM1B,MAAM,GAAG,MAAM,IAAI,CAACF,SAAS,EAAE;QACrCE,MAAM,CAAC2D,aAAa,CAAC3B,GAAG,EAAE4B,KAAK,CAAC;MACjC,OAAM;QACLlE,OAAO,CAACC,GAAG,CACT,sDAAsD,EACtD,sCAAsC,CACvC;MACF;KACF;EAAA;;;;;EAMOG,SAASA;IAEf,IAAI,IAAI,CAACT,aAAa,EAAE;MAEtB,OAAQ,IAAI,CAACA,aAAa;IAC3B;IAED,IAAIf,MAAM,CAACuF,MAAM,EAAE;MAEjB,OAAQ,IAAI,CAACxE,aAAa,GAAGoE,OAAO,CAACC,OAAO,CAACpF,MAAM,CAACuF,MAAM,CAAC;IAC5D;;;;IAKD,IAAIvF,MAAM,CAACb,QAAQ,CAACqG,UAAU,KAAK,UAAU,EAAE;;;;;MAM7C,OAAQ,IAAI,CAACzE,aAAa,GAAGoE,OAAO,CAACC,OAAO,CAAC,IAAI/B,UAAU,EAAE,CAAC;IAC/D;;;;;IAMD,IAAI,CAACtC,aAAa,GAAG,IAAIoE,OAAO,CAC7BC,OAAO,IAAI;MAEVpF,MAAM,CAACyF,gBAAgB,CACrB,MAAM,EACN,SAASC,gBAAgBA;;;;;QAMvBN,OAAO,CAACpF,MAAM,CAACuF,MAAM,IAAI,IAAIlC,UAAU,EAAE,CAAC;MAC5C,CAAC,CACF;IAEH,CAAC,CACF;IAED,OAAQ,IAAI,CAACtC,aAAa;;;;mBA5gBjBlC,mBAAmB;AAAA;AAAnBA,2CAAAA,gEAAAA;SAAAA,mBAAmB;EAAA8G,SAAnB9G,mBAAmB;EAAA+G,YAFlB;AAAM;;qHAEP/G,mBAAmB;UAH/BgH,qDAAU;IAACtE;MACVqE,UAAU,EAAE;KACb;;;;;;;AAmhBD;AACA;AAEA;AACA;AACA;AAEA;AACA,MAAMvC,UAAU;EAEdvE;IAEEsC,OAAO,CAACC,GAAG,CACT,sDAAsD,EACtD,sCAAsC,CACvC;;EAGIC,QAAQA,CAAC,GAAGC,IAAW;;;EAKvBM,aAAaA,CAACC,IAAW;IAE9B,OAAOqD,OAAO,CAACC,OAAO,CAAC,IAAItB,IAAI,EAAE,CAACgC,WAAW,EAAE,CAAC;;EAGrC9D,qBAAqBA;;MAEhC,OAAOmD,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;KAC7B;EAAA;EAEYnD,mBAAmBA;;MAE9B,OAAOkD,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;KAC7B;EAAA;EAEYlD,uBAAuBA;;MAElC,OAAOiD,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;KAC7B;EAAA;EAEYjD,eAAeA;;MAE1B,OAAOgD,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;KAC7B;EAAA;EAEYhD,YAAYA;;MAEvB,OAAO+C,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;KAC7B;EAAA;EAEM/C,WAAWA,CAAC1C,IAAY,EAAEE,GAAW;;;EAKrCyC,iBAAiBA,CAACC,UAAoB,EAAE5C,IAAY,EAAEE,GAAW;;;EAKjE2C,KAAKA,CAACC,SAAiB,EAAEC,UAAmB;;;EAK5CG,SAASA,CAACJ,SAAiB;;;EAK3BK,eAAeA,CAACC,EAAW;;;EAKrBC,YAAYA;;MAEvB,OAAOmC,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;KAC7B;EAAA;EAEYnC,aAAaA;;MAExB,OAAOkC,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;KAC7B;EAAA;EAEMjC,MAAMA;;;EAKAG,SAASA;;MAEpB,OAAO6B,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;KAC7B;EAAA;EAEYL,QAAQA;;MAEnB,OAAOI,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;KAC7B;EAAA;EAEYJ,SAASA;;MAEpB,OAAOG,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;KAC7B;EAAA;EAEYH,WAAWA;;MAEtB,OAAOE,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;KAC7B;EAAA;EAEYF,aAAaA;;MAExB,OAAOC,OAAO,CAACC,OAAO,CAACxG,OAAO,CAAC;KAChC;EAAA;EAEMyG,aAAaA,CAAC3B,GAAW,EAAE4B,KAAgC;IAEhE,IAAItF,MAAM,CAAC+F,MAAM,KAAK/F,MAAM,CAACgG,GAAG,EAAE;MAEhChG,MAAM,CAAC+F,MAAM,CAACE,WAAW,CACvBtD,IAAI,CAACC,SAAS,CAAC;QACbsD,IAAI,EAAE,eAAe;QACrBxC,GAAG,EAAEA,GAAG;QACR4B,KAAK,EAAEA;OACR,CAAC,EACF,GAAG,CACJ;IACF;;AAEJ;ACzqBD,MAAMa,OAAO,GAAY,WAAW,CAACC,IAAI,CAACjH,QAAQ,CAACmF,QAAQ,CAAC+B,IAAI,CAAC;AACjE,CAACF,OAAO,IAAIG,6DAAc,EAAE;AAG5B;MAIaC,cAAc;EAEzBzH,YACS0H,IAAgB,EACfC,MAAsB,EACtBC,OAAe;IAFhB,IAAI,QAAJF,IAAI;IACH,IAAM,UAANC,MAAM;IACN,IAAO,WAAPC,OAAO;;EAGjBxF,IAAIA;IAEF,OAAO,IAAIiE,OAAO,CAAcC,OAAO,IAAIuB,gDAAAA;MAEzC,IAAI,CAACC,SAAS,EAAE;MAEhB,IAAIC,wDAAS,EAAE,EAAE;QACfzF,OAAO,CAACC,GAAG,CACT,+BAA+B,EAC/B,sCAAsC,CACvC;QAED;;AAEG;QACGrB,MAAO,CAAC8G,OAAO,GAAG;UAEtBC,KAAK,EAAE;YACLC,SAASA,CAACtD,GAAW,EAAI;cAAA,OAAO,IAAI,CAACuD,kBAAkB,CAACvD,GAAG,CAAC;YAAA;YAE5DwD,QAAQA,CAACxD,GAAW;cAAI,OAAO,IAAI,CAACuD,kBAAkB,CAACvD,GAAG,CAAC,CAACyD,KAAK,CAAC,GAAG,CAAC;YAAA;YAEtEC,OAAOA,CAAC1D,GAAW,EAAI;cAAA,OAAO,IAAI,CAACuD,kBAAkB,CAACvD,GAAG,CAAC,KAAK,MAAM;YAAA;YAErE2D,UAAUA;YAEVC,QAAQA,CAAC5D,GAAW,EAAI;cAAA,OAAO6D,UAAU,CAAC,IAAI,CAACN,kBAAkB,CAACvD,GAAG,CAAC,CAAC;YAAA;YAEvE8D,MAAMA,CAAC9D,GAAW,EAAI;cAAA,OAAO+D,QAAQ,CAAC,IAAI,CAACR,kBAAkB,CAACvD,GAAG,CAAC,CAAC;YAAA;YAEnEgE,OAAOA;cAAK,OAAO,IAAI,CAACT,kBAAkB,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,IAAI,GAAG,IAAI,CAACA,kBAAkB,CAAC,MAAM,CAAC;YAAC;YAEnGA,kBAAkBA,CAACtH,IAAY,EAAEgI,MAAM,GAAG3H,MAAM,CAACsE,QAAQ,CAACsD,IAAI;cAE5DjI,IAAI,GAAGA,IAAI,CAACkI,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC;cACtC,IAAIC,KAAK,GAAG,IAAIC,MAAM,CAAC,MAAM,GAAGpI,IAAI,GAAG,mBAAmB,CAAC;gBACzDqI,OAAO,GAAGF,KAAK,CAACG,IAAI,CAACN,MAAM,CAAC;cAC9B,IAAI,CAACK,OAAO,EAAE,OAAO,EAAE;cACvB,IAAI,CAACA,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE;cAC1B,OAAOE,kBAAkB,CAACF,OAAO,CAAC,CAAC,CAAC,CAACH,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;;UAE5D;SACF;QAED,IAAI,CAACrB,IAAI,CAAC2B,GAAG,CAAC,oBAAoB,EAAE;UAClCC,YAAY,EAAE;QACf,EAAC,CAAC1H,SAAS,CAACS,IAAI,IAAG;UAClB,MAAMkH,GAAG,GAAQC,yCAAS,CAACnH,IAAI,CAAC;UAChC,IAAIqH,MAAM,GAAQ,EAAE;UACpB,KAAK,MAAMC,GAAG,IAAIJ,GAAG,CAACK,KAAK,EAAE;YAC3BF,MAAM,CAACC,GAAG,CAAC9I,IAAI,CAAC,GAAG8I,GAAG,CAACE,aAAa;UACrC;UAED,IAAI,CAACjC,OAAO,CAACkC,QAAQ,CAAC,EAAE,EAAE;YACxBC,UAAU,EAAE,IAAI,CAACpC,MAAM;YACvBqC,WAAW,EAAEN;UACd,EAAC;UAEFpH,OAAO,CAACC,GAAG,CACT,kCAAkC,EAClC,sCAAsC,CACvC;QACH,CAAC,EAAG0H,GAAG,IAAI;UACT3H,OAAO,CAACC,GAAG,CACT,2DAA2D0H,GAAG,EAAE,EAChE,sCAAsC,CACvC;UACD3H,OAAO,CAACC,GAAG,CACT,mHAAmH,EACnH,qCAAqC,CACtC;QACH,CAAC,CAAC;MACH;MACD+D,OAAO,EAAE;KACV,EAAC;;EAII4D,aAAaA,CAACC,GAAG;IAEvB,IAAIC,iBAAiB,GAAG,uEAAuE;IAC/F,IAAIA,iBAAiB,CAAC9C,IAAI,CAAC6C,GAAG,CAAC,EAAE;MAC/B,IAAIE,OAAO,GAAGF,GAAG,CAACG,KAAK,CAACF,iBAAiB,CAAC;MAC1C,OAAOC,OAAO,CAAC,CAAC,CAAC,CAAChC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,OAAM;MACL,OAAO,EAAE;IACV;;EAGH;;AAEG;EACKP,SAASA;IAEf,MAAMyC,UAAU,GAAG,IAAIC,eAAe,CAACtJ,MAAM,CAACsE,QAAQ,CAACqD,MAAM,CAAC;IAC9D0B,UAAU,CAACE,OAAO,CAAC,CAACd,GAAG,EAAE/E,GAAG,KAAI;MAC9B,IAAI;QACF,IAAI8F,UAAU,GAAG,IAAI,CAACR,aAAa,CAACP,GAAG,CAAC;QACxC,IAAIe,UAAU,KAAK,EAAE,EAAE;UACrBC,+CAAY,CAAC;YACXC,MAAM,EAAE;cACNC,QAAQ,EAAE,CAACH,UAAU;YACtB;YACDI,UAAU,EAAGC,UAAU,IAAI;cACzBzI,OAAO,CAACC,GAAG,CAAC,sBAAsBwI,UAAU,EAAE,EAC5C,sCAAsC,CAAC;aAC1C;YACDC,YAAY,EAAGD,UAAU,IAAI;cAC3BzI,OAAO,CAACC,GAAG,CAAC,oBAAoBwI,UAAU,EAAE,EAC1C,qCAAqC,CAAC;;UAE3C,EAAC;QACH;MACF,EAAC,OAAOnK,CAAC,EAAE,CACX;IACH,CAAC,CAAC;;;;mBA3HO6G,cAAc;AAAA;AAAdA,sCAAAA,gEAAAA;SAAAA,cAAc;EAAAZ,SAAdY,cAAc;EAAAX,YAFb;AAAM;;qHAEPW,cAAc;UAH1BV,qDAAU;IAACtE;MACVqE,UAAU,EAAE;KACb;;;;;;;;;;;;;;ACVD;;;;;;AAMG;MAIUmE,aAAa;EACtBjL,YAAoBkL,SAAuB;IAAvB,IAAS,aAATA,SAAS;;EAE7BC,SAASA,CAAC3E,KAAU;IAChB,OAAO,IAAI,CAAC0E,SAAS,CAACE,wBAAwB,CAAC5E,KAAK,CAAC;;;;mBAJhDyE,aAAa;AAAA;;;QAAbA,aAAa;EAAAI;AAAA;;qHAAbJ,aAAa;UAHzBK,+CAAI;IAAC7I;MACF5B,IAAI,EAAE;KACT;;;;;;;MAaY0K,qBAAqB;;mBAArBA,qBAAqB;AAAA;;QAArBA;AAAqB,EAZR;8GAYQ;;qHAArBA,qBAAqB;UAJjCC,mDAAQ;IAAC/I;MACNgJ,YAAY,EAAE,CAACR,aAAa,CAAC;MAC7BS,OAAO,EAAE,CAACT,aAAa;KAC1B;;;;;;MCcYU,kBAAkB;;mBAAlBA,kBAAkB;AAAA;AAAlBA,yCAAAA,8DAAAA;QAAAA;AAAkB,EApBN;AAoBZA,yCAAAA,8DAAAA;aAlBA,CAAC;IACVC,OAAO,EAAEC,0DAAe;IACxBC,UAAU,EAAEC,aAAa;IACzBC,IAAI,EAAE,CAACvE,cAAc,EAAE1H,mBAAmB,CAAC;IAC3CkM,KAAK,EAAE;EACR,GACD;IACEL,OAAO,EAAEM,oDAAS;IAClBJ,UAAU,EAAEA,MAAK;MACf,IAAI;QACF,OAAO,IAAI9D,OAAO,CAACC,KAAK,EAAE,CAACW,OAAO,EAAE;MACrC,EAAC,OAAMuD;QACN,OAAO,IAAI;MACZ;;EAEJ,GACD;IAAEP,OAAO,EAAEQ,2DAAa;IAAEC,QAAQ,EAAE;EAAc,CAAE,CAAC;EAAAC,UAxB5C,CACPC,mEAAgB,EAChBC,kEAAoB,CAAC,EAAE,CAAC,EACxBjB,qBAAqB,CACtB,EAECA,qBAAqB;AAAA;;qHAoBZI,kBAAkB;UA3B9BH,mDAAQ;IAAC/I;MACR6J,OAAO,EAAE,CACPC,mEAAgB,EAChBC,kEAAoB,CAAC,EAAE,CAAC,EACxBjB,qBAAqB,CACtB;MACDG,OAAO,EAAE,CACPH,qBAAqB,CACtB;MACDmB,SAAS,EAAE,CAAC;QACVd,OAAO,EAAEC,0DAAe;QACxBC,UAAU,EAAEC,aAAa;QACzBC,IAAI,EAAE,CAACvE,cAAc,EAAE1H,mBAAmB,CAAC;QAC3CkM,KAAK,EAAE;MACR,GACD;QACEL,OAAO,EAAEM,oDAAS;QAClBJ,UAAU,EAAEA,MAAK;UACf,IAAI;YACF,OAAO,IAAI9D,OAAO,CAACC,KAAK,EAAE,CAACW,OAAO,EAAE;UACrC,EAAC,OAAMuD;YACN,OAAO,IAAI;UACZ;;MAEJ,GACD;QAAEP,OAAO,EAAEQ,2DAAa;QAAEC,QAAQ,EAAE;MAAc,CAAE;KACrD;;;AAGD,SAASN,aAAaA,CAACY,cAA8B;EACnD,OAAO,MAAW9E,gDAAAA;IAChB9H,mBAAmB,CAACqC,IAAI,CAAC,EAAE,CAAC;IAC5B,MAAMuK,cAAc,CAACvK,IAAI,EAAE;EAC7B,CAAC;AACH;;;;AC7CA;;AAEG;;;;ACFH;;AAEG","sources":["./projects/test-app/src/app/app.component.ts","./projects/test-app/src/app/app.component.html","./projects/test-app/src/app/app.module.ts","./projects/test-app/src/environments/environment.ts","./projects/test-app/src/main.ts","./projects/reveldigital/player-client/src/lib/version.ts","./projects/reveldigital/player-client/src/lib/player-client.service.ts","./projects/reveldigital/player-client/src/lib/app-init.service.ts","./projects/reveldigital/player-client/src/lib/safe-style.pipe.ts","./projects/reveldigital/player-client/src/lib/player-client.module.ts","./projects/reveldigital/player-client/src/public-api.ts","./projects/reveldigital/player-client/src/reveldigital-player-client.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { PlayerClientService } from '@reveldigital/player-client';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  title = 'test-app';\r\n  state = 'Not ready';\r\n  localTime: any;\r\n  deviceTime: any;\r\n  TZName: any;\r\n  TZId: any;\r\n  TZOffset: any;\r\n  langCode: any;\r\n  deviceKey: any;\r\n  revelRoot: any;\r\n  remoteDeviceKey: any;\r\n  commandMap: any;\r\n  prefs: any;\r\n  style: any;\r\n  width: any;\r\n  height: any;\r\n  duration: any;\r\n  version: any;\r\n  isPreviewMode: any;\r\n\r\n  //prefs = new gadgets.Prefs();\r\n\r\n\r\n  constructor(public client: PlayerClientService) {\r\n\r\n    this.prefs = client.getPrefs();\r\n\r\n    this.style = this.prefs.getString('myStylePref');\r\n\r\n    this.client.onReady$.subscribe((val) => {\r\n      console.log(val ? 'Ready' : 'Not ready');\r\n      this.state = val ? 'Ready' : 'Not ready';\r\n    });\r\n\r\n    this.client.onCommand$.subscribe((cmd) => {\r\n      console.log(`onCommand: ${cmd.name}, ${cmd.arg}`);\r\n    });\r\n\r\n    this.client.onStart$.subscribe(() => {\r\n      console.log(\"onStart\");\r\n      this.state = 'Started';\r\n    });\r\n\r\n    this.client.onStop$.subscribe(() => {\r\n      console.log(\"onStop\");\r\n      this.state = 'Stopped';\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    setInterval(() => {\r\n      this.update();\r\n    }, 1000);\r\n  }\r\n\r\n  update() {\r\n\r\n    this.client.getDeviceTime().then((res) => {\r\n      this.localTime = new Date();\r\n      this.deviceTime = new Date(res);\r\n    });\r\n\r\n    this.client.getDeviceTimeZoneName().then((res) => {\r\n      this.TZName = res;\r\n    });\r\n\r\n    this.client.getDeviceTimeZoneID().then((res) => {\r\n      this.TZId = res;\r\n    })\r\n\r\n    this.client.getDeviceTimeZoneOffset().then((res) => {\r\n      this.TZOffset = res;\r\n    });\r\n\r\n    this.client.getLanguageCode().then((res) => {\r\n      this.langCode = res;\r\n    });\r\n\r\n    this.client.getDeviceKey().then((res) => {\r\n      this.deviceKey = res;\r\n    });\r\n\r\n    this.client.getRevelRoot().then((res) => {\r\n      this.revelRoot = res;\r\n    });\r\n\r\n    this.client.getCommandMap().then((res) => {\r\n      this.commandMap = res;\r\n    });\r\n\r\n    this.client.getWidth().then((res) => {\r\n      this.width = res;\r\n    });\r\n\r\n    this.client.getHeight().then((res) => {\r\n      this.height = res;\r\n    });\r\n\r\n    this.client.getDuration().then((res) => {\r\n      this.duration = res;\r\n    });\r\n\r\n    this.client.getSdkVersion().then((res) => {\r\n      this.version = res;\r\n    });\r\n\r\n    this.client.isPreviewMode().then((res) => {\r\n      this.isPreviewMode = res;\r\n    });\r\n  }\r\n\r\n  sendCommand() {\r\n\r\n    this.client.sendCommand(\"test\", \"it\");\r\n  }\r\n\r\n  sendRemoteCommand() {\r\n\r\n    this.client.sendRemoteCommand([this.remoteDeviceKey], \"test\", \"it\");\r\n  }\r\n\r\n  trackEvent() {\r\n\r\n    this.client.track(\"test\", { \"a\": \"b\" });\r\n  }\r\n\r\n  callback() {\r\n\r\n    this.client.callback('test');\r\n  }\r\n\r\n  finish() {\r\n\r\n    this.client.finish();\r\n  }\r\n\r\n  setPreference() {\r\n\r\n    this.client.setPreference('myPref', 'myValue');\r\n  }\r\n}\r\n","<!-- \r\n<h2>State: {{ state }}</h2>\r\n<h2>Local Time: {{ localTime | date:'medium' }}</h2>\r\n<h2>Device Time: {{ deviceTime | date:'medium' }}</h2>\r\n<h2>Device TZ Name: {{ TZName }}</h2>\r\n<h2>Device TZ ID: {{ TZId }}</h2>\r\n<h2>Device TZ Offset: {{ TZOffset }}</h2>\r\n<h2>Device Language Code: {{ langCode }}</h2>\r\n<h2>Device Key: {{ deviceKey }}</h2>\r\n<h2>Revel Root: {{ revelRoot }}</h2>\r\n<h2>Command Map: {{ commandMap | json }}</h2>\r\n<h2>Width: {{ width }}</h2>\r\n<h2>Height: {{ height }}</h2>\r\n<h2>Duration: {{ duration }}</h2>\r\n<h2>SDK Version: {{ version }}</h2>\r\n<h2 [style]=\"style | safeStyle\">Sample Pref: {{ prefs.getString('myStringPref') }}</h2>\r\n<button (click)=\"sendCommand()\">Send Command</button>\r\n<button (click)=\"trackEvent()\">Track Event</button>\r\n<button (click)=\"callback()\">Callback</button>\r\n<button (click)=\"finish()\">Finish</button>\r\n<button (click)=\"sendRemoteCommand()\">Send Remote Command</button><input type=\"text\" [(ngModel)]=\"remoteDeviceKey\"> -->\r\n\r\n\r\n<div\r\n    class=\"w-screen h-screen flex flex-col items-center justify-center bg-gradient-to-br from-violet-600 to-indigo-600\">\r\n    <div class=\"not-prose relative mt-10 rounded-xl\">\r\n        <div class=\"shadow-sm overflow-hidden my-8 rounded-xl\">\r\n            <table class=\"border-collapse table-auto text-sm\">\r\n                <tbody class=\"bg-white dark:bg-slate-800\">\r\n                    <tr>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-600 p-4 pl-8 text-slate-500 dark:text-slate-400\">\r\n                            Player state</td>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-600 p-4 text-slate-500 dark:text-slate-400 font-bold text-center\">\r\n                            {{\r\n                            state }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-600 p-4 pl-8 text-slate-500 dark:text-slate-400\">\r\n                            Local time</td>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-600 p-4 text-slate-500 dark:text-slate-400 font-bold text-center\">\r\n                            {{ localTime | date:'medium' }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-600 p-4 pl-8 text-slate-500 dark:text-slate-400\">\r\n                            Device time</td>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-600 p-4 text-slate-500 dark:text-slate-400 font-bold text-center\">\r\n                            {{\r\n                            deviceTime | date:'medium' }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-600 p-4 pl-8 text-slate-500 dark:text-slate-400\">\r\n                            Device TZ Name</td>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-600 p-4 text-slate-500 dark:text-slate-400 font-bold text-center\">\r\n                            {{ TZName }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-600 p-4 pl-8 text-slate-500 dark:text-slate-400\">\r\n                            Device TZ ID</td>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-600 p-4 text-slate-500 dark:text-slate-400 font-bold text-center\">\r\n                            {{ TZId }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-600 p-4 pl-8 text-slate-500 dark:text-slate-400\">\r\n                            Device TZ Offset</td>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-600 p-4 text-slate-500 dark:text-slate-400 font-bold text-center\">\r\n                            {{ TZOffset }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-600 p-4 pl-8 text-slate-500 dark:text-slate-400\">\r\n                            Device Language Code</td>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-600 p-4 text-slate-500 dark:text-slate-400 font-bold text-center\">\r\n                            {{ langCode }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-600 p-4 pl-8 text-slate-500 dark:text-slate-400\">\r\n                            Device Key</td>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-600 p-4 text-slate-500 dark:text-slate-400 font-bold text-center\">\r\n                            {{ deviceKey }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-600 p-4 pl-8 text-slate-500 dark:text-slate-400\">\r\n                            Revel Root</td>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-600 p-4 text-slate-500 dark:text-slate-400 font-bold text-center\">\r\n                            {{ revelRoot }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-700 p-4 pl-8 text-slate-500 dark:text-slate-400\">\r\n                            Size</td>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400 font-bold text-center\">\r\n                            {{\r\n                            width }} x {{ height }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-700 p-4 pl-8 text-slate-500 dark:text-slate-400\">\r\n                            Duration</td>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400 font-bold text-center\">\r\n                            {{\r\n                            duration }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-700 p-4 pl-8 text-slate-500 dark:text-slate-400\">\r\n                            Is\r\n                            preview mode</td>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400 font-bold text-center\">\r\n                            {{\r\n                            isPreviewMode }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-700 p-4 pl-8 text-slate-500 dark:text-slate-400\">\r\n                            SDK Version</td>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400 font-bold text-center\">\r\n                            {{\r\n                            version }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-600 p-4 pl-8 text-slate-500 dark:text-slate-400\">\r\n                            Command map</td>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-600 p-4 text-slate-500 dark:text-slate-400 font-bold text-center\">\r\n                            {{\r\n                            commandMap | json }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-600 p-4 pl-8 text-slate-500 dark:text-slate-400\">\r\n                            Actions</td>\r\n                        <td\r\n                            class=\"border-b border-slate-100 dark:border-slate-600 p-4 text-slate-500 dark:text-slate-400 font-bold text-center\">\r\n                            <button (click)=\"sendCommand()\"\r\n                                class=\"mr-2 bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\">Send\r\n                                Command</button>\r\n                            <button (click)=\"trackEvent()\"\r\n                                class=\"mr-2 bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\">Track\r\n                                Event</button>\r\n                            <button (click)=\"callback()\"\r\n                                class=\"mr-2 bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\">Callback</button>\r\n                            <button (click)=\"finish()\"\r\n                                class=\"mr-2 bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\">Finish</button>\r\n                            <button (click)=\"setPreference()\"\r\n                                class=\"bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\">Set\r\n                                Preference</button>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { LOCALE_ID } from '@angular/core';\nimport { APP_BASE_HREF, registerLocaleData } from '@angular/common';\n\nimport { AppComponent } from './app.component';\n\nimport { PlayerClientModule } from '@reveldigital/player-client';\n\nimport localeFr from '@angular/common/locales/fr';\nimport localeRu from '@angular/common/locales/ru';\nimport { FormsModule } from '@angular/forms';\nregisterLocaleData(localeFr);\nregisterLocaleData(localeRu);\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    PlayerClientModule\n  ],\n  providers: [\n\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","// Generated by genversion.\nexport const version = '1.0.11'\n","import { Injectable, NgZone, OnDestroy } from '@angular/core';\r\nimport { gadgets } from '@reveldigital/gadget-types';\r\nimport { BehaviorSubject, fromEvent, Subject, Subscription } from 'rxjs';\r\nimport { map, share, tap } from 'rxjs/operators';\r\nimport { ICommand } from './interfaces/command.interface';\r\nimport { IDevice } from './interfaces/device.interface';\r\nimport { IEventProperties } from './interfaces/event-properties.interface';\r\nimport { IClient } from './interfaces/client.interface';\r\nimport { version } from './version';\r\n\r\n//import { version } from './version.js';\r\n\r\n// So that TypeScript doesn't complain, we're going to augment the GLOBAL / WINDOW \r\n// name-space definition to include the Tracker API. This also provides us with a place\r\n// to actually DOCUMENT the API so that our developers aren't guessing about what's\r\n// available on the library.\r\n\r\n/** @ignore */\r\ndeclare global {\r\n  var Client: IClient;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlayerClientService implements OnDestroy {\r\n\r\n  /** @ignore */\r\n  private clientPromise: Promise<IClient> | null;\r\n\r\n  /**\r\n   * Commands sent to this player.\r\n   */\r\n  public onCommand$ = new Subject<ICommand>();\r\n  /**\r\n   * Signals the gadget has been loaded and is ready to start.\r\n   */\r\n  public onReady$ = new BehaviorSubject(false);\r\n  /**\r\n   * Signals the gadget has been started by the player.\r\n   */\r\n  public onStart$ = new Subject();\r\n  /**\r\n   * Signals the gadgets has been stopped by the player.\r\n   */\r\n  public onStop$ = new Subject();\r\n\r\n  //\r\n  // Two methods available for calling into the library:\r\n  //\r\n  // 1) Using dispatchEvent() with the following custom events\r\n  // 2) Using the window scoped RevelDigital object as defined in the constructor\r\n  //\r\n  /** @ignore */\r\n  private onStartSub: Subscription;\r\n  /** @ignore */\r\n  private onStartEvt$ = fromEvent(document, 'RevelDigital.Start').pipe(\r\n    share(),\r\n    tap(this.onStart$)\r\n  );\r\n  /** @ignore */\r\n  private onStopSub: Subscription;\r\n  /** @ignore */\r\n  private onStopEvt$ = fromEvent(document, 'RevelDigital.Stop').pipe(\r\n    share(),\r\n    tap(this.onStop$)\r\n  );\r\n  /** @ignore */\r\n  private onCommandSub: Subscription;\r\n  /** @ignore */\r\n  private onCommandEvt$ = fromEvent<ICommand>(document, 'RevelDigital.Command').pipe(\r\n    map((e: any) => { return { name: e.detail.name, arg: e.detail.arg } as ICommand }),\r\n    share(),\r\n    tap(this.onCommand$)\r\n  );\r\n\r\n  // private onPostMessageSub: Subscription;\r\n  // private onPostMessageEvt$ = fromEvent(window, 'message').pipe(\r\n  //   filter((messageEvent: MessageEvent) =>\r\n  //     messageEvent.source !== window.parent &&\r\n  //     typeof messageEvent.data === 'string' &&\r\n  //     messageEvent.data.startsWith('reveldigital:')),\r\n  //   map((e: any) => { return JSON.parse(e.substring(13)) as Command }),\r\n  //   share(),\r\n  //   tap(this.onCommand$)\r\n  // );\r\n\r\n  /** @ignore */\r\n  constructor(zone: NgZone) {\r\n\r\n    let self = this;\r\n    (window as any).RevelDigital = {\r\n      Controller: {\r\n        onCommand: function (name: string, arg: string) {\r\n          zone.run(() => {\r\n            self.onCommand$.next({ name: name, arg: arg });\r\n          });\r\n        },\r\n        onStart: function () {\r\n          zone.run(() => {\r\n            self.onStart$.next(null);\r\n          });\r\n        },\r\n        onStop: function () {\r\n          zone.run(() => {\r\n            self.onStop$.next(null);\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    this.onStartSub = this.onStartEvt$.subscribe(() => { });\r\n    this.onStopSub = this.onStopEvt$.subscribe(() => { });\r\n    this.onCommandSub = this.onCommandEvt$.subscribe(() => { });\r\n\r\n    this.clientPromise = null;\r\n\r\n    this.onReady$.next(true);\r\n  }\r\n\r\n  /** @ignore */\r\n  ngOnDestroy(): void {\r\n\r\n    this.onStartSub?.unsubscribe();\r\n    this.onStopSub?.unsubscribe();\r\n    this.onCommandSub?.unsubscribe();\r\n\r\n    this.onReady$.next(false);\r\n  }\r\n\r\n  /** @ignore */\r\n  public static init(data: any) {\r\n\r\n    console.log(\r\n      '%c⚙️ Initializing Revel Digital client library',\r\n      'background-color:blue; color:yellow;'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * This method allows the gadget to communicate with player scripting.\r\n   * If the appropriate scripting is in place in the currently running template, calling this method\r\n   * will initiate a callback which can be acted upon in player script.\r\n   * \r\n   * @example\r\n   * client.callback('test', 'this');\r\n   * \r\n   * @param args variable number of arguments\r\n   */\r\n  public callback(...args: any[]): void {\r\n\r\n    this.getClient().then((client) => {\r\n\r\n      switch (args.length) {\r\n        case 0:\r\n          client.callback();\r\n          break;\r\n        case 1:\r\n          client.callback(args[0]);\r\n          break;\r\n        case 2:\r\n          client.callback(args[1]);\r\n          break;\r\n        case 3:\r\n          client.callback(args[2]);\r\n          break;\r\n        case 4:\r\n          client.callback(args[3]);\r\n          break;\r\n        case 5:\r\n          client.callback(args[4]);\r\n          break;\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Accessor method for the user preferences interface exposed by the Gadgets API.\r\n   * \r\n   * See {@link https://developers.google.com/gadgets/docs/basic} for more details on the Gadgets API.\r\n   * \r\n   * @example\r\n   * constructor(public client: PlayerClientService) {\r\n   *            let prefs = client.getPrefs();\r\n   *            let myString = prefs.getString('myStringPref');\r\n   * }\r\n   * @returns {gadgets.Prefs} Gadget API Prefs object\r\n   */\r\n  public getPrefs(): gadgets.Prefs {\r\n\r\n    return new window['gadgets']['Prefs']();\r\n  }\r\n\r\n  /**\r\n   * Returns the current device time in ISO8601 format.\r\n   * Current device time is determined by the device timezone assigned to the device in the CMS.\r\n   * \r\n   * @param date Optional. If supplied will translate the supplied date/time to device time based on respective timezones.\r\n   * @returns Date/time in ISO8601 format\r\n   */\r\n  public async getDeviceTime(date?: Date): Promise<string> {\r\n\r\n    const client = await this.getClient();\r\n\r\n    if (date !== undefined) {\r\n      return client.getDeviceTime(date);\r\n    }\r\n    return client.getDeviceTime();\r\n  }\r\n\r\n  /**\r\n   * Returns the timezone name currently assigned to the device.\r\n   * \r\n   * @returns Timezone Name\r\n   */\r\n  public async getDeviceTimeZoneName(): Promise<string> {\r\n\r\n    const client = await this.getClient();\r\n\r\n    return client.getDeviceTimeZoneName();\r\n  }\r\n\r\n  /**\r\n   * Returns the timezone ID currently assigned to the device.\r\n   * \r\n   * @returns Timezone ID\r\n   */\r\n  public async getDeviceTimeZoneID(): Promise<string> {\r\n\r\n    const client = await this.getClient();\r\n\r\n    return client.getDeviceTimeZoneID();\r\n  }\r\n\r\n  /**\r\n   * Returns the numerical offset from GMT of the timezone currently assigned to the device.\r\n   * \r\n   * @returns Timezone offset\r\n   */\r\n  public async getDeviceTimeZoneOffset(): Promise<number> {\r\n\r\n    const client = await this.getClient();\r\n\r\n    return client.getDeviceTimeZoneOffset();\r\n  }\r\n\r\n  /**\r\n   * Returns the language code of the language currently assigned to the device.\r\n   * \r\n   * @returns Language code\r\n   */\r\n  public async getLanguageCode(): Promise<string> {\r\n\r\n    const client = await this.getClient();\r\n\r\n    return client.getLanguageCode();\r\n  }\r\n\r\n  /**\r\n   * Returns the unique Revel Digital device key associated with the device.\r\n   * \r\n   * @returns Device key\r\n   */\r\n  public async getDeviceKey(): Promise<string> {\r\n\r\n    const client = await this.getClient();\r\n\r\n    return client.getDeviceKey();\r\n  }\r\n\r\n  /**\r\n   * Send a command to the player device.\r\n   * \r\n   * @param name Command name\r\n   * @param arg Command argument\r\n   */\r\n  public sendCommand(name: string, arg: string): void {\r\n\r\n    this.getClient().then((client) => {\r\n      client.sendCommand(name, arg);\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Send a command to any remote player with the supplied device key(s).\r\n   * Note: Remote commands can only be delivered to devices within the same account as the sender device.\r\n   * \r\n   * @param deviceKeys Array of remote device keys\r\n   * @param name Command name\r\n   * @param arg Command arg\r\n   */\r\n  public sendRemoteCommand(deviceKeys: string[], name: string, arg: string): void {\r\n\r\n    this.getClient().then((client) => {\r\n      client.sendRemoteCommand(deviceKeys, name, arg);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Log an event for use with AdHawk analytics.\r\n   * Events are used for tracking various metrics including usage statistics, player condition, state changes, etc.\r\n   * \r\n   * @param eventName Unique name for this event\r\n   * @param properties A map of user defined properties to associate with this event\r\n   */\r\n  public track(eventName: string, properties?: IEventProperties): void {\r\n\r\n    this.getClient().then((client) => {\r\n      client.track(eventName, JSON.stringify(properties));\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Method for initiating a timed event.\r\n   * Timed events are useful for tracking the duration of an event and must be proceeded with a call to track().\r\n   * \r\n   * @example\r\n   * client.timeEvent('testEvent');\r\n   * client.track(\"test\", { \"a\": \"b\" });\r\n   * @param eventName Unique name for this event\r\n   */\r\n  public timeEvent(eventName: string): void {\r\n\r\n    this.getClient().then((client) => {\r\n      client.timeEvent(eventName);\r\n    })\r\n  }\r\n\r\n  /**\r\n   * A session is a way of grouping events together. Each event has an associated session ID.\r\n   * Session ID's are randomly generated and reset by subsequent calls to newEventSession().\r\n   * \r\n   * Each call to track() will utilize the same session ID, until another call to newEventSession().\r\n   * @param id Optional. User supplied session ID. If not supplied a random session ID will be generated.\r\n   */\r\n  public newEventSession(id?: string): void {\r\n\r\n    this.getClient().then((client) => {\r\n      if (id !== undefined) {\r\n        client.newEventSession();\r\n      } else {\r\n        client.newEventSession(id);\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Returns the root folder utilized by this player device.\r\n   * \r\n   * @returns Path to the root folder\r\n   */\r\n  public async getRevelRoot(): Promise<string> {\r\n\r\n    const client = await this.getClient();\r\n\r\n    return client.getRevelRoot();\r\n  }\r\n\r\n  /**\r\n   * Returns a map of commands currently active for this device.\r\n   * \r\n   * @returns Map of commands currently active for this device.\r\n   */\r\n  public async getCommandMap(): Promise<any> {\r\n\r\n    const client = await this.getClient();\r\n\r\n    return JSON.parse(await client.getCommandMap());\r\n  }\r\n\r\n  /**\r\n   * Indicate to the player that this gadget has finished it's visualization.\r\n   * This allows the player to proceed with the next item in a playlist if applicable.\r\n   */\r\n  public finish(): void {\r\n\r\n    this.getClient().then((client) => {\r\n\r\n      client.finish();\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Check is the gadget is running in preview mode. Preview mode is enabled when the gadget is\r\n   * being edited in the CMS, or otherwise not running in a normal player environment.\r\n   * \r\n   * @returns True if the gadget is running in preview mode, false otherwise.\r\n   */\r\n  public async isPreviewMode(): Promise<boolean> {\r\n\r\n    const client = await this.getClient();\r\n\r\n    return client instanceof NoopClient;\r\n  }\r\n\r\n  /**\r\n * Returns the device details associated with the player running the gadget or web app.\r\n * \r\n * @returns Device details.\r\n */\r\n  public async getDevice(): Promise<IDevice | null> {\r\n\r\n    const client = await this.getClient();\r\n\r\n    let obj: any = JSON.parse(<string>await client.getDevice());\r\n\r\n    const device: IDevice[] = [obj].map((device: any) => {\r\n\r\n      return {\r\n        name: device.name,\r\n        registrationKey: device.key,\r\n        deviceType: device.devicetype,\r\n        enteredService: new Date(device.enteredservice),\r\n        langCode: device.langcode,\r\n        timeZone: device.timezone,\r\n        tags: device.description?.split('\\n'),\r\n        location: {\r\n          city: device.location?.city,\r\n          state: device.location?.state,\r\n          country: device.location?.country,\r\n          postalCode: device.location?.postalcode,\r\n          address: device.location?.address,\r\n          latitude: device.location?.latitude,\r\n          longitude: device.location?.longitude\r\n        }\r\n      }\r\n    });\r\n    return device[0];\r\n  }\r\n\r\n  /**\r\n   * Returns the width of the visualization area.\r\n   * \r\n   * @returns Width of the visualization area\r\n   */\r\n  public async getWidth(): Promise<number | null> {\r\n\r\n    const client = await this.getClient();\r\n\r\n    return client.getWidth();\r\n  }\r\n\r\n  /**\r\n   * Returns the height of the visualization area.\r\n   * \r\n   * @returns Height of the visualization area\r\n   */\r\n  public async getHeight(): Promise<number | null> {\r\n\r\n    const client = await this.getClient();\r\n\r\n    return client.getHeight();\r\n  }\r\n\r\n  /**\r\n   * Returns the duration of the currently playing source.\r\n   * (only applicable when associated with a playlist)\r\n   * \r\n   * @returns Duration of the current item in milliseconds\r\n   */\r\n  public async getDuration(): Promise<number | null> {\r\n\r\n    const client = await this.getClient();\r\n\r\n    return client.getDuration();\r\n  }\r\n\r\n  /**\r\n   * Returns the current SDK version.\r\n   * \r\n   * @returns SDK version\r\n   */\r\n  public async getSdkVersion(): Promise<string> {\r\n\r\n    return Promise.resolve(version);\r\n  }\r\n\r\n  /**\r\n   * Set a preference value.\r\n   * \r\n   * Provides the ability to have the gadget present a UI for setting preferences.\r\n   * Only available during design time.\r\n   * \r\n   * @param key Prefernce key\r\n   * @param value Preference value\r\n   */\r\n  public async setPreference(key: string, value: string | number | boolean) {\r\n\r\n    if (await this.isPreviewMode()) {\r\n      const client = await this.getClient();\r\n      client.setPreference(key, value);\r\n    } else {\r\n      console.log(\r\n        '%csetPreference() is only available in preview mode.',\r\n        'background-color:blue; color:yellow;'\r\n      );\r\n    }\r\n  }\r\n\r\n  // ---\r\n  // PRIVATE METHODS.\r\n  // ---\r\n  /** @ignore */\r\n  private getClient(): Promise<IClient> {\r\n\r\n    if (this.clientPromise) {\r\n\r\n      return (this.clientPromise);\r\n    }\r\n\r\n    if (window.Client) {\r\n\r\n      return (this.clientPromise = Promise.resolve(window.Client));\r\n    }\r\n\r\n    // A \"complete\" status indicates that the \"load\" event has been fired on the\r\n    // window; and, that all sub-resources such as Scripts, Images, and Frames have\r\n    // been loaded.\r\n    if (window.document.readyState === \"complete\") {\r\n\r\n      // If this event has fired AND the 3rd-party script isn't available (see IF-\r\n      // condition BEFORE this one), it means that the 3rd-party script either\r\n      // failed on the network or was BLOCKED by an ad-blocker. As such, we have to\r\n      // fall-back to using a mock API.\r\n      return (this.clientPromise = Promise.resolve(new NoopClient()));\r\n    }\r\n\r\n    // ASSERT: If we made it this far, the document has not completed loading (but it\r\n    // may be in an \"interactive\" state which is when I believe that the Angular app\r\n    // gets bootstrapped). As such, we need bind to the LOAD event to wait for our\r\n    // third-party scripts to load (or fail to load, or be blocked).\r\n    this.clientPromise = new Promise<IClient>(\r\n      (resolve) => {\r\n\r\n        window.addEventListener(\r\n          \"load\",\r\n          function handleWindowLoad() {\r\n\r\n            // At this point, the 3rd-party library is either available or\r\n            // it's not - there's no further loading to do. If it's not\r\n            // present on the global scope, we're going to fall-back to using\r\n            // a mock API.\r\n            resolve(window.Client || new NoopClient());\r\n          }\r\n        );\r\n\r\n      }\r\n    );\r\n\r\n    return (this.clientPromise);\r\n  }\r\n}\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------------- //\r\n// ----------------------------------------------------------------------------------- //\r\n\r\n// I provide a mock API for the 3rd-party script. This just allows the consuming code to\r\n// act as though the library is available even if it failed to load (example, it was\r\n// blocked by an ad-blocker).\r\n\r\n/** @ignore */\r\nclass NoopClient implements IClient {\r\n\r\n  constructor() {\r\n\r\n    console.log(\r\n      '%cClient API not available, falling back to mock API',\r\n      'background-color:blue; color:yellow;'\r\n    );\r\n  }\r\n\r\n  public callback(...args: any[]): void {\r\n\r\n    // NOOP implement, nothing to do....\r\n  }\r\n\r\n  public getDeviceTime(date?: Date): Promise<string> {\r\n\r\n    return Promise.resolve(new Date().toISOString());\r\n  }\r\n\r\n  public async getDeviceTimeZoneName(): Promise<string> {\r\n\r\n    return Promise.resolve(null);\r\n  }\r\n\r\n  public async getDeviceTimeZoneID(): Promise<string> {\r\n\r\n    return Promise.resolve(null);\r\n  }\r\n\r\n  public async getDeviceTimeZoneOffset(): Promise<number> {\r\n\r\n    return Promise.resolve(null);\r\n  }\r\n\r\n  public async getLanguageCode(): Promise<string> {\r\n\r\n    return Promise.resolve(null);\r\n  }\r\n\r\n  public async getDeviceKey(): Promise<string> {\r\n\r\n    return Promise.resolve(null);\r\n  }\r\n\r\n  public sendCommand(name: string, arg: string): void {\r\n\r\n    // NOOP implement, nothing to do....\r\n  }\r\n\r\n  public sendRemoteCommand(deviceKeys: string[], name: string, arg: string) {\r\n\r\n    // NOOP implement, nothing to do....\r\n  }\r\n\r\n  public track(eventName: string, properties?: string): void {\r\n\r\n    // NOOP implement, nothing to do....\r\n  }\r\n\r\n  public timeEvent(eventName: string): void {\r\n\r\n    // NOOP implement, nothing to do....\r\n  }\r\n\r\n  public newEventSession(id?: string): void {\r\n\r\n    // NOOP implement, nothing to do....\r\n  }\r\n\r\n  public async getRevelRoot(): Promise<string> {\r\n\r\n    return Promise.resolve(null);\r\n  }\r\n\r\n  public async getCommandMap(): Promise<string> {\r\n\r\n    return Promise.resolve('{}');\r\n  }\r\n\r\n  public finish(): void {\r\n\r\n    // NOOP implement, nothing to do....\r\n  }\r\n\r\n  public async getDevice(): Promise<string | null> {\r\n\r\n    return Promise.resolve(null);\r\n  }\r\n\r\n  public async getWidth(): Promise<number | null> {\r\n\r\n    return Promise.resolve(null);\r\n  }\r\n\r\n  public async getHeight(): Promise<number | null> {\r\n\r\n    return Promise.resolve(null);\r\n  }\r\n\r\n  public async getDuration(): Promise<number | null> {\r\n\r\n    return Promise.resolve(null);\r\n  }\r\n\r\n  public async getSdkVersion(): Promise<string> {\r\n\r\n    return Promise.resolve(version);\r\n  }\r\n\r\n  public setPreference(key: string, value: string | number | boolean) {\r\n\r\n    if (window.parent !== window.top) {\r\n\r\n      window.parent.postMessage(\r\n        JSON.stringify({\r\n          type: 'setPreference',\r\n          key: key,\r\n          value: value\r\n        }),\r\n        '*'\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Injectable, enableProdMode, isDevMode } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport * as yaml from \"js-yaml\";\r\nimport * as WebFont from 'webfontloader';\r\n\r\nconst isLocal: boolean = /localhost/.test(document.location.host);\r\n!isLocal && enableProdMode();\r\n\r\n\r\n/** @ignore */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppInitService {\r\n\r\n  constructor(\r\n    public http: HttpClient,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router) {\r\n  }\r\n\r\n  init(): Promise<any> {\r\n\r\n    return new Promise<void>(async (resolve) => {\r\n\r\n      this.loadFonts();\r\n\r\n      if (isDevMode()) {\r\n        console.log(\r\n          '%cRunning in development mode',\r\n          'background-color:blue; color:yellow;'\r\n        );\r\n\r\n        /**\r\n         * Shim the shindig prefs functionality for dev mode\r\n         */\r\n        (<any>window).gadgets = {\r\n\r\n          Prefs: class {\r\n            getString(key: string) { return this.getParameterByName(key) }\r\n\r\n            getArray(key: string) { return this.getParameterByName(key).split(',') }\r\n\r\n            getBool(key: string) { return this.getParameterByName(key) === 'true' }\r\n\r\n            getCountry() { }\r\n\r\n            getFloat(key: string) { return parseFloat(this.getParameterByName(key)) }\r\n\r\n            getInt(key: string) { return parseInt(this.getParameterByName(key)) }\r\n\r\n            getLang() { return this.getParameterByName('lang') === '' ? 'en' : this.getParameterByName('lang'); }\r\n\r\n            getParameterByName(name: string, search = window.location.href): string {\r\n\r\n              name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n              let regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\r\n                results = regex.exec(search);\r\n              if (!results) return '';\r\n              if (!results[2]) return '';\r\n              return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n            }\r\n          }\r\n        };\r\n\r\n        this.http.get('assets/gadget.yaml', {\r\n          responseType: 'text'\r\n        }).subscribe(data => {\r\n          const doc: any = yaml.load(data);\r\n          let params: any = {}\r\n          for (const val of doc.prefs) {\r\n            params[val.name] = val.default_value\r\n          }\r\n\r\n          this._router.navigate([], {\r\n            relativeTo: this._route,\r\n            queryParams: params,\r\n          });\r\n\r\n          console.log(\r\n            `%cUser prefs loaded successfully`,\r\n            'background-color:blue; color:yellow;'\r\n          );\r\n        }, (err) => {\r\n          console.log(\r\n            `%cUnable to load user preferences YAML definition file: ${err}`,\r\n            'background-color:blue; color:yellow;'\r\n          );\r\n          console.log(\r\n            `%cPlease see our developer documentation for help with your app configuration: https://developer.reveldigital.com`,\r\n            'background-color:red; color:yellow;'\r\n          )\r\n        })\r\n      }\r\n      resolve();\r\n    });\r\n  }\r\n\r\n\r\n  private getFamilyName(css) {\r\n\r\n    let FONT_FAMILY_REGEX = /font-family:\\s*(?:[&#39;&#34;])*['\"]*(.+?)['\"]*(?:[&#39;&#34;])*\\s*;/i;\r\n    if (FONT_FAMILY_REGEX.test(css)) {\r\n      var matches = css.match(FONT_FAMILY_REGEX);\r\n      return matches[1].split(',')[0];\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loads the given font from Google Web Fonts.\r\n   */\r\n  private loadFonts(): void {\r\n\r\n    const parameters = new URLSearchParams(window.location.search);\r\n    parameters.forEach((val, key) => {\r\n      try {\r\n        let fontFamily = this.getFamilyName(val);\r\n        if (fontFamily !== '') {\r\n          WebFont.load({\r\n            google: {\r\n              families: [fontFamily]\r\n            },\r\n            fontactive: (familyName) => {\r\n              console.log(`%cActivating font: ${familyName}`,\r\n                'background-color:blue; color:yellow;');\r\n            },\r\n            fontinactive: (familyName) => {\r\n              console.log(`%cFont inactive: ${familyName}`,\r\n                'background-color:red; color:yellow;');\r\n            }\r\n          });\r\n        }\r\n      } catch (e) {\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n/**\r\n * The safe style pipe is used when custom styles are defined for a gadget and must be applied to an Angular\r\n * component. This pipe will ensure the style can be appied safely by utilizing the DomSanitizer.\r\n * \r\n * @example\r\n * <h2 [style]=\"style | safeStyle\">Sample Pref: {{ prefs.getString('myStringPref') }}</h2>\r\n */\r\n@Pipe({\r\n    name: 'safeStyle',\r\n})\r\nexport class SafeStylePipe implements PipeTransform {\r\n    constructor(private sanitized: DomSanitizer) { }\r\n\r\n    transform(value: any): unknown {\r\n        return this.sanitized.bypassSecurityTrustStyle(value);\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    declarations: [SafeStylePipe],\r\n    exports: [SafeStylePipe],\r\n})\r\nexport class NgSafeStylePipeModule { }\r\n","import { APP_INITIALIZER, LOCALE_ID, NgModule } from '@angular/core';\nimport { PlayerClientService } from './player-client.service';\nimport { AppInitService } from './app-init.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { NgSafeStylePipeModule } from './safe-style.pipe';\n\ndeclare var gadgets: any;\n\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    RouterModule.forRoot([]),\n    NgSafeStylePipeModule\n  ],\n  exports: [\n    NgSafeStylePipeModule\n  ],\n  providers: [{\n    provide: APP_INITIALIZER,\n    useFactory: initializeApp,\n    deps: [AppInitService, PlayerClientService],\n    multi: true\n  },\n  {\n    provide: LOCALE_ID,\n    useFactory: () => {\n      try {\n        return new gadgets.Prefs().getLang();\n      } catch {\n        return 'en';\n      }\n    }\n  },\n  { provide: APP_BASE_HREF, useValue: '/gadgets/ifr' }]\n})\nexport class PlayerClientModule { }\n\nfunction initializeApp(appInitService: AppInitService) {\n  return async () => {\n    PlayerClientService.init({});\n    await appInitService.init();\n  }\n}\n","/*\n * Public API Surface of player-client\n */\n\nexport * from './lib/player-client.service';\nexport * from './lib/player-client.module';\nexport * from './lib/safe-style.pipe';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["version","PlayerClientService","constructor","zone","Subject","BehaviorSubject","fromEvent","document","pipe","share","tap","onStart$","onStop$","map","e","name","detail","arg","onCommand$","self","window","RevelDigital","Controller","onCommand","run","next","onStart","onStop","onStartSub","onStartEvt$","subscribe","onStopSub","onStopEvt$","onCommandSub","onCommandEvt$","clientPromise","onReady$","ngOnDestroy","init","data","console","log","callback","args","getClient","then","client","length","getPrefs","getDeviceTime","date","undefined","getDeviceTimeZoneName","getDeviceTimeZoneID","getDeviceTimeZoneOffset","getLanguageCode","getDeviceKey","sendCommand","sendRemoteCommand","deviceKeys","track","eventName","properties","JSON","stringify","timeEvent","newEventSession","id","getRevelRoot","getCommandMap","parse","finish","isPreviewMode","NoopClient","getDevice","obj","device","registrationKey","key","deviceType","devicetype","enteredService","Date","enteredservice","langCode","langcode","timeZone","timezone","tags","description","location","city","state","country","postalCode","postalcode","address","latitude","longitude","getWidth","getHeight","getDuration","getSdkVersion","Promise","resolve","setPreference","value","Client","readyState","addEventListener","handleWindowLoad","factory","providedIn","Injectable","toISOString","parent","top","postMessage","type","isLocal","test","host","enableProdMode","AppInitService","http","_route","_router","__awaiter","loadFonts","isDevMode","gadgets","Prefs","getString","getParameterByName","getArray","split","getBool","getCountry","getFloat","parseFloat","getInt","parseInt","getLang","search","href","replace","regex","RegExp","results","exec","decodeURIComponent","get","responseType","doc","yaml","load","params","val","prefs","default_value","navigate","relativeTo","queryParams","err","getFamilyName","css","FONT_FAMILY_REGEX","matches","match","parameters","URLSearchParams","forEach","fontFamily","WebFont","google","families","fontactive","familyName","fontinactive","SafeStylePipe","sanitized","transform","bypassSecurityTrustStyle","pure","Pipe","NgSafeStylePipeModule","NgModule","declarations","exports","PlayerClientModule","provide","APP_INITIALIZER","useFactory","initializeApp","deps","multi","LOCALE_ID","_a","APP_BASE_HREF","useValue","imports","HttpClientModule","RouterModule","forRoot","providers","appInitService"],"sourceRoot":"webpack:///"}