{"version":3,"file":"main.js","mappings":"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","sources":["./projects/test-app/src/app/app.component.ts","./projects/test-app/src/app/app.component.html","./projects/test-app/src/app/app.module.ts","./projects/test-app/src/environments/environment.ts","./projects/test-app/src/main.ts","./projects/reveldigital/player-client/src/lib/player-client.service.ts","./projects/reveldigital/player-client/src/lib/player-client.module.ts","./projects/reveldigital/player-client/src/public-api.ts","./projects/reveldigital/player-client/src/reveldigital-player-client.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { PlayerClientService } from '@reveldigital/player-client';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  title = 'test-app';\n  state = 'Not ready';\n  localTime: any;\n  deviceTime: any;\n  TZName: any;\n  TZId: any;\n  TZOffset: any;\n  langCode: any;\n  deviceKey: any;\n  revelRoot: any;\n  remoteDeviceKey: any;\n  commandMap: any;\n\n\n  constructor(public client: PlayerClientService) {\n\n    this.client.onReady$.subscribe((val) => {\n      console.log(val ? 'Ready' : 'Not ready');\n      this.state = val ? 'Ready' : 'Not ready';\n    });\n\n    this.client.onCommand$.subscribe((cmd) => {\n      console.log(`onCommand: ${cmd.name}, ${cmd.arg}`);\n    });\n\n    this.client.onStart$.subscribe(() => {\n      console.log(\"onStart\");\n      this.state = 'Started';\n    });\n\n    this.client.onStop$.subscribe(() => {\n      console.log(\"onStop\");\n      this.state = 'Stopped';\n    });\n  }\n\n  ngOnInit(): void {\n\n    setInterval(() => {\n      this.update();\n    }, 1000);\n  }\n\n  update() {\n\n    this.client.getDeviceTime().then((res) => {\n      this.localTime = new Date();\n      this.deviceTime = new Date(res);\n    });\n\n    this.client.getDeviceTimeZoneName().then((res) => {\n      this.TZName = res;\n    });\n\n    this.client.getDeviceTimeZoneID().then((res) => {\n      this.TZId = res;\n    })\n\n    this.client.getDeviceTimeZoneOffset().then((res) => {\n      this.TZOffset = res;\n    });\n\n    this.client.getLanguageCode().then((res) => {\n      this.langCode = res;\n    });\n\n    this.client.getDeviceKey().then((res) => {\n      this.deviceKey = res;\n    });\n\n    this.client.getRevelRoot().then((res) => {\n      this.revelRoot = res;\n    });\n\n    this.client.getCommandMap().then((res) => {\n      this.commandMap = res;\n    });\n  }\n\n  sendCommand() {\n\n    this.client.sendCommand(\"test\", \"it\");\n  }\n\n  sendRemoteCommand() {\n\n    this.client.sendRemoteCommand([this.remoteDeviceKey], \"test\", \"it\");\n  }\n\n  trackEvent() {\n\n    this.client.track(\"test\", { \"a\": \"b\" });\n  }\n\n  callback() {\n\n    this.client.callback('test');\n  }\n}\n","<h2>State: {{ state }}</h2>\n<h2>Local Time: {{ localTime | date:'medium' }}</h2>\n<h2>Device Time: {{ deviceTime | date:'medium' }}</h2>\n<h2>Device TZ Name: {{ TZName }}</h2>\n<h2>Device TZ ID: {{ TZId }}</h2>\n<h2>Device TZ Offset: {{ TZOffset }}</h2>\n<h2>Device Language Code: {{ langCode }}</h2>\n<h2>Device Key: {{ deviceKey }}</h2>\n<h2>Revel Root: {{ revelRoot }}</h2>\n<h2>Command Map: {{ commandMap | json }}</h2>\n\n<button (click)=\"sendCommand()\">Send Command</button>\n<button (click)=\"trackEvent()\">Track Event</button>\n<button (click)=\"callback()\">Callback</button>\n<button (click)=\"sendRemoteCommand()\">Send Remote Command</button><input type=\"text\" [(ngModel)]=\"remoteDeviceKey\">","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { LOCALE_ID } from '@angular/core';\nimport { APP_BASE_HREF, registerLocaleData } from '@angular/common';\n\nimport { AppComponent } from './app.component';\n\nimport { PlayerClientModule } from '@reveldigital/player-client';\n\nimport localeFr from '@angular/common/locales/fr';\nimport localeRu from '@angular/common/locales/ru';\nimport { FormsModule } from '@angular/forms';\nregisterLocaleData(localeFr);\nregisterLocaleData(localeRu);\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    PlayerClientModule\n  ],\n  providers: [\n    {\n      provide: LOCALE_ID,\n      useFactory: () => {\n        try {\n          return new gadgets.Prefs().getLang();\n        } catch {\n          return 'en';\n        }\n      }\n    },\n    { provide: APP_BASE_HREF, useValue: '/gadgets/ifr' }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable, NgZone, OnDestroy, OnInit } from '@angular/core';\r\nimport { BehaviorSubject, fromEvent, Subject, Subscription } from 'rxjs';\r\nimport { map, share, tap } from 'rxjs/operators';\r\n\r\n\r\n// So that TypeScript doesn't complain, we're going to augment the GLOBAL / WINDOW \r\n// name-space definition to include the Tracker API. This also provides us with a place\r\n// to actually DOCUMENT the API so that our developers aren't guessing about what's\r\n// available on the library.\r\ndeclare global {\r\n  var Client: Client;\r\n}\r\n\r\nexport interface Client {\r\n\r\n  callback(...args: any[]): void;\r\n\r\n  getDeviceTime(date?: Date): Promise<string>;\r\n\r\n  getDeviceTimeZoneName(): Promise<string>;\r\n\r\n  getDeviceTimeZoneID(): Promise<string>;\r\n\r\n  getDeviceTimeZoneOffset(): Promise<number>;\r\n\r\n  getLanguageCode(): Promise<string>;\r\n\r\n  getDeviceKey(): Promise<string>;\r\n\r\n  sendCommand(name: string, arg: string): void;\r\n\r\n  sendRemoteCommand(deviceKeys: string[], name: string, arg: string): void;\r\n\r\n  track(eventName: string, properties?: string): void;\r\n\r\n  timeEvent(eventName: string): void;\r\n\r\n  newEventSession(id?: string): void;\r\n\r\n  getRevelRoot(): Promise<string>;\r\n\r\n  getCommandMap(): Promise<string>;\r\n}\r\n\r\nexport interface EventProperties {\r\n  [key: string]: any;\r\n}\r\n\r\nexport interface Command {\r\n  name: string;\r\n  arg: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlayerClientService implements OnDestroy {\r\n\r\n  private clientPromise: Promise<Client> | null;\r\n\r\n  public onCommand$ = new Subject<Command>();\r\n  public onReady$ = new BehaviorSubject(false);\r\n  public onStart$ = new Subject();\r\n  public onStop$ = new Subject();\r\n\r\n  //\r\n  // Two methods available for calling into the library:\r\n  //\r\n  // 1) Using dispatchEvent() with the following custom events\r\n  // 2) Using the window scoped RevelDigital object as defined in the constructor\r\n  //\r\n  private onStartSub: Subscription;\r\n  private onStartEvt$ = fromEvent(document, 'RevelDigital.Start').pipe(\r\n    share(),\r\n    tap(this.onStart$)\r\n  );\r\n  private onStopSub: Subscription;\r\n  private onStopEvt$ = fromEvent(document, 'RevelDigital.Stop').pipe(\r\n    share(),\r\n    tap(this.onStop$)\r\n  );\r\n  private onCommandSub: Subscription;\r\n  private onCommandEvt$ = fromEvent<Command>(document, 'RevelDigital.Command').pipe(\r\n    map((e: any) => { return { name: e.detail.name, arg: e.detail.arg } as Command }),\r\n    share(),\r\n    tap(this.onCommand$)\r\n  );\r\n\r\n  constructor(zone: NgZone) {\r\n\r\n    let self = this;\r\n    (window as any).RevelDigital = {\r\n      Controller: {\r\n        onCommand: function (name: string, arg: string) {\r\n          zone.run(() => {\r\n            self.onCommand$.next({ name: name, arg: arg });\r\n          });\r\n        },\r\n        onStart: function () {\r\n          zone.run(() => {\r\n            self.onStart$.next();\r\n          });\r\n        },\r\n        onStop: function () {\r\n          zone.run(() => {\r\n            self.onStop$.next();\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    this.onStartSub = this.onStartEvt$.subscribe(() => { });\r\n    this.onStopSub = this.onStopEvt$.subscribe(() => { });\r\n    this.onCommandSub = this.onCommandEvt$.subscribe(() => { });\r\n\r\n    this.clientPromise = null;\r\n\r\n    this.onReady$.next(true);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n\r\n    this.onStartSub?.unsubscribe();\r\n    this.onStopSub?.unsubscribe();\r\n    this.onCommandSub?.unsubscribe();\r\n\r\n    this.onReady$.next(false);\r\n  }\r\n\r\n  public static init(data: any) {\r\n\r\n    console.log(\"init()\");\r\n  }\r\n\r\n  public callback(...args: any[]): void {\r\n\r\n    this.getClient().then((client) => {\r\n\r\n      switch (args.length) {\r\n        case 0:\r\n          client.callback();\r\n          break;\r\n        case 1:\r\n          client.callback(args[0]);\r\n          break;\r\n        case 2:\r\n          client.callback(args[1]);\r\n          break;\r\n        case 3:\r\n          client.callback(args[2]);\r\n          break;\r\n        case 4:\r\n          client.callback(args[3]);\r\n          break;\r\n        case 5:\r\n          client.callback(args[4]);\r\n          break;\r\n      }\r\n    })\r\n  }\r\n\r\n  public async getDeviceTime(date?: Date): Promise<string> {\r\n\r\n    const client = await this.getClient();\r\n\r\n    if (date !== undefined) {\r\n      return client.getDeviceTime(date);\r\n    }\r\n    return client.getDeviceTime();\r\n  }\r\n\r\n  public async getDeviceTimeZoneName(): Promise<string> {\r\n\r\n    const client = await this.getClient();\r\n\r\n    return client.getDeviceTimeZoneName();\r\n  }\r\n\r\n  public async getDeviceTimeZoneID(): Promise<string> {\r\n\r\n    const client = await this.getClient();\r\n\r\n    return client.getDeviceTimeZoneID();\r\n  }\r\n\r\n  public async getDeviceTimeZoneOffset(): Promise<number> {\r\n\r\n    const client = await this.getClient();\r\n\r\n    return client.getDeviceTimeZoneOffset();\r\n  }\r\n\r\n  public async getLanguageCode(): Promise<string> {\r\n\r\n    const client = await this.getClient();\r\n\r\n    return client.getLanguageCode();\r\n  }\r\n\r\n  public async getDeviceKey(): Promise<string> {\r\n\r\n    const client = await this.getClient();\r\n\r\n    return client.getDeviceKey();\r\n  }\r\n\r\n  public sendCommand(name: string, arg: string): void {\r\n\r\n    this.getClient().then((client) => {\r\n      client.sendCommand(name, arg);\r\n    })\r\n  }\r\n\r\n  public sendRemoteCommand(deviceKeys: string[], name: string, arg: string): void {\r\n\r\n    this.getClient().then((client) => {\r\n      client.sendRemoteCommand(deviceKeys, name, arg);\r\n    });\r\n  }\r\n\r\n  public track(eventName: string, properties?: EventProperties): void {\r\n\r\n    this.getClient().then((client) => {\r\n      client.track(eventName, JSON.stringify(properties));\r\n    })\r\n  }\r\n\r\n  public timeEvent(eventName: string): void {\r\n\r\n    this.getClient().then((client) => {\r\n      client.timeEvent(eventName);\r\n    })\r\n  }\r\n\r\n  public newEventSession(id?: string): void {\r\n\r\n    this.getClient().then((client) => {\r\n      if (id !== undefined) {\r\n        client.newEventSession();\r\n      } else {\r\n        client.newEventSession(id);\r\n      }\r\n    })\r\n  }\r\n\r\n  public async getRevelRoot(): Promise<string> {\r\n\r\n    const client = await this.getClient();\r\n\r\n    return client.getRevelRoot();\r\n  }\r\n\r\n  public async getCommandMap(): Promise<any> {\r\n\r\n    const client = await this.getClient();\r\n\r\n    return JSON.parse(await client.getCommandMap());\r\n\r\n    // let map = new Map<string, any>();\r\n\r\n    // let obj = JSON.parse(await client.getCommandMap());\r\n    // for (let key in obj) {\r\n    //   map.set(key, obj[key]);\r\n    // }\r\n    // return map;\r\n  }\r\n\r\n  // ---\r\n  // PRIVATE METHODS.\r\n  // ---\r\n\r\n  private getClient(): Promise<Client> {\r\n\r\n    if (this.clientPromise) {\r\n\r\n      return (this.clientPromise);\r\n    }\r\n\r\n    if (window.Client) {\r\n\r\n      return (this.clientPromise = Promise.resolve(window.Client));\r\n    }\r\n\r\n    // A \"complete\" status indicates that the \"load\" event has been fired on the\r\n    // window; and, that all sub-resources such as Scripts, Images, and Frames have\r\n    // been loaded.\r\n    if (window.document.readyState === \"complete\") {\r\n\r\n      // If this event has fired AND the 3rd-party script isn't available (see IF-\r\n      // condition BEFORE this one), it means that the 3rd-party script either\r\n      // failed on the network or was BLOCKED by an ad-blocker. As such, we have to\r\n      // fall-back to using a mock API.\r\n      return (this.clientPromise = Promise.resolve(new NoopClient()));\r\n    }\r\n\r\n    // ASSERT: If we made it this far, the document has not completed loading (but it\r\n    // may be in an \"interactive\" state which is when I believe that the Angular app\r\n    // gets bootstrapped). As such, we need bind to the LOAD event to wait for our\r\n    // third-party scripts to load (or fail to load, or be blocked).\r\n    this.clientPromise = new Promise<Client>(\r\n      (resolve) => {\r\n\r\n        window.addEventListener(\r\n          \"load\",\r\n          function handleWindowLoad() {\r\n\r\n            // At this point, the 3rd-party library is either available or\r\n            // it's not - there's no further loading to do. If it's not\r\n            // present on the global scope, we're going to fall-back to using\r\n            // a mock API.\r\n            resolve(window.Client || new NoopClient());\r\n          }\r\n        );\r\n\r\n      }\r\n    );\r\n\r\n    return (this.clientPromise);\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------------- //\r\n// ----------------------------------------------------------------------------------- //\r\n\r\n// I provide a mock API for the 3rd-party script. This just allows the consuming code to\r\n// act as though the library is available even if it failed to load (example, it was\r\n// blocked by an ad-blocker).\r\nclass NoopClient implements Client {\r\n\r\n  constructor() {\r\n\r\n    console.warn(\"Client API not available, falling back to mock API.\");\r\n  }\r\n\r\n  public callback(...args: any[]): void {\r\n\r\n    // NOOP implement, nothing to do....\r\n  }\r\n\r\n  public getDeviceTime(date?: Date): Promise<string> {\r\n\r\n    return Promise.resolve(null);\r\n  }\r\n\r\n  public async getDeviceTimeZoneName(): Promise<string> {\r\n\r\n    return Promise.resolve(null);\r\n  }\r\n\r\n  public async getDeviceTimeZoneID(): Promise<string> {\r\n\r\n    return Promise.resolve(null);\r\n  }\r\n\r\n  public async getDeviceTimeZoneOffset(): Promise<number> {\r\n\r\n    return Promise.resolve(null);\r\n  }\r\n\r\n  public async getLanguageCode(): Promise<string> {\r\n\r\n    return Promise.resolve(null);\r\n  }\r\n\r\n  public async getDeviceKey(): Promise<string> {\r\n\r\n    return Promise.resolve(null);\r\n  }\r\n\r\n  public sendCommand(name: string, arg: string): void {\r\n\r\n    // NOOP implement, nothing to do....\r\n  }\r\n\r\n  public sendRemoteCommand(deviceKeys: string[], name: string, arg: string) {\r\n\r\n    // NOOP implement, nothing to do....\r\n  }\r\n\r\n  public track(eventName: string, properties?: string): void {\r\n\r\n    // NOOP implement, nothing to do....\r\n  }\r\n\r\n  public timeEvent(eventName: string): void {\r\n\r\n    // NOOP implement, nothing to do....\r\n  }\r\n\r\n  public newEventSession(id?: string): void {\r\n\r\n    // NOOP implement, nothing to do....\r\n  }\r\n\r\n  public async getRevelRoot(): Promise<string> {\r\n\r\n    return Promise.resolve(null);\r\n  }\r\n\r\n  public async getCommandMap(): Promise<string> {\r\n\r\n    return Promise.resolve('{}');\r\n  }\r\n}\r\n","import { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { PlayerClientService } from './player-client.service';\n\n\n@NgModule({\n  imports: [\n  ],\n  providers: [{\n    provide: APP_INITIALIZER,\n    useFactory: () => initializeApp,\n    deps: [PlayerClientService],\n    multi: true\n  }]\n})\nexport class PlayerClientModule { }\n\nfunction initializeApp(): Promise<any> {\n  return new Promise((resolve, reject) => {\n    PlayerClientService.init({});\n    resolve(true);\n  });\n}\n","/*\n * Public API Surface of player-client\n */\n\nexport * from './lib/player-client.service';\nexport * from './lib/player-client.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["PlayerClientService","constructor","zone","Subject","BehaviorSubject","fromEvent","document","pipe","share","tap","onStart$","onStop$","map","e","name","detail","arg","onCommand$","self","window","RevelDigital","Controller","onCommand","run","next","onStart","onStop","onStartSub","onStartEvt$","subscribe","onStopSub","onStopEvt$","onCommandSub","onCommandEvt$","clientPromise","onReady$","ngOnDestroy","_a","unsubscribe","_b","_c","init","data","console","log","callback","args","getClient","then","client","length","getDeviceTime","date","undefined","getDeviceTimeZoneName","getDeviceTimeZoneID","getDeviceTimeZoneOffset","getLanguageCode","getDeviceKey","sendCommand","sendRemoteCommand","deviceKeys","track","eventName","properties","JSON","stringify","timeEvent","newEventSession","id","getRevelRoot","getCommandMap","parse","Client","Promise","resolve","readyState","NoopClient","addEventListener","handleWindowLoad","i0","Injectable","providedIn","warn","PlayerClientModule","provide","APP_INITIALIZER","useFactory","initializeApp","deps","multi","NgModule","imports","providers","reject"],"sourceRoot":"webpack:///"}