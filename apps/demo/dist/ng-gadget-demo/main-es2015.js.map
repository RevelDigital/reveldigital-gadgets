{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\ndeclare var gadgets: any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  prefs;\n  title = 'clock-greets';\n  time;\n  hours;\n  msg;\n  link;\n\n  constructor(){\n    if (gadgets) {\n      this.prefs = new gadgets.Prefs();\n      console.log('rdKey pref: ' + this.prefs.getString('rdKey'));\n    }\n\n    setInterval(() => {\n      this.time = new Date();\n   }, 1000);\n\n   this.decide();\n  }\n\n  decide() {\n    this.hours = new Date().getHours();\n\n    if(this.hours < 10){\n      this.msg = 'Good Morning';\n    }else if(this.hours < 16){\n      this.msg = 'Good Afternoon';\n    }else if(this.hours < 19){\n      this.msg = 'Good Evening';\n    }else if(this.hours < 24){\n      this.msg = 'Good Night';\n    }\n  }\n}","<div class=\"context\">\n  <p class=\"txt-time\">{{time | date:'medium'}}</p>\n  <p class=\"txt-greetings\">{{msg}}</p>\n</div>\n\n<div class=\"area\">\n  <ul class=\"circles\">\n    <li></li>\n    <li></li>\n    <li></li>\n    <li></li>\n    <li></li>\n    <li></li>\n    <li></li>\n    <li></li>\n    <li></li>\n    <li></li>\n  </ul>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { LOCALE_ID } from '@angular/core';\nimport { APP_BASE_HREF, registerLocaleData } from '@angular/common';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport localeFr from '@angular/common/locales/fr';\nimport localeRu from '@angular/common/locales/ru';\nregisterLocaleData(localeFr);\nregisterLocaleData(localeRu);\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [\n    { provide: LOCALE_ID, useValue: \"fr\" }, \n    { provide: APP_BASE_HREF, useValue : '/gadgets/ifr' }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}