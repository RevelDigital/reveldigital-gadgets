<?xml version="1.0" encoding="UTF-8" ?> 
<Module> 
<ModulePrefs title="RevelDigital Mini Weather Gadget" description="Compact weather with high/low temperature and current condition icon" author="RevelDigital" background="transparent">
  <Locale messages="https://reveldigital.github.io/reveldigital-gadgets/ALL_ALL.xml"/>
  <Locale lang="ru" messages="https://reveldigital.github.io/reveldigital-gadgets/ru_ALL.xml"/>
  <UserPref name="units" display_name="Temperature Units" datatype="enum" default_value="f">
    <EnumValue value="f" display_value="US" />
    <EnumValue value="c" display_value="Metric" />
  </UserPref>
  <UserPref name="location" display_name="Location" datatype="string" default_value="*|DEVICE.LOCATION.CITY|*, *|DEVICE.LOCATION.STATE|*" />
  <UserPref name="font-style" display_name="Font Style" datatype="style" default_value="font-family:Verdana;color:rgb(255, 255, 255);font-size:18px;" required="true" />
  <UserPref name="rdW" display_name="Width" required="true" default_value="280" datatype="hidden" />
  <UserPref name="rdH" display_name="Height" required="true" default_value="190" datatype="hidden" />
  <UserPref name="ForeColor" datatype="hidden" />
  <UserPref name="BackColor" datatype="hidden" />
</ModulePrefs>
<Content type="html">
<![CDATA[

<link rel="stylesheet" type="text/css" href="https://reveldigital.github.io/reveldigital-gadgets/styles/dripicons-weather.css">

<style type="text/css">

  body * {
    letter-spacing: 0;
    word-spacing: normal;
  }

  body {
    background: transparent;
    overflow: hidden;
    margin: 0;
    padding: 0;
  }

  #container {
    position: relative;
    width: __UP_rdW__px;
    height: __UP_rdH__px;
    margin: 0;
    padding: 0;
    -webkit-user-select: none; 
    -moz-user-select: none; 
    -ms-user-select: none; 
    user-select: none;
  }

  #temp {
    __UP_font-style__;
  }
        
</style>

<script id="template" type="text/x-handlebars-template">
  {{#if (isMetric)}}
    <div id="temp">
      {{round maxTempC}}&#176;
      /
      {{round minTempC}}&#176;
      <span class="icon diw-{{getIcon icon}}"></span>
    </div>
  {{else}}
      <div id="temp">
      {{round maxTempF}}&#176;
      /
      {{round minTempF}}&#176;
      <span class="icon diw-{{getIcon icon}}"></span>
    </div>
  {{/if}}
</script>

<div id="container">
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.11/handlebars.min.js"></script>
<script src="https://reveldigital.github.io/reveldigital-gadgets/third-party/vminpoly.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js"></script>
<script src="https://reveldigital.github.io/gadget-common/utils.js" type="text/javascript"></script>
<script src="https://www.google.com/jsapi" type="text/javascript"></script>

<script type="text/javascript">

  var re = /[^\/]+$/;
  
  var prefs = new gadgets.Prefs();

  var search = prefs.getString("location");
  var unit = prefs.getString("units");
  
  var conditionMap_aeris = {
    "am_pcloudyr.png": "cloud-rain-sun",
    "am_showers.png": "cloud-rain",
    "am_showshowers.png": "cloud-snow",
    "am_tstorm.png": "cloud-lightning",
    "blizzard.png": "snow",
    "blizzardn.png": "snow",
    "blowingsnow.png": "snow",
    "blowingsnown.png": "snow",
    "chancetstorm.png": "cloud-lightning-sun-2",
    "chancetstormn.png": "cloud-lightning-moon",
    "clear.png": "sun",
    "clearn.png": "moon-50",
    "clearw.png": "sun",
    "clearwn.png": "moon-50",
    "cloudy.png": "clouds",
    "cloudyn.png": "clouds",
    "cloudyw.png": "clouds",
    "cloudywn.png": "clouds",
    "drizzle.png": "clouds",
    "drizzlef.png": "clouds",
    "drizzlen.png": "clouds",
    "dust.png": "fog",
    "fair.png": "sun",
    "fairn.png": "moon-50",
    "fairw.png": "sun",
    "fairwn.png": "moon-50",
    "fdrizzle.png": "drizzle",
    "fdrizzlen.png": "drizzle",
    "flurries.png": "cloud-snow-sun",
    "flurriesn.png": "cloud-snow-moon",
    "flurriesw.png": "cloud-snow-sun",
    "flurrieswn.png": "cloud-snow-moon",
    "fog.png": "fog",
    "fogn.png": "fog",
    "freezingrain.png": "rain",
    "freezingrainn.png": "rain",
    "hazy.png": "fog",
    "hazyn.png": "fog",
    "mcloudy.png": "clouds-sun",
    "mcloudyn.png": "clouds-moon",
    "mcloudyr.png": "cloud-rain-sun",
    "mcloudyrn.png": "cloud-rain-moon",
    "mcloudyrw.png": "cloud-wind-sun",
    "mcloudyrwn.png": "cloud-wind-moon",
    "mcloudys.png": "cloud-snow-sun",
    "mcloudysfn.png": "cloud-snow-moon",
    "mcloudysfw.png": "cloud-snow-sun",
    "mcloudysfwn.png": "cloud-snow-moon",
    "mcloudysn.png": "cloud-snow-moon",
    "mcloudysw.png": "cloud-snow-sun",
    "mcloudyswn.png": "cloud-snow-moon",
    "mcloudyt.png": "cloud-rain-lightning-sun",
    "mcloudytn.png": "cloud-rain-lightning-moon",
    "mcloudytw.png": "cloud-rain-lightning-sun",
    "mcloudytwn.png": "cloud-rain-lightning-moon",
    "mcloudyw.png": "cloud-wind-2",
    "mcloudywn.png": "cloud-wind-2-moon",
    "na.png": "",
    "pcloudy.png": "clouds-sun",
    "pcloudyn.png": "clouds-moon",
    "pcloudyr.png": "cloud-rain-sun",
    "pcloudyrn.png": "cloud-rain-moon",
    "pcloudyrw.png": "cloud-wind-sun",
    "pcloudyrwn.png": "cloud-wind-moon",
    "pcloudys.png": "cloud-snow-sun",
    "pcloudysf.png": "cloud-snow-sun",
    "pcloudysfn.png": "cloud-snow-moon",
    "pcloudysfw.png": "cloud-snow-sun",
    "pcloudysfwn.png": "cloud-snow-moon",
    "pcloudysn.png": "cloud-snow-moon",
    "pcloudysw.png": "cloud-rain-sun",
    "pcloudyswn.png": "cloud-snow-moon",
    "pcloudyt.png": "cloud-rain-lightning-sun",
    "pcloudytn.png": "cloud-rain-lightning-moon",
    "pcloudytw.png": "cloud-rain-lightning-sun",
    "pcloudytwn.png": "cloud-rain-lightning-moon",
    "pcloudyw.png": "cloud-wind-2",
    "pcloudywn.png": "cloud-wind-2-moon",
    "pm_pcloudy.png": "clouds-sun",
    "pm_pcloudyr.png": "cloud-rain-sun",
    "pm_showers.png": "rain",
    "pm_snowshowers.png": "snow",
    "pm_tstorm.png": "lightning",
    "rain.png": "rain",
    "rainandsnow.png": "hail",
    "rainandsnown.png": "hail",
    "rainn.png": "rain",
    "raintosnow.png": "rain",
    "raintosnown.png": "rain",
    "rainw.png": "rain",
    "showers.png": "rain",
    "showersn.png": "rain",
    "showersw.png": "rain",
    "sleet.png": "drizzle",
    "sleetn.png": "drizzle",
    "sleetsnow.png": "drizzle",
    "smoke.png": "fog",
    "smoken.png": "fog",
    "snow.png": "snow",
    "snown.png": "snow",
    "snowshowers.png": "snow",	
    "snowshowersn.png": "snow",
    "snowshowersw.png": "snow",
    "snowshowerswn.png": "snow",
    "snowtorain.png": "snow",
    "snowtorainn.png": "snow",
    "snoww.png": "snow",
    "snowwn.png": "snow",
    "sunny.png": "sun",
    "sunnyn.png": "sun",
    "sunnyw.png": "sun",
    "sunnywn.png": "sun",
    "tstorm.png": "lightning",
    "tstormn.png": "lightning",
    "tstormsw.png": "lightning",
    "tstormswn.png": "lightning",
    "tstormw.png": "lightning",
    "tstormwn.png": "lightning",
    "wind.png": "wind",
    "wintrymix.png": "drizzle",
    "wintrymixn.png": "drizzle"
  };
  
  var conditionMap = {
    "chanceflurries": "diw-cloud-snow-sun",
    "chancerain": "diw-cloud-rain-sun",
    "chancesleet": "diw-cloud-drizzle-sun",
    "chancesnow": "diw-cloud-snow-sun",
    "chancetstorms": "diw-cloud-lightning-sun",
    "clear": "diw-sun",
    "cloudy": "diw-cloud",
    "flurries": "diw-snow",
    "fog": "diw-fog",
    "hazy": "diw-cloud-fog-sun",
    "mostlycloudy": "diw-clouds-sun",
    "mostlysunny": "diw-clouds-sun",
    "partlycloudy": "diw-clouds-sun",
    "partlysunny": "diw-clouds-sun",
    "sleet": "diw-drizzle",
    "rain": "diw-rain",
    "snow": "diw-snow",
    "sunny": "diw-sun",
    "tstorms": "diw-lightning",
    "nt_chanceflurries": "diw-cloud-snow-moon",
    "nt_chancerain": "diw-cloud-rain-moon",
    "nt_chancesleet": "diw-cloud-drizzle-moon",
    "nt_chancesnow": "diw-cloud-snow-moon",
    "nt_chancetstorms": "diw-cloud-lightning-moon",
    "nt_clear": "diw-moon",
    "nt_cloudy": "diw-cloud",
    "nt_flurries": "diw-snow",
    "nt_fog": "diw-fog",
    "nt_hazy": "diw-cloud-fog-moon",
    "nt_mostlycloudy": "diw-clouds-moon",
    "nt_mostlysunny": "diw-clouds-moon",
    "nt_partlycloudy": "diw-clouds-moon",
    "nt_partlysunny": "diw-clouds-moon",
    "nt_sleet": "diw-drizzle",
    "nt_rain": "diw-rain",
    "nt_snow": "diw-snow",
    "nt_sunny": "diw-moon",
    "nt_tstorms": "diw-lightning"
  };

  Handlebars.registerHelper('getIcon', function (icon) {
      return conditionMap_aeris[icon];
  });
  Handlebars.registerHelper('round', function (num) {
      return parseInt(num);
  });
  Handlebars.registerHelper('isMetric', function () {
      return prefs.getString("units") == 'c';
  });
  
  var currentTemplate = Handlebars.compile(document.getElementById("template").innerHTML);

  function load() {
  
    WebFont.load({
      google: {
        families: [ RevelDigital.getFamilyName(prefs.getString("font-style")) ]
      }
    });
    
    getForecast(search);
    
    setInterval(function() {
      getForecast(search);
    }, 1000 * 60 * 30);
  }

  function getForecast(location) {
    if (location == "" || location.indexOf("*|DEVICE.LOCATION.CITY|*") != -1) {
      location = "Fargo, ND";
    }
    var api = 'https://api.aerisapi.com/forecasts/' + encodeURIComponent(location) + '?client_id=hUqX7OlM6GSNFSm9wyhPF&client_secret=APojYbUAk5ovlTHuTsAPGvdgCgcoo2ANE9Xuc7N0';
    $.ajax({
      type: 'GET',
      url: api,
      dataType: 'json',
      success: function(data) {
        if (data.success === false) {
          return;
        }
        $("#container").html(currentTemplate(data.response[0].periods[0]));
      }
    });
  }
  
  gadgets.util.registerOnLoadHandler(load);
  
</script>

]]>
</Content>
</Module>