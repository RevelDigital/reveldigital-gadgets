<?xml version="1.0" encoding="UTF-8" ?> 
<Module> 
<ModulePrefs title="RevelDigital Google Spreadsheet Gadget" description="Basic tabular display of Google spreadsheet data" author="RevelDigital" background="transparent">
  <UserPref name="spreadsheetUrl" display_name="Published spreadsheet URL" datatype="string" />
  <UserPref name="hasTitle" display_name="Use first row as header"  datatype="bool" default_value="true" />
  <UserPref name="header-style" display_name="Header Style" datatype="string" default_value=".header-style{font-family:Verdana, Verdana, Geneva, sans-serif;color:rgb(0, 0, 0);font-weight:normal;font-size:28px;}" required="true" />
  <UserPref name="body-style" display_name="Body Style" datatype="string" default_value=".body-style{font-family:Verdana, Verdana, Geneva, sans-serif;color:rgb(0, 0, 0);font-weight:normal;font-size:18px;}" required="true" />
  <UserPref name="rdW" display_name="Width" required="true" default_value="280" datatype="hidden" />
  <UserPref name="rdH" display_name="Height" required="true" default_value="190" datatype="hidden" />
</ModulePrefs>
<Content type="html">
<![CDATA[

<style type="text/css">
body *
{
  line-height: 1.2em; 
  letter-spacing: 0; 
  word-spacing: normal; 
}

body
{
  background: transparent;
}

table
{
  width: __UP_rdW__px;
}

table.google-visualization-table-table,
.google-visualization-table-tr-head,
.google-visualization-table-tr-over,
.google-visualization-table-tr,
.google-visualization-table-tr-head td,
.google-visualization-table-tr-over td,
.google-visualization-table-tr td
{
    background-color: transparent;
}

__UP_header-style__
__UP_body-style__

</style>

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>
<script type="text/javascript" src="http://www.google.com/jsapi"></script>

<div id="table">
</div>

<script type="text/javascript">

  var prefs = new gadgets.Prefs();

  function load() {
  
    //$("body").prepend("<style type=\"text/css\"> body * { font-family: '" + prefs.getString("fontFamily") + "'; } </style>");
    //$("body").prepend("<style type=\"text/css\"> body * { font-size: " + prefs.getString("fontSize") + "; } </style>");
    //$("#data").height($(window).height()).width($(window).width());
    //$("#data table").css("color", prefs.getString("ForeColor"));
    //$("#data").css("background-color", prefs.getString("BackColor"));
    
    //update();
    
    //setInterval(update, 120000);
    
    google.load('visualization', '1', {'packages': ['table']});
    google.setOnLoadCallback(initialize);
  }

  gadgets.util.registerOnLoadHandler(load);
</script>

<script type="text/javascript">
  var container;
  var table;
  var max_id = 0;
  
  var update = function () {

    var url = googleUrl( prefs.getString("spreadsheetUrl") );
    
    $.getJSON(url, function(json){
      if(json) {
        cellEntries(json);
      }
    });
  }

  function initialize() {
    container = document.getElementById("table");
    table = new google.visualization.Table(container);
    
    var query = new google.visualization.Query(googleUrl('https://docs.google.com/spreadsheet/pub?key=0ApSc3DpjNyLJdGJSVk1rYS1sT3hrSmVhYkp3aFJPaXc&output=html'));
    
    query.send(draw);
  }
  
  function draw(response) {
    if (response.isError()) {
      alert('Error in query');
    }
    var dt = response.getDataTable();
    
    google.visualization.events.addListener(table, "ready",
      function (event) {
        $(".cell").css("font-size", "30px");
      }
    );
    
    google.visualization.events.addListener(table, "sort",
      function (event) {
        $(".cell").css("font-size", "30px");
      }
    );
    
    table.draw(dt, { allowHtml:false, cssClassNames: {
      headerRow: 'header-style',
      headerCell: 'header-style',
      tableRow: 'body-style',
      tableCell: 'body-style',
      selectedTableRow: 'body-style',
      oddTableRow: 'body-style',
      hoverTableRow: 'body-style',
      rowNumberCell: 'body-style'
    } });
  }
  
  var googleUrl = function (sourceIdentifier) {

    this.sourceIdentifier = sourceIdentifier;
    if (this.sourceIdentifier.match(/http(s)*:/)) {
      this.url = this.sourceIdentifier;
      try {
        this.key = this.url.match(/key=(.*?)&/)[1];
      } catch (error) {
        this.key = this.url.match(/(cells|list|values)\/(.*?)\//)[2];
      }
    } else {
      this.key = this.sourceIdentifier;
    }    
    var url = "https://spreadsheets.google.com/pub?key=" + this.key;
    
    if (prefs.getBool("hasTitle")) {
      url = url + "&headers=1";
    }
  }
</script>
]]>
</Content>
</Module>