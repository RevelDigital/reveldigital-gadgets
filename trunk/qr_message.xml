<?xml version="1.0" encoding="UTF-8" ?> 
<Module> 
<ModulePrefs title="RevelDigital QR Control Test" description="Control digital signage with QR code." author="RevelDigital" background="transparent">
  <UserPref name="api_key" display_name="API Key" datatype="string" required="true" />
  <UserPref name="reg_key" display_name="REG Key" datatype="string" required="true" />
  <UserPref name="text-style" display_name="Text Style" datatype="style" default_value="font-family:Verdana;color:rgb(000, 000, 000);font-size:25px;" required="false" />
  <UserPref name="name-style" display_name="Title Style" datatype="style" default_value="font-family:Verdana;color:rgb(000, 000, 000);font-size:25px;" required="false" />
</ModulePrefs>
<Content type="html">
<![CDATA[

<style type="text/css">

body {
    background: transparent;
}

.textview {
    __UP_text-style__;
    text-align:center;
}

#name_of_queue {
    __UP_name-style__;
    text-align:center;
}

</style>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.2.6/jquery.min.js" type="text/javascript" charset="utf-8"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/0.9.6/socket.io.min.js"></script>
<script type="text/javascript" charset="utf-8">


function getDevicebyRegKey(regKey) {
  console.log("getdevice");
    var image = $.getJSON("http://api.reveldigital.com/devices.json?api_key=" + prefs.getString('api_key'), function (data) {
      
        for(var i=0; i < data.length; i++) {
            var currentDevice = data[i];
            if(currentDevice.registration_key == regKey) {
                deviceId = currentDevice.id;
            }
        }

        init();
    });
}

//startup waiting for message from server
function init() {
  console.log("init");
  connected = false;
  
  socketConnect();
  
  socket.on('message', function(data) {
    if(Client != undefined) {
      Client.callback(data);
    }
    showText(data);
    setTimeout(function() {
      showText("");
    }, 20000);
  });
  socket.on('disconnect', function() {
      connected = false;
      console.log('Got disconnected');
      socketConnect();
  });
  socket.on('connect', function() {
    console.log('Got Connected');
    connected = true;
  });
 
   socket.emit('join room', deviceId);
}

function socketConnect() {
  console.log('Trying to connect');
    socket = io.connect('http://65.183.249.120:3000/room');
    socket.emit('join room', deviceId);
    if(!connected) {
      setTimeout(function() {
        socketConnect();
      }, 10000);
    }
    
}


$(function() {  
  console.log("start");
  deviceId = 'test';
  prefs = new gadgets.Prefs();
  getDevicebyRegKey(prefs.getString('reg_key'));
});

//show text from source given by server
function showText(text) {
  if(text.length == 0) {
    $("#youhave").html("");
    $("#name_of_queue").html("");
    $("#forplayback").html("");
  }
  else {
    $("#youhave").html("You have queued");
    $("#name_of_queue").html(text);
    $("#forplayback").html("for playback!");
  }
}

</script>

<body>
  <div id="youhave" class="textview">
  </div>

  <div id="name_of_queue">
  </div>

  <div id="forplayback" class="textview">
  </div>
</body>

]]>
</Content>
</Module>