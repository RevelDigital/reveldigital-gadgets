<?xml version="1.0" encoding="UTF-8" ?> 
<Module> 
<ModulePrefs title="RevelDigital RSS Slideshow Gadget" description="Rotates through items from an RSS feed" author="RevelDigital" background="transparent">
  <UserPref name="feedUrl" display_name="RSS Feed (URL)" datatype="string" />
  <UserPref name="delay" display_name="Delay between items (seconds)" datatype="string" default_value="10" />
  <UserPref name="numEntries" display_name="Number of items to retrieve" datatype="string" default_value="10" />
  <UserPref name="fontFamily" display_name="Font Family" default_value="verdana" datatype="enum" >
    <EnumValue value="times new roman" display_value="Times New Roman" />
    <EnumValue value="courier new" display_value="Courier New" />
    <EnumValue value="verdana" display_value="Verdana" />
    <EnumValue value="arial" display_value="Arial" />
    <EnumValue value="tahoma" display_value="Tahoma" />
    <EnumValue value="impact" display_value="Impact" />
  </UserPref>
  <UserPref name="fontSize" display_name="Font Size" default_value="medium" datatype="enum" >
    <EnumValue value="xx-small" display_value="XX Small" />
    <EnumValue value="x-small" display_value="X Small" />
    <EnumValue value="small" display_value="Small" />
    <EnumValue value="medium" display_value="Medium" />
    <EnumValue value="large" display_value="Large" />
    <EnumValue value="x-large" display_value="X Large" />
    <EnumValue value="xx-large" display_value="XX Large" />
  </UserPref>
</ModulePrefs>
<Content type="html">
<![CDATA[

<style type="text/css">
body *
{
  line-height: 1.2em; 
  letter-spacing: 0; 
  word-spacing: normal; 
}

body
{
  background: transparent;
}

h2
{
  font-size: 150% !important;
  font-weight: bold;
}

ul.slider
{
  padding: 0;
  margin: 0;
}

ul.slider li
{
  overflow: hidden;
  padding: 0;
  margin: 0;
}

.when
{
  opacity: 0.7;
  margin-top: 2px;
  text-align: right;
  font-style: italic;
  font-size: 90%;
}
</style>

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
<script src="https://raw.github.com/wandoledzep/bxslider/13f2c447dae24f812f06df49e740edb0a7bf750a/jquery.bxSlider.min.js" type="text/javascript"></script>

<div id="data">
<ul class="slider">
</ul>
</div>

<script type="text/javascript">

  var prefs = new gadgets.Prefs();
  var slider = null;
  
  function load() {
  
    $("body").prepend("<style type=\"text/css\"> body * { font-family: '" + prefs.getString("fontFamily") + "'; } </style>");
    $("body").prepend("<style type=\"text/css\"> body * { font-size: " + prefs.getString("fontSize") + "; } </style>");
    $("body").prepend("<style type=\"text/css\"> li.item { height:" + $(window).height() + "px; } </style>");
    
    $("div#data").height($(window).height()).width($(window).width());
    $("div#data").css("color", prefs.getString("ForeColor"));
    $("div#data").css("background-color", prefs.getString("BackColor"));
    
    update();
    
    setInterval(update, 120000);
  }

  gadgets.util.registerOnLoadHandler(load);
</script>

<script type="text/javascript">

  var max_id = 0;
  
  var update = function () {

    var feedUrl = encodeURI(prefs.getString("feedUrl"));
    var url = "https://ajax.googleapis.com/ajax/services/feed/load?v=1.0&num=" + prefs.getInt("numEntries") + "&callback=?&q=" + feedUrl;
    
    $.getJSON(url, function(json) {
    
      if (json && json.responseStatus == 200) {
      
        if (slider != null) {
          slider.destroyShow();
        }
        $("#data ul.slider").empty();
        
        $.each(json.responseData.feed.entries, function (idx, entry) {
        
          var e = $("<li class=\"item\"></li>");
          e.append($("<h2>" + entry.title + "</h2>"));
          e.append($("<div>" + entry.content + "</div>"));
          e.append($("<span class=\"when\">" + timeAgo(entry.publishedDate) + "</span>"));
          
          $("#data ul.slider").append(e);
        });
        
        slider = $("#data ul.slider").bxSlider({
          mode: 'vertical',
          pager: false,
          controls: false,
          auto: prefs.getInt("delay")
        });
      }
    });
  }

  var timeAgo = function (dateString) {
    var rightNow = new Date(),
    then = new Date(dateString),
    diff = rightNow - then,
    second = 1000,
    minute = second * 60,
    hour = minute * 60,
    day = hour * 24,
    week = day * 7;
  
    if (isNaN(diff) || diff < 0) {
      return "";	//Return blank string if unknown
    }
  
    if (diff < second * 2) {
      return "right now";
    }
  
    if (diff < minute) {
      return Math.floor(diff / second) + " seconds ago";
    }
  
    if (diff < minute * 2) {
      return "about 1 minute ago";
    }
  
    if (diff < hour) {
      return Math.floor(diff / minute) + " minutes ago";
    }
  
    if (diff < hour * 2) {
      return "about 1 hour ago";
    }
  
    if (diff < day) {
      return  Math.floor(diff / hour) + " hours ago";
    }
  
    if (diff > day && diff < day * 2) {
      return "yesterday";
    }
  
    if (diff < day * 365) {
      return Math.floor(diff / day) + " days ago";
    }
    else {
      return "over a year ago";
    }
  }
</script>
]]>
</Content>
</Module>