<?xml version="1.0" encoding="UTF-8" ?> 
<Module> 
<ModulePrefs title="Playlist Carousel Gadget" description="Displays a playlist in a photo carousel." author="RevelDigital" background="transparent">
  <UserPref name="time_delay" display_name="Delay between images moving (seconds)" datatype="string" default_value="5" required="true" />
  <UserPref name="api_key" display_name="API Key" datatype="string" required="true" />
  <UserPref name="reg_key" display_name="REG Key" datatype="string" required="true" default_value="*|DEVICE.REGISTRATIONKEY|*" />
  <UserPref name="playlist_name" display_name="Playlist name to display images from" datatype="string" required="true" />
</ModulePrefs>
<Content type="html">
<![CDATA[
<style type="text/css">
html{
  height: 100%;
}

body {
  margin: auto;
  width: 50%;
  height: 50%;
  font-family:Arial;
  font-size:12px;
  background:transparent;
}
ul {
  list-style: none;
  padding: 0;
  margin: 0 auto;
  width: 75%;
  height: 28em;
}
li {
  height: 24em;
  width: 100%;
  text-align: center;
  cursor: pointer;
}
li img {
  width: 100%;
}
li.roundabout-in-focus {
  cursor: default;
}
li span {
  display: block;
  padding-top: 6em;
}

img {
  -webkit-box-reflect:below 0px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(0.80, transparent), to(rgba(255,255,255,.50)));
}
</style>
</head>

<body>
  <ul id="carousel">
  </ul>
</body>

<script src="https://code.jquery.com/jquery-1.9.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/0.9.6/socket.io.min.js"></script>
<script src="https://reveldigital-gadgets.googlecode.com/svn/third-party/jquery.waterwheelCarousel.js"></script>
<script src="https://reveldigital-gadgets.googlecode.com/svn/third-party/jquery.roundabout.min.js"></script>

<script type="text/javascript">

  var prefs = new gadgets.Prefs();
  var deviceId;
  
  function getDevicebyRegKey(regKey) {
    var image = $.getJSON("https://api.reveldigital.com/devices.json?api_key=" + prefs.getString("api_key"), function (data) {
      $.each(data, function (idx, device) {
        if (device.registration_key == regKey) {
          deviceId = device.id;
        }
      });
      init();
    });
  }

  function getMedia() {
    var image = $.getJSON("https://api.reveldigital.com/playlists.json?api_key=" + prefs.getString('api_key'), function (data) {
      $.each(data, function (idx, playlist) {
        if (playlist.name.toLowerCase() == prefs.getString('playlist_name').toLowerCase()) {
          $.each(playlist.sources, function (sourceIdx, source) {
            $("#carousel").append('<li><img src="' + source.media.file_url + '" class="car_image" id="' + source.media.name + '"/></li>');
          });
        }
      });

      $('ul').roundabout({
        autoplay: true,
        autoplayDuration: prefs.getInt('time_delay') * 1000,
      });
      getDevicebyRegKey(prefs.getString('reg_key'));
    });
  }

  function load() {
    currentImage = "null";
    console.log("Version alpha: " + 13);
    getMedia();
  }

  function specifyImage(image) {
    $("[id='" + image + "']").trigger("click");
    $('ul').roundabout('stopAutoplay');
    setTimeout(function () {
      $('ul').roundabout('startAutoplay');
    }, 20000);
  }

  function init() {
    connected = false;

    socketConnect();

    socket.on('message', function (data) {
      specifyImage($.trim(data));
    });
    socket.on('disconnect', function () {
      connected = false;
      console.log('Carousel: Got disconnected');
      setTimeout(function () {
        socketConnect();
      }, 10000);
    });
    socket.on('connect', function () {
      console.log('Carousel: Got connected');
      connected = true;
      socket.emit('join room', deviceId);
    });

    //socket.emit('join room', deviceId);
  }

  function socketConnect() {
    console.log('Carousel: Trying to connect');
    socket = io.connect('http://65.183.249.120:3000/room');
    if (!connected) {
    }
  }

  gadgets.util.registerOnLoadHandler(load);

</script>
]]>
</Content>
</Module>