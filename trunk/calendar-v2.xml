<?xml version="1.0" encoding="UTF-8" ?> 
<Module> 
<ModulePrefs title="RevelDigital Google Calendar Gadget" description="Lists your current Google Calendar events in chronological order" author="RevelDigital" background="transparent">
  <Locale messages="https://reveldigital-gadgets.googlecode.com/svn/trunk/ALL_ALL.xml"/>
  <Locale lang="ru" messages="https://reveldigital-gadgets.googlecode.com/svn/trunk/ru_ALL.xml"/>
  <UserPref name="calendarUrl" display_name="Google Calendar ID or URL" datatype="string" />
  <UserPref name="displayFormat" display_name="Display Format"  datatype="enum" default_value="div">
    <EnumValue value="div" display_value="Consolidated" />
    <EnumValue value="table" display_value="Tabular" />
  </UserPref>
  <UserPref name="showHeader" display_name="Show Table Header" datatype="bool" default_value="true" />
  <UserPref name="maxResults" display_name="Max Number of Events" datatype="string" default_value="15" />
  <UserPref name="searchQuery" display_name="Search Query" datatype="string" />
  <UserPref name="header-style" display_name="Header Style" datatype="style" default_value="font-family:Verdana;color:rgb(255, 255, 255);font-size:24px;text-align:left;" required="true" />
  <UserPref name="body-style" display_name="Body Style" datatype="style" default_value="font-family:Verdana;color:rgb(255, 255, 255);font-size:18px;" required="true" />
  <UserPref name="rdW" display_name="Width" required="true" default_value="280" datatype="hidden" />
  <UserPref name="rdH" display_name="Height" required="true" default_value="190" datatype="hidden" />
  <UserPref name="ForeColor" datatype="hidden" />
  <UserPref name="BackColor" datatype="hidden" />
</ModulePrefs>
<Content type="html">
<![CDATA[

<style type="text/css">
body *
{
  line-height: 1.2em; 
  letter-spacing: 0; 
  word-spacing: normal;
}

body
{
  background: transparent;
  width: __UP_rdW__px;
  height: __UP_rdH__px;
}

#data
{
  background-color: #__UP_BackColor__;
}

#data table
{
  color: #__UP_ForeColor__;
  width: __UP_rdW__px;
}

#event-container
{
  display: none;
  color: #__UP_ForeColor__;
  width: __UP_rdW__px;
}

table
{
  display: none;
}

thead
{
  display: none;
}

td, th
{
  padding: 8px;
}

th
{
  __UP_header-style__
}

td
{
  __UP_body-style__
}

h2
{
  padding: 0;
  margin: 0 0 10px 0;
  font-weight: normal;
  __UP_header-style__
}

h3
{
  margin: 0;
  padding: 0;
  font-weight: normal;
  __UP_body-style__
}

.entry
{
  padding: 20px 5px;
  border-bottom: solid 1px #ccc;
}

.when
{
  display:block;
  opacity: 0.7;
  margin-top: 2px;
  font-weight: normal;
  __UP_body-style__
  font-size: 80% !important;
}
</style>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js" type="text/javascript"></script>
<script src="https://reveldigital-gadgets.googlecode.com/svn/third-party/moment-with-langs.min.js" type="text/javascript"></script>
<script src="https://reveldigital-gadgets.googlecode.com/svn/third-party/moment-timezone-with-data.js" type="text/javascript"></script>
<script src="https://www.google.com/jsapi" type="text/javascript"></script>

<div id="data">
  <table id="output">
    <thead>
      <tr>
        <th>When</th>
        <th>Event</th>
        <th>Location</th>
      </tr>
    </thead>
  </table>
  <div id="event-container">
  </div>
</div>

<script type="text/javascript">

  var prefs = new gadgets.Prefs();

  function init() {
    google.load("gdata", "1");
    google.setOnLoadCallback(load);
  }
  
  function load() {
    
    moment.lang("__MSG_Lang__");
    
    if (prefs.getString("displayFormat") == "table") {
      $("#output").show();
    } else {
      $("#event-container").show();
    }
    if (prefs.getBool("showHeader") == true) {
      $("#output thead").show();
    }
    update();
    
    setInterval(update, 120000);
  }

  gadgets.util.registerOnLoadHandler(init);
</script>

<script type="text/javascript">

  var max_id = 0;
  var tz = "";
  
  function update() {
    service = new google.gdata.calendar.CalendarService("");
    query = new google.gdata.calendar.CalendarEventQuery("https://www.google.com/calendar/feeds/" + googleUrl(prefs.getString("calendarUrl")) + "/public/full"); 
    query.setOrderBy('starttime');
    query.setSortOrder('ascending');
    query.setFutureEvents(true);
    query.setSingleEvents(true);
    query.setMaxResults(prefs.getInt("maxResults"));
    
    service.getEventsFeed(query,
      function(result) {   
        $("#event-container").empty();
        $("#data table tbody").remove();
        
        tz = result.feed.getTimeZone().getValue();
        
        var entries = result.feed.entry;
        for (var i = 0; i < entries.length; i++) {
          var eventEntry = entries[i];
          if (prefs.getString("displayFormat") == "table") {
            formatTable(eventEntry);
          } else {
            formatDiv(eventEntry);
          }
        }
      }
    );
  }

  function formatDiv(eventEntry) {

    var eventTitle = eventEntry.getTitle().getText();
    var locations = eventEntry.getLocations();
    var location = locations.length > 0 ? locations[0].valueString : '';
    var times = eventEntry.getTimes();
    
    for (var j = 0; j < times.length; j++) {
      var startTime = times[j].getStartTime();
      var endTime = times[j].getEndTime();
      var isAllDay = false;

      if (startTime.isDateOnly()) {       //All Day event
          isAllDay = true;
      }
      var div = $("<div class=\"entry\"></div>");
      
      var h2 = $("<h2></h2>");
      h2.text(eventTitle);
      $(div).append(h2);

      var h3 = $("<h3></h3>");
      h3.text(location);
      $(div).append(h3);

      var span = $("<span class=\"when\"></span>");
      
      var sd = moment.utc(startTime.getDate()).tz(tz).format("__MSG_Calendar_DateFormat__");
      var st = moment.utc(startTime.getDate()).tz(tz).format("__MSG_Calendar_TimeFormat__");
      var et = moment.utc(endTime.getDate()).tz(tz).format("__MSG_Calendar_TimeFormat__");
      if (isAllDay) {
        var ed = moment.utc(endTime.getDate()).tz(tz).subtract('days', 1).format("__MSG_Calendar_DateFormat__");
      } else {
        var ed = moment.utc(endTime.getDate()).tz(tz).format("__MSG_Calendar_DateFormat__");
      }
      
      var time = '';
      if (sd == ed) {
        time += sd;
      } else {
        time += sd + " - " + ed;
      }
      if (isAllDay) {
        span.text(time);
      } else {
        span.text(time + ", " + st + " - " + et);
      }
      
      $(h3).append(span);
      
      $("#event-container").append(div);
    }
  }

  function formatTable(eventEntry) {

    var eventTitle = eventEntry.getTitle().getText();
    var locations = eventEntry.getLocations();
    var location = locations.length > 0 ? locations[0].valueString : '';
    var times = eventEntry.getTimes();
    
    var tbody = $("<tbody></tbody>");
    
    for (var j = 0; j < times.length; j++) {
      var startTime = times[j].getStartTime();
      var endTime = times[j].getEndTime();
      var isAllDay = false;

      if (startTime.isDateOnly()) {       //All Day event
          isAllDay = true;
      }
      var tr = $('<tr/>');
            
      var sd = moment.utc(startTime.getDate()).tz(tz).format("__MSG_Calendar_DateFormat__");
      var st = moment.utc(startTime.getDate()).tz(tz).format("__MSG_Calendar_TimeFormat__");
      var et = moment.utc(endTime.getDate()).tz(tz).format("__MSG_Calendar_TimeFormat__");
      if (isAllDay) {
        var ed = moment.utc(endTime.getDate()).tz(tz).subtract('days', 1).format("__MSG_Calendar_DateFormat__");
      } else {
        var ed = moment.utc(endTime.getDate()).tz(tz).format("__MSG_Calendar_DateFormat__");
      }
      
      var td = $("<td class=\"date\"/>");
        
      var time = '';
      if (sd == ed) {
        time += sd;
      } else {
        time += sd + " - " + ed;
      }
      if (isAllDay) {
        td.text(time);
      } else {
        td.text(time + ", " + st + " - " + et);
      }
      $(tr).append(td);
        
      td = $("<td class=\"title\"/>");
      td.text(eventTitle);
      $(tr).append(td);
      
      td = $("<td class=\"where\"/>");
      $(td).text(location);
      $(tr).append(td);
      
      $(tbody).append(tr);
    }
    
    $(tbody).hide().appendTo("#data > table").fadeIn();
  }

  var googleUrl = function (sourceIdentifier) {

    if (sourceIdentifier.match(/http(s)*:/)) {
      try {
        return sourceIdentifier.match(/feeds\/(.*?)\/public\//)[1];
      } catch (error) {
        return sourceIdentifier.match(/feeds\/(.*?)\/private-(.*?)\//)[1];
      }
    } else {
      return sourceIdentifier;
    }
  }

</script>
]]>
</Content>
</Module>