<?xml version="1.0" encoding="UTF-8" ?> 
<Module> 
<ModulePrefs title="RevelDigital Mobile Remote" description="Remote control playlist with a mobile friendly app" author="RevelDigital" background="transparent">
  <UserPref name="apikey" display_name="RevelDigital API Key" datatype="string" />
  <UserPref name="regkey" display_name="Device Registration Key" datatype="string" default_value="*|DEVICE.REGISTRATIONKEY|*" />
  <UserPref name="playlist" display_name="Playlist Name" datatype="string" />
</ModulePrefs>
<Content type="html">
<![CDATA[
<script src="https://code.jquery.com/jquery-1.11.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.1.0/knockout-min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>

<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css">
<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
<style type="text/css">
  html {
    position: relative;
    min-height: 100%;
  }
  body {
    margin-bottom: 60px;
  }
  .footer {
    position: absolute;
    bottom: 0;
    width: 100%;
    /* Set the fixed height of the footer here */
    height: 60px;
    background-color: #f5f5f5;
  }
  .container .text-muted {
    margin: 20px 0;
  }
</style>

<body>
  <div class="container">
    <div class="row-fluid">
      <div class="span8 offset2 text-center">
      
        <h2 data-bind="visible: !isWaiting()">Pick to Play</h2>
        <h4 data-bind="visible: isLoading">Loading <i class="fa fa-refresh fa-spin"></i></h4>
        <h2 data-bind="visible: isWaiting">Queued: <span data-bind="text: $root.playing"></span></h2>
        <h4 data-bind="visible: isWaiting">Please wait for another selection <i class="fa fa-refresh fa-spin"></i></h4>
      </div>
    </div>
    <div class="row-fluid">
      <div class="span8 offset2 text-center">
        <h2 data-bind="text: $root.count, visible: isWaiting"></h2>
        <div class="btn-group-vertical" style="display: block; width: 100%;" data-bind="foreach: Sources, visible: !isWaiting()">
          <button class="btn btn-primary btn-lg" data-bind="click: function(data, event) { $parent.sendCommand(data, $root.Devices()[0]); return false; }, clickBubble: false"><span data-bind="text: media.name"></span></button>
        </div>
      </div>
    </div>
  </div>
  
  <div class="footer">
    <div class="container">
      <p class="text-muted">Copyright &copy; RevelDigital 2014</p>
    </div>
  </div>
</body>

<script type="text/javascript">

  var prefs = new gadgets.Prefs();
  
  var Repository = function() {
      this.Devices = ko.observableArray([]);
      this.Sources = ko.observableArray([]);
      this.isLoading = ko.observable(true);
      this.isWaiting = ko.observable(false);
      this.timerId = 0;
      this.count = ko.observable(0);
      this.qstring = {};
      this.playing = ko.observable();
  };

  Repository.prototype = function() {
      var
      load = function() {
        var self = this;
        
        var params = window.location.search.substring(1).split('&');
        for(var i = 0; i < params.length; i++) {
            var args = params[i].split('=');
            self.qstring[args[0]] = args[1];
        }
  
        $.getJSON("https://api.reveldigital.com/playlists.json?api_key=" + prefs.getString("apikey"), function (data) {
          $.each(data, function (index, item) {
            if (item.name.toLowerCase() == prefs.getString("playlist").toLowerCase()) {
              $.each(item.sources, function (idx, source) {
                if (source.media != null) {
                  self.Sources.push(source);
                }
              });
            }
          });
        }).done(function() {
          self.isLoading(false);
        });
        
        $.getJSON("https://api.reveldigital.com/devices.json?api_key=" + prefs.getString("apikey"), function (data) {
          $.each(data, function (index, item) {
            if (item.registration_key == prefs.getString('regkey')) {
              self.Devices.push(item);
            }
          });
        });
      };
      
      var
      countDown = function() {
        var self = this;
        
        self.count(5);
        self.isWaiting(true);
        self.timerId = window.setInterval(function(){
            self.count(self.count()-1);
            if (self.count() == 0){
                clearInterval(self.timerId);
                self.isWaiting(false);
            }
        }, 1000);
      };
      
      var
      sendCommand = function(source, device) {
        var self = this;
        
        self.countDown();
        
        self.playing(source.media.name);
        
        var cmds = [];
        cmds.push({ name: "play", arg: source.media.name });
        
        $.ajax({
          type: "POST",
          url: "https://api.reveldigital.com/devices/" + device.id + "/commands.json?api_key=" + prefs.getString("apikey"),
          data: JSON.stringify(cmds),
          contentType : 'application/json',
          processData: false,
          dataType: 'json'
        }).always(function() {
          //self.isWaiting(false);
        });
      };
      
      return {
          load: load,
          sendCommand: sendCommand,
          countDown: countDown
      }
  }();
    
  var customerRepository = new Repository();
  
  function load() {
    customerRepository.load();
    ko.applyBindings(customerRepository);
  }
  
  gadgets.util.registerOnLoadHandler(load);
</script>
]]>
</Content>
</Module>

