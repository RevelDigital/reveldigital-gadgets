<?xml version="1.0" encoding="UTF-8" ?> 
<Module> 
<ModulePrefs title="RevelDigital Weather Gadget" description="Two day weather panel in a horizontal orientation" author="RevelDigital" background="transparent">
  <Locale messages="https://reveldigital.github.io/reveldigital-gadgets/ALL_ALL.xml"/>
  <Locale lang="ru" messages="https://reveldigital.github.io/reveldigital-gadgets/ru_ALL.xml"/>
  <UserPref name="Units" display_name="Temperature Units" datatype="enum" default_value="f">
    <EnumValue value="f" display_value="US" />
    <EnumValue value="c" display_value="Metric" />
  </UserPref>
  <UserPref name="Location" display_name="Location" datatype="string" default_value="*|DEVICE.LOCATION.CITY|*, *|DEVICE.LOCATION.STATE|*" />
  <UserPref name="TitleColor" display_name="Title Color" datatype="color" default_value="#ffffff" required="true" />
  <UserPref name="BodyColor" display_name="Body Color" datatype="color" default_value="#ffffff" required="true" />
  <UserPref name="TileColor" display_name="Tile Color" datatype="color" default_value="" required="false" />
  <UserPref name="CustomFont" display_name="Google Font Name" datatype="string" default_value="" required="false" />
  <UserPref name="rdW" display_name="Width" required="true" default_value="280" datatype="hidden" />
  <UserPref name="rdH" display_name="Height" required="true" default_value="190" datatype="hidden" />
  <UserPref name="ForeColor" datatype="hidden" />
  <UserPref name="BackColor" datatype="hidden" />
</ModulePrefs>
<Content type="html">
<![CDATA[

<style type="text/css">

  body * {
    letter-spacing: 0; 
    word-spacing: normal;
  }

  body {
    background: transparent;
    overflow: hidden;
    margin: 0;
    padding: 0;
  }

  span, div.condition {
    font-family: arial,sans-serif;
    font-family: __UP_CustomFont__;
  }
  
  #container {
    position: relative;
    width: __UP_rdW__px;
    height: __UP_rdH__px;
    margin: 0;
    padding: 0;
    font-family: arial,sans-serif;
    font-family: __UP_CustomFont__;
    -webkit-user-select: none; 
    -moz-user-select: none; 
    -ms-user-select: none; 
    user-select: none;
  }
  
  .box {
    position: relative;
    -moz-border-radius: 15px;
    border-radius: 15px;
    background-color: __UP_TileColor__;
    height: 100%;
    width: 33%;
    padding: 0;
    margin-bottom: 10px;
  }
  
  .box-container {
    position: relative;
    height: 100%;
    width: 100%;
    background-image: url('https://reveldigital.github.io/reveldigital-gadgets/images/weather-cap.png');
    background-repeat: no-repeat;
    background-size: 100% 35%;
  }
  
  #current .temp-container {
    -moz-border-radius: 15px;
    border-radius: 15px;
    position: absolute;
    right: 0;
    bottom: 0;
    margin: 0;
    padding: 5vh 5vh;
    background-color:rgba(0,0,0,0.5);
    color: __UP_BodyColor__;
    text-shadow: 4px 4px 4px rgba(0,0,0,0.5);
  }
  
  #today .temp-container, #tomorrow .temp-container {
    -moz-border-radius: 15px;
    border-radius: 15px;
    position: absolute;
    right: 0;
    bottom: 0;
    top: 0;
    margin: 0;
    padding: 5px 5%;
    background-color:rgba(0,0,0,0.5);
    color: __UP_BodyColor__;
    text-shadow: 4px 4px 4px rgba(0, 0, 0, 0.5);
  }
  
  .temp-title {
    font-weight: normal;
    margin-top: 5px;
    width: 100%;
    text-align: left;
    font-size: 1.5vw;
  }
  
  .low, .high {
    font-weight: normal;
    width: 100%;
    text-align: center;
    font-size: 4vw;
  }
  
  .temp {
    position: relative;
    color: __UP_BodyColor__;
    text-align: center;
    width: 100%;
    height: 100%;
    font-size: 8vw;
    line-height: 8vw;
    padding: 1vw 0;
  }
  
  .condition-container {
    position: absolute;
    bottom: 0;
    width: 100%;
    text-align: center;
    margin-bottom: 10px;
    color: __UP_BodyColor__;
    font-size: 7vh;
  }
  
  .day-container {
    position: absolute;
    top: 0;
    left: 2%;
    width: 100%;
    text-align: left;
    margin-top: 4vh;
    margin-left: 10px;
    font-size: 7vh;
  }
  
  .day-container span {
    font-weight: bold;
    color: __UP_TitleColor__;
    text-shadow: 3px 3px 3px rgba(0, 0, 0, 0.5);
  }
  
  .icon {
    position: absolute;
    top: 15%;
    left: 10px;
    width: 120%;
  }
  
  .visible {
      opacity: 1;
  }

  img {
      opacity: 0;
      -webkit-transition: opacity 1s ease-in;
      -moz-transition: opacity 1s ease-in;
      -ms-transition: opacity 1s ease-in;
      -o-transition: opacity 1s ease-in;
      transition: opacity 1s ease-in;
  }
  
</style>


<script id="current-template" type="text/x-handlebars-template">
    <img class="icon" src="https://s.yimg.com/zz/combo?a/i/us/nws/weather/gr/{{getIcon icon}}.png" />
    <div class="temp-container">
    {{#if (isMetric)}}
        <div class="temp"><span>{{round tempC}}</span>&#176;</div>
    {{else}}
        <div class="temp"><span>{{round tempF}}</span>&#176;</div>
    {{/if}}
    </div>
</script>

<script id="forecast-template" type="text/x-handlebars-template">
    <img class="icon" src="https://s.yimg.com/zz/combo?a/i/us/nws/weather/gr/{{getIcon icon}}.png" />
    <div class="temp-container">
    {{#if (isMetric)}}
        <div class="temp-title">High:</div>
        <div class="high"><span>{{round maxTempC}}</span>&#176;</div>
        <div class="temp-title">Low:</div>
        <div class="low"><span>{{round minTempC}}</span>&#176;</div>
    {{else}}
        <div class="temp-title">High:</div>
        <div class="high"><span>{{round maxTempF}}</span>&#176;</div>
        <div class="temp-title">Low:</div>
        <div class="low"><span>{{round minTempF}}</span>&#176;</div>
    {{/if}}
    </div>
    <div class="condition-container">
        <div class="condition">{{weather}}</div>
    </div>
</script>


<div id="container">
  <div style="display:table; width:100%; height:100%; border-spacing:4px 10px;">
    <div style="display:table-row;">
      <div id="current" class="box" style="display:table-cell;">
        <div class="box-container">
          <div class="day-container">
            <span>__MSG_Currently__</span>
          </div>
          <div class="content">
          </div>
        </div>
      </div>
      <div id="today" class="box" style="display:table-cell;">
        <div class="box-container">
          <div class="day-container">
            <span>__MSG_Today__</span>
          </div>
          <div class="content">
          </div>
        </div>
      </div>
      <div id="tomorrow" class="box" style="display:table-cell;">
        <div class="box-container">
          <div class="day-container">
            <span>__MSG_Tomorrow__</span>
          </div>
          <div class="content">
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script src="https://reveldigital.github.io/reveldigital-gadgets/third-party/jquery.fittext.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.11/handlebars.min.js"></script>
<script src="https://reveldigital.github.io/reveldigital-gadgets/third-party/vminpoly.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/webfont/1.5.18/webfont.js"></script>

<script type="text/javascript">

  var re = /[^\/]+$/;

  var prefs = new gadgets.Prefs();
 
  var search = prefs.getString("Location");
  var unit = prefs.getString("Units");    
    
  var conditionMap_aeris = {
    "am_pcloudyr.png": "40d",
    "am_showers.png": "40d",
    "am_showshowers.png": "46d",
    "am_tstorm.png": "4d",
    "blizzard.png": "46d",
    "blizzardn.png": "46n",
    "blowingsnow.png": "42d",
    "blowingsnown.png": "42n",
    "chancetstorm.png": "38d",
    "chancetstormn.png": "38n",
    "clear.png": "32d",
    "clearn.png": "32n",
    "clearw.png": "32d",
    "clearwn.png": "32n",
    "cloudy.png": "26d",
    "cloudyn.png": "26n",
    "cloudyw.png": "26d",
    "cloudywn.png": "26n",
    "drizzle.png": "9d",
    "drizzlef.png": "9d",
    "drizzlen.png": "9n",
    "dust.png": "19d",
    "fair.png": "33d",
    "fairn.png": "33n",
    "fairw.png": "33d",
    "fairwn.png": "33n",
    "fdrizzle.png": "8d",
    "fdrizzlen.png": "8n",
    "flurries.png": "13d",
    "flurriesn.png": "13n",
    "flurriesw.png": "13d",
    "flurrieswn.png": "13n",
    "fog.png": "20d",
    "fogn.png": "20n",
    "freezingrain.png": "10d",
    "freezingrainn.png": "10n",
    "hazy.png": "21d",
    "hazyn.png": "21n",
    "mcloudy.png": "27d",
    "mcloudyn.png": "27n",
    "mcloudyr.png": "27d",
    "mcloudyrn.png": "27n",
    "mcloudyrw.png": "27d",
    "mcloudyrwn.png": "27n",
    "mcloudys.png": "27d",
    "mcloudysfn.png": "27n",
    "mcloudysfw.png": "27d",
    "mcloudysfwn.png": "27n",
    "mcloudysn.png": "27d",
    "mcloudysw.png": "27d",
    "mcloudyswn.png": "27n",
    "mcloudyt.png": "27d",
    "mcloudytn.png": "27n",
    "mcloudytw.png": "27d",
    "mcloudytwn.png": "27n",
    "mcloudyw.png": "27d",
    "mcloudywn.png": "27n",
    "na.png": "",
    "pcloudy.png": "29d",
    "pcloudyn.png": "29n",
    "pcloudyr.png": "29d",
    "pcloudyrn.png": "29n",
    "pcloudyrw.png": "29d",
    "pcloudyrwn.png": "29n",
    "pcloudys.png": "29d",
    "pcloudysf.png": "29d",
    "pcloudysfn.png": "29n",
    "pcloudysfw.png": "29d",
    "pcloudysfwn.png": "29n",
    "pcloudysn.png": "29n",
    "pcloudysw.png": "29d",
    "pcloudyswn.png": "29n",
    "pcloudyt.png": "29d",
    "pcloudytn.png": "29n",
    "pcloudytw.png": "29d",
    "pcloudytwn.png": "29n",
    "pcloudyw.png": "29d",
    "pcloudywn.png": "29n",
    "pm_pcloudy.png": "29d",
    "pm_pcloudyr.png": "29d",
    "pm_showers.png": "12d",
    "pm_snowshowers.png": "46d",
    "pm_tstorm.png": "4d",
    "rain.png": "11d",
    "rainandsnow.png": "5d",
    "rainandsnown.png": "5n",
    "rainn.png": "11n",
    "raintosnow.png": "5d",
    "raintosnown.png": "5n",
    "rainw.png": "11d",
    "showers.png": "11d",
    "showersn.png": "11n",
    "showersw.png": "11d",
    "sleet.png": "18d",
    "sleetn.png": "18n",
    "sleetsnow.png": "7d",
    "smoke.png": "22d",
    "smoken.png": "22n",
    "snow.png": "16d",
    "snown.png": "16n",
    "snowshowers.png": "46d",	
    "snowshowersn.png": "46n",
    "snowshowersw.png": "46d",
    "snowshowerswn.png": "46n",
    "snowtorain.png": "5d",
    "snowtorainn.png": "5n",
    "snoww.png": "16d",
    "snowwn.png": "16n",
    "sunny.png": "32d",
    "sunnyn.png": "32n",
    "sunnyw.png": "32d",
    "sunnywn.png": "32n",
    "tstorm.png": "4d",
    "tstormn.png": "4n",
    "tstormsw.png": "4d",
    "tstormswn.png": "4n",
    "tstormw.png": "4d",
    "tstormwn.png": "4n",
    "wind.png": "24d",
    "wintrymix.png": "7d",
    "wintrymixn.png": "7n"
  };
    
  var conditionMap = {
    "chanceflurries": "42d",
    "chancerain": "40d",
    "chancesleet": "18d",
    "chancesnow": "42d",
    "chancetstorms": "38d",
    "clear": "32d",
    "cloudy": "26d",
    "flurries": "13d",
    "fog": "20d",
    "hazy": "21d",
    "mostlycloudy": "28d",
    "mostlysunny": "29d",
    "partlycloudy": "30d",
    "partlysunny": "28d",
    "sleet": "18d",
    "rain": "11d",
    "snow": "16d",
    "sunny": "32d",
    "tstorms": "4d",
    "nt_chanceflurries": "42n",
    "nt_chancerain": "40n",
    "nt_chancesleet": "18n",
    "nt_chancesnow": "42n",
    "nt_chancetstorms": "38n",
    "nt_clear": "32n",
    "nt_cloudy": "26n",
    "nt_flurries": "13n",
    "nt_fog": "20n",
    "nt_hazy": "21n",
    "nt_mostlycloudy": "28n",
    "nt_mostlysunny": "29n",
    "nt_partlycloudy": "30n",
    "nt_partlysunny": "28n",
    "nt_sleet": "18n",
    "nt_rain": "11n",
    "nt_snow": "16n",
    "nt_sunny": "32n",
    "nt_tstorms": "4n"
  };
  
  Handlebars.registerHelper('getIcon', function (icon) {
      return conditionMap_aeris[icon];
  });
  Handlebars.registerHelper('round', function (num) {
      return parseInt(num);
  });
  Handlebars.registerHelper('isMetric', function () {
      return prefs.getString("Units") == 'c';
  });
  
  var currentTemplate = Handlebars.compile(document.getElementById("current-template").innerHTML);
  var forecastTemplate = Handlebars.compile(document.getElementById("forecast-template").innerHTML);
  
  function load() {
  
    WebFont.load({
      google: {
        families: [ prefs.getString("CustomFont") ]
      }
    });
    
    getConditions(search);
    getForecast(search);
    
    if (prefs.getString("TileColor") != "") {
      $(".box").css("box-shadow", "0 4px 4px rgba(0,0,0,0.5)");
    }
    
    setInterval(function() {
      getConditions(search);
      getForecast(search);
    }, 1000 * 60 * 30);
  }
  
  function getConditions(location) {
    if (location == "" || location.indexOf("*|DEVICE.LOCATION.CITY|*") != -1) {
      location = "Fargo, ND";
    }
    //var api = 'https://api.wunderground.com/api/d36c8e4bd2a20743/geolookup/conditions/q/' + encodeURIComponent(location) + '.json';
    var api = 'https://api.aerisapi.com/observations/' + encodeURIComponent(location) + '?client_id=hUqX7OlM6GSNFSm9wyhPF&client_secret=APojYbUAk5ovlTHuTsAPGvdgCgcoo2ANE9Xuc7N0';
    $.ajax({
      type: 'GET',
      url: api,
      dataType: 'json',
      success: function(data) {
        if (data.success === false) {
          return;
        }
        //if (data.response.results) {
        //  getConditions(re.exec(data.response.results[0].l)[0]);
        //  return;
        //}
        //var co = data.current_observation;
        $("#current .content").html(currentTemplate(data.response.ob));

        setTimeout(function () {
          $("#current img").addClass("visible");
        }, 1000);
      }
    });
  }

  function getForecast(location) {
    if (location == "" || location.indexOf("*|DEVICE.LOCATION.CITY|*") != -1) {
      location = "Fargo, ND";
    }
    var api = 'https://api.aerisapi.com/forecasts/' + encodeURIComponent(location) + '?client_id=hUqX7OlM6GSNFSm9wyhPF&client_secret=APojYbUAk5ovlTHuTsAPGvdgCgcoo2ANE9Xuc7N0';
    //var api = 'https://api.wunderground.com/api/d36c8e4bd2a20743/geolookup/forecast/q/' + encodeURIComponent(location) + '.json';
    $.ajax({
      type: 'GET',
      url: api,
      dataType: 'json',
      success: function(data) {
        if (data.success === false) {
          return;
        }
        //if (data.response.results) {
        //  getForecast(re.exec(data.response.results[0].l)[0]);
        //  return;
        //}
        //var fc = data.forecast.simpleforecast;
        $("#today .content").html(forecastTemplate(data.response.periods[0]));
        $("#tomorrow .content").html(forecastTemplate(data.response.periods[1]));

        setTimeout(function () {
            $("#today img").addClass("visible");
            $("#tomorrow img").addClass("visible");
        }, 1000);
      }
    });
  }
			
  gadgets.util.registerOnLoadHandler(load);
  
</script>

]]>
</Content>
</Module>
