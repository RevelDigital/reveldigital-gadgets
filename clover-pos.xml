<?xml version="1.0" encoding="UTF-8" ?> 
<Module> 
<ModulePrefs title="Clover Menu" description="A menu gadget for displaying information from a Clover POS machine" author="" background="transparent">
  <UserPref name="myMerchPref" display_name="Merchant ID" datatype="string" default_value="F9C033BGWQGZ1" required="true" />
  <UserPref name="myItemPref" display_name="Item ID" datatype="string" default_value="WNX9ME55QPDPE" required="true" />
  <UserPref name="myCatPref" display_name="Category ID" datatype="string" default_value="78TBJX18YSNJ2" required="true" />
  <UserPref name="myAPIPref" display_name="API Token" datatype="string" default_value="86260191-7049-15c9-9173-338d9784f65d" required="true" />
  <UserPref name="myTitlePref" display_name="Menu Title" datatype="string" default_value="Customizable Clover Menu via API!" required="true" />
  <UserPref name="myBoolIDPref" display_name="Display ID in Header" datatype="bool" default_value="true" />
  <UserPref name="ForeColor" datatype="hidden" />
  <UserPref name="BackColor" datatype="hidden" />
  <UserPref name="rdW" display_name="Width" required="true" default_value="280" datatype="hidden" />
  <UserPref name="rdH" display_name="Height" required="true" default_value="190" datatype="hidden" />
  <UserPref name="rdKey" display_name="Device Registration Key" default_value="*|DEVICE.REGISTRATIONKEY|*" datatype="hidden" />
</ModulePrefs>
<Content type="html">
<![CDATA[

<style type="text/css">
  body *
  {
    line-height: 1.2em; 
    letter-spacing: 0; 
    word-spacing: normal;
  }

  body {
        background-color: powderblue;
    }

    .header {
        padding: 30px;
        text-align: center;
        background: #1abc9c;
        color: white;
        font-size: 20px;
    }

    #priceStock {
        font-size: 25px;
        text-align: center;
    }

    #coffee {
        font-size: 25px;
        text-align: center;
        border: 1px solid black;
    }

    #IDvalues {
        text-decoration: underline;
    }

    input[type="text"] {
        border-radius: 10px;
        height: 140%;
    }

    button {
        border-radius: 10px;
        background-color: powderblue;
    }

    .centerTable {
        margin-left: auto;
        margin-right: auto;
        padding-bottom: 1rem;
    }

    th,
    td {
        padding-bottom: 8px;
        padding-top: 8px;
        padding-left: 30px;
        padding-right: 30px;
        border-bottom: 1pt solid black;
    }
  .my-style
  {
    __UP_myStylePref__;
  }
</style>

<body>
    <div class="header">
        <h1>__UP_myTitlePref__</h1>
        <p id="IDvalues"></p>
    </div>
    <h3 id="priceStock"></h3>
    <div id="coffee">
        <div>
            <h3 id="coffeeTitle">View our Wide Selection of Espresso Classics</h3>
            <table id="coffeeList" class="centerTable">

            </table>
        </div>
    </div>
</body>

<script type="text/javascript">

  var prefs = new gadgets.Prefs();

  let merchID = "__UP_myMerchPref__";
  let itemID = "__UP_myItemPref__";
  let espressoID = "__UP_myCatPref__";
  let myAPIToken = "__UP_myAPIPref__";

  function sleep(ms) {
      return new Promise(resolve => setTimeout(resolve, ms));
  }

  var formatter = new Intl.NumberFormat('en-US', {
      style: 'currency',
      currency: 'USD',
  });

  const options = {
      method: 'GET',
      headers: { Authorization: 'Bearer ' + myAPIToken }
  };

  let allMerch = ("Merchant ID: " + merchID);
  let allItem = ("Item ID: " + itemID);
  let allCat = ("Category ID: " + espressoID);
  let allID = (allMerch + " - " + allItem + " - " + allCat);
  document.getElementById("IDvalues").innerHTML = allID;

  fetch('https://sandbox.dev.clover.com/v3/merchants/' + merchID + '/categories/' + espressoID + '/items', options)
      .then(response => response.json())
      .then((response) => {
          for (let i = 0; i < response.elements.length; i++) {
              (document.getElementById("coffeeList").innerHTML += "<tr><td>" + response.elements[i].name + "</td><td>" + formatter.format((response.elements[i].price) / 100) + "</td></tr>");
          }
      });

  let countStock;
  fetch('https://sandbox.dev.clover.com/v3/merchants/' + merchID + '/item_stocks/' + itemID, options)
      .then(response => response.json())
      .then(response => {
          if (response.stockCount == null) {
              console.error("stockCount returned undefined, refresh and confirm ItemID/MerchantID")
              alert("Could not get stock count at this time, please try again");
          }
          countStock = response.stockCount;
      })
      .catch(err => console.error(err));

  sleep(1000);

  fetch('https://sandbox.dev.clover.com/v3/merchants/' + merchID + '/items/' + itemID + '', options)
      .then(response => response.json())
      .then(response => document.getElementById("priceStock").innerHTML = "Get them while you can!<br>" + response.name + " - " + formatter.format((response.price) / 100) + "<br>" + countStock + " left in stock")
      .catch(err => console.error(err));

  sleep(800);

  fetch('https://sandbox.dev.clover.com/v3/merchants/' + merchID + '/categories/' + espressoID, options)
          .then(response => response.json())
          .then(response => document.getElementById("coffeeTitle").innerHTML = ("View our Wide Selection of " + response.name))
          .catch(err => console.error(err));

  function getInv() {
      fetch('https://sandbox.dev.clover.com/v3/merchants/' + merchID + '/item_stocks/' + itemID, options)
          .then(response => response.json())
          .then(response => countStock = response.stockCount)
          .catch(err => console.error(err));

      sleep(1000);

      fetch('https://sandbox.dev.clover.com/v3/merchants/' + merchID + '/items/' + itemID + '', options)
          .then(response => response.json())
          .then(response => document.getElementById("priceStock").innerHTML = "Get them while you can!<br>" + response.name + " - " + formatter.format((response.price) / 100) + "<br>" + countStock + " left in stock")
          .catch(err => console.error(err));

      sleep(800);

      if (__UP_myBoolIDPref__){
        allIDs = ("Merchant ID: " + merchID + " - " + "Item ID: " + itemID + " - " + "Category ID: " + espressoID);
        document.getElementById("IDvalues").innerHTML = allIDs;
      }
  }
  var date = new Date();
  var current_hour = date.getHours();
  var current_min = date.getMinutes();

  setInterval(function () { 
      getInv();
      console.log("Page has been updated, item count is up to date");
  }, 300000);

</script>

]]>
</Content>
</Module>
