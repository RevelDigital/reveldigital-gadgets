<?xml version="1.0" encoding="UTF-8" ?> 
<Module> 
<ModulePrefs title="RevelDigital Google Calendar Gadget" title_url="https://support.reveldigital.com/hc/en-us/articles/360001531431-Google-Calendar-Integration" description="Lists your current Google Calendar events in chronological order" author="RevelDigital" background="transparent">
  <Locale messages="https://reveldigital.github.io/reveldigital-gadgets/ALL_ALL.xml"/>
  <Locale lang="ru" messages="https://reveldigital.github.io/reveldigital-gadgets/ru_ALL.xml"/>
  <UserPref name="calendarUrl" display_name="Google Calendar ID or URL" datatype="string" />
  <UserPref name="displayFormat" display_name="Display Format"  datatype="enum" default_value="div">
    <EnumValue value="div" display_value="Consolidated" />
    <EnumValue value="table" display_value="Tabular" />
  </UserPref>
  <UserPref name="showHeader" display_name="Show Table Header" datatype="bool" default_value="true" />
  <UserPref name="maxResults" display_name="Max Number of Events" datatype="string" default_value="15" />
  <UserPref name="futureEvents" display_name="Limit Future Events"  datatype="enum" default_value="365">
    <EnumValue value="365" display_value="No Limit" />
    <EnumValue value="0" display_value="Today" />
    <EnumValue value="7" display_value="Next 7 Days" />
    <EnumValue value="30" display_value="Next 30 Days" />
  </UserPref>
  <UserPref name="nextEvents" display_name="Show only Next Events" datatype="bool" default_value="false"/>
  <UserPref name="searchQuery" display_name="Search Query" datatype="string" />
  <UserPref name="header-style" display_name="Header Style" datatype="style" default_value="font-family:Verdana;color:rgb(255, 255, 255);font-size:24px;text-align:left;" required="true" />
  <UserPref name="body-style" display_name="Body Style" datatype="style" default_value="font-family:Verdana;color:rgb(255, 255, 255);font-size:18px;" required="true" />
  <UserPref name="scrollSpeed" display_name="Scroll Speed"  datatype="enum" default_value="none">
    <EnumValue value="fastest" display_value="Fastest" />
    <EnumValue value="fast" display_value="Fast" />
    <EnumValue value="medium" display_value="Medium" />
    <EnumValue value="slow" display_value="Slow" />
    <EnumValue value="none" display_value="None" />
  </UserPref>
  <UserPref name="scrollBy" display_name="Scroll By"  datatype="enum" default_value="continuous">
    <EnumValue value="continuous" display_value="Continuous" />
    <EnumValue value="page" display_value="Page" />
  </UserPref>
  <UserPref name="rdW" display_name="Width" required="true" default_value="280" datatype="hidden" />
  <UserPref name="rdH" display_name="Height" required="true" default_value="190" datatype="hidden" />
  <UserPref name="ForeColor" datatype="hidden" />
  <UserPref name="BackColor" datatype="hidden" />
</ModulePrefs>
<Content type="html">
<![CDATA[
<style type="text/css">
  body *
  {
    line-height: 1.2em; 
    letter-spacing: 0; 
    word-spacing: normal;
  }
  body
  {
    overflow: hidden;
    background: transparent;
    width: __UP_rdW__px;
    height: __UP_rdH__px;
  }
  #data
  {
    background-color: #__UP_BackColor__;
    height: __UP_rdH__px;
  }
  #events table
  {
    color: #__UP_ForeColor__;
    width: __UP_rdW__px;
  }
  #events
  {
    color: #__UP_ForeColor__;
    width: __UP_rdW__px;
  }
  table, div#events
  {
    width: __UP_rdW__px;
    -webkit-user-select: none; 
    -moz-user-select: none; 
    -ms-user-select: none; 
    user-select: none;
  }
  td, th
  {
    padding: 8px;
  }
  th
  {
    __UP_header-style__;
  }
  td
  {
    __UP_body-style__;
  }
  h2
  {
    padding: 0;
    margin: 0 0 10px 0;
    font-weight: normal;
    __UP_header-style__;
  }
  h3
  {
    margin: 0;
    padding: 0;
    font-weight: normal;
    __UP_body-style__;
  }
  img
  {
    float: left;
    width: 200px;
    margin-right: 10px;
  }
  .entry
  {
    padding: 20px 5px;
    border-bottom: solid 1px #ccc;
    clear:both;
  }
  .when
  {
    display:block;
    opacity: 0.7;
    margin-top: 2px;
    font-weight: normal;
    __UP_body-style__;
    font-size: 80% !important;
  }
</style>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js" type="text/javascript"></script>
<script src="https://reveldigital.github.io/reveldigital-gadgets/third-party/moment-with-locales.min.js" type="text/javascript"></script>
<script src="https://reveldigital.github.io/reveldigital-gadgets/third-party/moment-timezone-with-data.min.js" type="text/javascript"></script>
<script src="https://reveldigital.github.io/reveldigital-gadgets/third-party/simpledateformat.js" type="text/javascript"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/1.20.3/TweenLite.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/1.20.3/utils/Draggable.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/1.20.3/plugins/CSSPlugin.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/1.20.1/plugins/ScrollToPlugin.min.js"></script>
<script src="https://reveldigital.github.io/reveldigital-gadgets/third-party/autoscroll.js" type="text/javascript"></script>
<script src="https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js"></script>
<script src="https://reveldigital.github.io/gadget-common/utils.js" type="text/javascript"></script>
<script src="https://www.google.com/jsapi" type="text/javascript"></script>

<div id="data">
  <div id="events" class="scroll">
    <table>
      <thead>
        <tr>
          <th>When</th>
          <th>Event</th>
          <th>Location</th>
        </tr>
      </thead>
      <tbody>
      </tbody>
    </table>
  </div>
</div>

<script type="text/javascript">
  var prefs = new gadgets.Prefs();
  
  function load() {
    
    WebFont.load({
      google: {
        families: [
          RevelDigital.getFamilyName(prefs.getString("header-style"))
        ]
      }
    });
    WebFont.load({
      google: {
        families: [
          RevelDigital.getFamilyName(prefs.getString("body-style"))
        ]
      }
    });
  
    if (prefs.getBool("showHeader") == false) {
      $("#events > table > thead").hide();
    }
    update();
    setInterval(update, 120000);
  }
  gadgets.util.registerOnLoadHandler(load);
</script>
<script type="text/javascript">
  
function update() {

  let now = moment().format();
  
  //console.log("now", now);

  let endDateRange = function(d){
      if( d === "365"){
          return moment().add(1, 'y').format('YYYY-MM-DDThh:mm');
      }else if(d === "0"){
          return moment().add(1, 'd').format('YYYY-MM-DDThh:mm');
      }else if(d === "7"){
          return moment().add(7, 'd').format('YYYY-MM-DDThh:mm');
      }else if(d === "30"){
          return moment().add(1, 'm').format('YYYY-MM-DDThh:mm');
      }
  };


  var url = 'https://glacial-hollows-70580.herokuapp.com/ical/' + now + '/' + endDateRange(prefs.getString("futureEvents")) + 'Z' + '?url=' + prefs.getString("calendarUrl");
  let list;

  fetch(url)
  .then(function (response){
    return response.json();
  })
  .then(function (data) {
      //console.log(JSON.stringify(data,null,2));
      let occurrences = data.occurrences.map(function(o) {
          const recurContainer = {};
          let startTime = moment({ year :o.startDate.year, month :o.startDate.month - 1, day :o.startDate.day, hour :o.startDate.hour, minute :o.startDate.minute, second :o.startDate.second});
          let endTime = moment({ year :o.endDate.year, month :o.endDate.month - 1, day :o.endDate.day, hour :o.endDate.hour, minute :o.endDate.minute, second :o.endDate.second});

      

          recurContainer["startDate"] = startTime;
          recurContainer["endDate"] = endTime;

          o.item.component[1].forEach(function (item) { 
              item.forEach(function (i) {
                  if(i === "location"){
                      recurContainer["location"] = item[3];
                  }else if (i === "summary"){
                      recurContainer["summary"] = item[3];
                  }                   
              })         
          }) 
          return recurContainer 
      });

      let statEvents = data.events.map(function (o) {
          const statContainer = {};

          o.component[1].forEach(function (item) {
              item.forEach(function (i) {
                  if (i === "dtstart"){     
                      statContainer["startDate"] = moment(item[3]);  
                  }else if(i === "dtend"){
                      statContainer["endDate"] = moment(item[3]);    
                  }else if( i === "location"){
                      statContainer["location"] = item[3];
                  }else if (i === "summary"){
                      statContainer["summary"] = item[3];
                  }
              })
          })
          return statContainer
      });

      list = occurrences.concat(statEvents).sort(function (a,b) {  
          return a.startDate - b.startDate
      });  

      console.log(list);   

      for (var i = 0; i < list.length; i++) {
          if (prefs.getBool("nextEvents") == true){
              if(moment(list[i].startDate) < moment() && moment(list[i].endDate) > moment()){            
                  continue;
              }
          }

          if (prefs.getString("displayFormat") == "table") {
              formatTable(list[i]);
          } else {
              formatDiv(list[i]);
          }
      }
  });

  if (prefs.getString("displayFormat") != "table") {
      $("#events").empty();
  } else {
      $("#events > table > tbody").empty();
  }

  


  if (prefs.getString("scrollSpeed") != "none") {
        $("#data").autoScroll({
          speed: prefs.getString("scrollSpeed"),
          by: prefs.getString("scrollBy")
        }).on("done", function() {
          $("#data").data("plugin_autoScroll").play();
        });
        $("#data").data("plugin_autoScroll").play();
      }
}

function formatDiv(event) {
    console.log(event);

  //var startDateTime = event.start.dateTime ? event.start.dateTime : event.start.date;
  //var endDateTime = event.end.dateTime ? event.end.dateTime : event.end.date;
  
  var now = moment();
  var eod = moment().add(prefs.getInt("futureEvents"), 'days').endOf('day');
  var sdt = moment(event.startDate).startOf('day');
  var edt = moment(event.endDate);
  //if (!now.isBetween(sdt, edt))
  if (now.isAfter(edt) || eod.isBefore(sdt))
    return;
  
  var div = $("<div class=\"entry\"></div>");
  
  var h2 = $("<h2></h2>");
  h2.text(event.summary);
  $(div).append(h2);
  
  var h3 = $("<h3></h3>");
  h3.text(event.location);
  $(div).append(h3);
  
  var span = $("<span class=\"when\"></span>");
  
  var sd = moment(event.startDate).format("__MSG_Calendar_DateFormat__");
  var st = moment(event.startDate).format("__MSG_Calendar_TimeFormat__");
  var et = moment(event.endDate).format("__MSG_Calendar_TimeFormat__");
  var ed = moment(event.endDate).format("__MSG_Calendar_DateFormat__");
  
  console.log(ed-sd);


  var time = '';
  if (sd == ed) {
    time += sd;
  } else {
    time += sd + " - " + ed;
  }
  span.text(time + ", " + st + " - " + et);
  $(h3).append(span);
  
  $(div).append("<div style=\"clear:both;\"></div>");
  
  $("#events").append(div);
}

function formatTable(event) {
  var now = moment();
  var eod = moment().add(prefs.getInt("futureEvents"), 'days').endOf('day');
  var sdt = moment(event.startDate).startOf('day');
  var edt = moment(event.endDate);
  //if (!now.isBetween(sdt, edt))
  if (now.isAfter(edt) || eod.isBefore(sdt))
    return;
 
  var isAllDay = false;
  
  var tbody = $("#events > table > tbody");
  var tr = $('<tr/>');
  
  var sd = moment(event.startDate).format("__MSG_Calendar_DateFormat__");
  var st = moment(event.startDate).format("__MSG_Calendar_TimeFormat__");
  var et = moment(event.endDate).format("__MSG_Calendar_TimeFormat__");
  var ed = moment(event.endDate).format("__MSG_Calendar_DateFormat__");

  
  var td = $("<td class=\"date\"/>");
  
  var time = sd;
  

  td.text(st === et ? (time + ' - ' + 'All Day') : time + ", " + st + " - " + et);

  $(tr).append(td);
    
  td = $("<td class=\"title\"/>");
  td.text(event.summary);
  $(tr).append(td);
  
  td = $("<td class=\"where\"/>");
  $(td).text(event.location);
  $(tr).append(td);
  
  $(tbody).append(tr);

}
</script>
<script type="text/javascript">
        
  if('serviceWorker' in navigator) {
    navigator.serviceWorker.register('service-worker')
    .then(registration =>
      console.log('Service Worker Registered')
    );
  }
  
</script>
]]>
</Content>
</Module>
